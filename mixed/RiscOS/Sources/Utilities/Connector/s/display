;
; Copyright (c) 1995, Andreas Zieringer
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met: 
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
;

	AREA	|C$$code|, CODE, READONLY
	GET	Hdr:ListOpts
	GET	Hdr:Macros

	EXPORT	plotspace1
	EXPORT	plotspace2
	EXPORT	plotspace4
	EXPORT	plotspace8
	EXPORT	plotspace16
	EXPORT	plotspace32

	EXPORT	plotsprite16
	EXPORT	plotsprite4

plotspace1
	CMP	a3,#9
	BEQ	small1
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
small1
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1]
	MOV	pc,lr

plotspace2
	CMP	a3,#9
	BEQ	small2
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
small2
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1]
	MOV	pc,lr

plotspace4
	CMP	a3,#9
	BEQ	small4
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
small4
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1]
	MOV	pc,lr

plotspace8
	MOV	a4,a2
	CMP	a3,#9
	BEQ	small8
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
small8
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	MOV	pc,lr

plotspace16
	MOV	a4,a2
	MOV	ip,a2
	CMP	a3,#9
	BEQ	small16
	MOV	a3,a2
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
small16
	MOV	a3,a2
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	MOV	pc,lr

plotspace32
	MOV	a4,a2
	MOV	ip,a2
	CMP	a3,#9
	BEQ	small16
	MOV	a3,a2
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528

small32
	MOV	a3,a2
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	MOV	pc,lr


plotsprite16
	; r0=screenaddress
	; r1=sprite
	; r2=xsize in bytes

	Push	"r4-r11"

	SUB	r2,r2,#1280
	MOV	r11,#16
loop161
	MOV	r12,#40
loop162
	LDMIA	r1!,{r3-r10}
	STMIA	r0!,{r3-r10}
	SUBS	r12,r12,#1
	BNE	loop162
	SUBS	r11,r11,#1
	ADD	r0,r0,r2
	BNE	loop161

	Pull	"r4-r11"
	MOV	pc,lr

plotsprite4
	; r0=screenaddress
	; r1=sprite
	; r2=xsize in bytes

	Push	"r4-r11"

	SUB	r2,r2,#320
	MOV	r11,#16
loop41
	MOV	r12,#10
loop42
	LDMIA	r1!,{r3-r10}
        STMIA	r0!,{r3-r10}
	SUBS	r12,r12,#1
	BNE	loop42
	SUBS	r11,r11,#1
	ADD	r0,r0,r2
	BNE	loop41

	Pull	"r4-r11"
	MOV	pc,lr

	END
