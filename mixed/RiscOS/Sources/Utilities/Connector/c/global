/*
 * Copyright (c) 1995, Andreas Zieringer
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#include "Desk/Wimp.h"
#include "Desk/LinkList.h"
#include "Desk/Slider.h"
#include "Desk/Dialog.h"
#include "Desk/File.h"
#include "Desk/Save.h"
#include "Desk/Font.h"

#include "osspriteop.h"

#include "defines.h"
#include "driver.h"
#include "type.h"
#include "spool.h"

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <signal.h>
#include <setjmp.h>
#include <time.h>

char config_ro_filename[MAX_PATHLENGTH];
char config_filename[MAX_PATHLENGTH];

int mouse_ctrl=0;

int statusline=1;
int use_dosmap=0;

int clear_terminal=0;
int dropped_in_tools_window=0;
int send_all=0;

int script_hangup=0;
int transfer_active=FALSE;

int sinfo_open=0;
int sinfo_open_0=0;

int avatar=1;
int avatar_0=1;

int local_max_port_nr=0;
int truncate_filename=10;

char *sb_label[8];
char *sb_data[8];

char *sb_label_0[8];
char *sb_data_0[8];

char *t_sb_label[8];
char *t_sb_data[8];

int sb_height;
int show_sb=1,show_sb_0=1;


/*
unsigned char bitfont[6912];
unsigned char iso_bitfont[6912];
*/
int ansi_font=0;
int vt_font=0;

int ansi_charheight=16;
int vt_charheight=16;
int ZA=32;

//Desk_icon_block text_icon;
Desk_font_handle font_handle;


int title_bar_height=40;
time_t log_start_time=(time_t)-1;
char log_number[80];
char log_name[80];

int scroll_above=0;
int cept_xmin,cept_ymin,cept_xmax,cept_ymax;

int online_time_width;

char *fkeys[12];
char *fkeys_0[12];
char *t_fkeys[12];

int cept_zoom=100;
int ackint=1;
int ackint_0=1;

int discbuffer=16;
//int discbuffer_0=16;

int clear_screen=0;
int spool_frame=0;
int spool_frame_0=0;

int f_keys=1;

//int rx_check=0;
//jmp_buf rxjmp;


int cursor_on=1;

//Desk_icon_block online_time_icon;

int banner_time=0;
int banner_xsize,banner_ysize;
int banner_exist=0;

int filetr_finished=FALSE;

int filetr_abort=FALSE;

int tx_window=-1;
int tx_window_size=1;
int tx_window_0=FALSE;
int tx_window_size_0=1;

int serial_port_claimed=FALSE;
int window_dial=FALSE;

int autologon=1;

int ascii_char_delay=0;
int ascii_line_delay=0;
int ascii_trans=0;
int ascii_char_delay_0=0;
int ascii_line_delay_0=0;
int ascii_trans_0=0;

char *ascii_trans_str[4];


int btx_wait=0;

int xclip0,xclip1,yclip0,yclip1;
osspriteop_trans_tab *trans_tab;
os_factors factors;

char *mousebuffer=NULL; //[6000];

/******************************** GLOBAL DATA *******************************/
Desk_window_handle dir_window;
Desk_window_handle haupt_window;
Desk_window_handle info_window;
Desk_window_handle pane_window;
Desk_window_handle unten_window;
Desk_window_handle filetrans_window;
Desk_window_handle exporttext_window;
Desk_window_handle exportdata_window;
Desk_window_handle send_window;
Desk_window_handle colours_window;
//Desk_window_handle receive_window;
Desk_window_handle dial_window;
Desk_window_handle tools_window;
Desk_window_handle edit_window;
Desk_window_handle spool_window;
Desk_window_handle banner_window;
Desk_window_handle fkeys_window;
Desk_window_handle fkeys2_window;
Desk_window_handle xmodem_window;
Desk_window_handle ymodem_window;
Desk_window_handle zmodem_window;
Desk_window_handle ascii_window;
Desk_window_handle smartbutton_window;
Desk_window_handle sbedit_window;
Desk_window_handle sbedit2_window;
Desk_window_handle driverinfo_window;
Desk_window_handle ansi_window;
Desk_window_handle vt100_window;

//Desk_window_handle config_window;
//Desk_window_handle config_pane_window;
Desk_window_handle configure_window;
Desk_window_handle cmodem_window;
Desk_window_handle cterminal_window;
Desk_window_handle cserial_window;
Desk_window_handle cfiletr_window;

Desk_window_handle sinfo_window;

int save_handler_type;

Desk_bool esc_break=Desk_FALSE;
int import_ascii=0;

int xmodem_protocol=0;
int ymodem_protocol=3;

int xmodem_crc=1;
int xmodem_k=1;
int ymodem_crc=1;
int ymodem_k=1;

int xmodem_crc_0=1;
int xmodem_k_0=1;
int ymodem_crc_0=1;
int ymodem_k_0=1;

unsigned int *screen_address;

int pause_status=0;

char t_name[80];
char *t_number[MAX_NUMBERS+1];
int t_number_nr=0;
int t_terminal;
int t_baud;
int t_filetr;
int t_data;
int t_wrap;
int t_echo;
int t_lines25;
int t_crtocrlf;
int t_lftocrlf;
int t_online;
char t_modeminit[80];
char t_download[255];
char *t_filename[MAX_SCRIPTS];
int t_send_crashrecovery;
int t_receive_file_action;
int t_tx_window;
int t_tx_window_size;
int t_ackint;
int t_xmodem_crc;
int t_xmodem_k;
int t_ymodem_crc;
int t_ymodem_k;
int t_ascii_char_delay;
int t_ascii_line_delay;
int t_ascii_trans;
int t_avatar=1;

int number_of_scripts;

int null_event_time;

int cycle_dial[255];
int cycle_dial_pos=0;

int riscosfiletype=0;
int buffersize=16;
int send_crashrecovery=0;
int send_crashrecovery_0=0;
int receive_file_action=RENAME;
int receive_file_action_0=RENAME;

int remote_lines=12;  //beide zusammen muessen 23 ergeben
int local_lines=11;
int chat_special=0;
int close_filetrans=1;

int cursorkeys_mode=0;
int terminal_height=24;
int ansi_terminal_height=24;
int ansi_terminal_height_0=24;

int ascii_abort=0;

//Desk_save_saveblock *export_data;
int export_data_text=0;
int export_data_text_0=0;
//Desk_save_saveblock *export_text;

Desk_icon_incdecblock *incdec_cserial;
//int isofont=0;
Desk_file_handle logon_file=-1;

int online_time;
int online;
int logon=0;
int auto_logon;
char script_name[80];
char gstring[MAX_PATHLENGTH];
char gstring2[MAX_PATHLENGTH];

int color_window_type;

dialog ok_dialog;
dialog message_dialog;
int message_open_time;
int message_open=FALSE;

Desk_menu_ptr dial_menu=NULL;
Desk_menu_ptr icon_menu;
Desk_menu_ptr haupt_menu;
Desk_menu_ptr baud_menu;
Desk_menu_ptr terminal_menu;
Desk_menu_ptr data_menu;
Desk_menu_ptr transfer_menu;
Desk_menu_ptr driver_menu;
Desk_menu_ptr flow_menu;
Desk_menu_ptr transfertype_menu;
Desk_menu_ptr modem_menu;
Desk_menu_ptr special_menu;
Desk_menu_ptr ascii_menu;
Desk_menu_ptr wrap_menu;
Desk_menu_ptr logon_menu;
Desk_menu_ptr import_menu;
Desk_menu_ptr send_menu;
Desk_menu_ptr filetypes_menu;
//Desk_menu_ptr status_menu;

int local_echo=FALSE;
int local_echo_0=FALSE;

Desk_file_handle spool_file=-1;
int spool_action=STOP;
Desk_file_position spool_position=0;
int spool_end;
int spool_speed=1;
int old_spool_speed=1;
int spool_once=0;
int spool_pause=0;
char spool_filename[MAX_PATHLENGTH];
Desk_slider_info spool_slider;
Desk_slider_info filetrans_slider;

Desk_linklist_header  Files = {NULL,NULL};
int file_droped=FALSE;
int file_nr=0;
int old_file_nr=0;

int serial_input_buffer_size=16384;
int serial_output_buffer_size=4096;
int serial_input_buffer=TRUE;
int serial_output_buffer=TRUE;

int dynamic_area;
int version;

Desk_task_handle Task_Handle;
Desk_task_handle other_task_handle;

unsigned int *text_buffer=NULL;
int text_buffer_size=72;
int tb_above=(72-24)*80;
int tb_all=72*80;
int screen_above=1536;

unsigned char *zeichen=NULL;

int cursorX=0,cursorY=0;
unsigned int  normal_attr;
unsigned int  attrib;
unsigned int  backcolor=7;
unsigned int  oldattr=0;
char          astring[80];
//int           driver_block[2048];
int           *driver_block=NULL;
int           internal_driver=1;

drivers_block drivers[16];
int           number_of_drivers;
int           portnumber=0;
int           portnumber_0=0;
int           max_port_nr=0;


//os_f          xferh;
int           got;
char          downloads_directory[MAX_PATHLENGTH];
char          old_downloads_directory[MAX_PATHLENGTH];
char          file_path[MAX_PATHLENGTH];
int cursor=FALSE;
int number_of_icons;  /* Statusfenster */

int error_ref=0;
int error_value;
Desk_window_handle error_handle;

char iconbar_text[12]="   Busy   ";
Desk_icon_handle baricon;


/* Bildschirm */

int log2bpp, ncolour, modeflags;
int highres=FALSE;

//int wrap=1;
int wrap_0=1;

int status_open=FALSE;

unsigned int screen_status;

Desk_sprite_area spritearea=NULL;
//osspriteop_id   sprite_id;

osspriteop_area *cept_spritearea=NULL;
osspriteop_id   cept_sprite_id;

Desk_sprite_area usericonsprites=NULL;
Desk_sprite_area bannersprite=NULL;

/*******************************/

FILE *fd;



 char block_driver_name[12];
 int  driver_nr;
 int  new_driver_nr;
 int  choosed_driver_nr=-1;

 char driver_menu_string[255];

 Desk_mouse_block oldmouse;

 int haupt_open=FALSE;
 int redit_open=FALSE;
 int dir_open=FALSE;
 int configure_open=FALSE;
 int dial_open=FALSE;
 int filetrans_open=FALSE;
 int colours_open=FALSE;
 int send_open=FALSE;

 int save_modem_status=FALSE;
 int  unten_offset;
 Desk_window_handle input_focus;

 int autodial=FALSE;
 int dialing=FALSE;
 int dial_delay;
 int beep_online=FALSE;
 int beep_transfer=FALSE;
 int toolbar=TRUE;
 int toolbar_type=1;

 int init_modem;

 char old_number[41];
 int dial_time=0;
 int dial_delay_time=0;

/**  aktueller handle **/
 Desk_window_handle menu_Desk_window_handle;
 Desk_icon_handle menu_Desk_icon_handle;
 int editaction;

 int xorigin,yorigin;
 int cept_xorigin,cept_yorigin;

//unsigned char bitfont[3600];
 unsigned char *bit_font;

 int screentop=1;
 int screenbottom=24;  /* Definiert Scrollbereich */
 int dragging=0;
 int dragx;

/*
 edit_data daten[20]=0;
 int daten_anzahl=15;
*/
 modem_str modem;

 int script_nr=0;

 Desk_event_pollblock e;
/* int time;*/


 int           filelen;


 int crtocrlf=FALSE;
 int lftocrlf=FALSE;

 int crtocrlf_0=FALSE;
 int lftocrlf_0=FALSE;

 int forecolor=0;
 int cursorcolor=0; //0x00cc7700;
 int wer;   /* fuer colourauswahl */

 int flash;
 int cursor_flashing;
 int text_flash;
 int text_flashing=1;


 char dial_number[41];
 char old_dial_number[41];


 int dial_terminal_nr=0;
 int dial_baud_nr=0;
 int dial_data_nr=0;

 int dial_terminal_nr_0=0;
 int dial_baud_nr_0=0;
 int dial_data_nr_0=0;

 int edit_terminal_nr=0;
 int edit_baud_nr=0;
 int edit_filetr_nr=0;
 int edit_data_nr=0;


 int transfer_type_nr=0;
 int transfer_type_nr_0=0;


 int flow_type_nr=0;
 int flow_type_nr_0=0;
 int choosed_flow_type_nr=0;

 struct terminal_st
       {
         char *string;
       } terminal[]={ {"VT102"},{"ANSI"},{"Chat"},{"Cept"} };
 struct baud_st
       {
         char *string;
         int value;
       } baud[]={ {"300",300},{"1200",1200},{"2400",2400},{"4800",4800},{"9600",9600},{"19200",19200},{"38400",38400},{"57600",57600},{"115200",115200},{"230400",230400} };
 struct data_st
       {
         char *string;
         int value;
       } data[]={ {"7E2",29},{"7O2",13},{"7E1",25},{"7O1",9},{"8N2",4},{"8N1",0},{"8E1",24},{"8O1",8} };

char *transfer[]={ "XModem","YModem","ZModem","Ascii","Kermit" };

char *flow[]={ "No flow control","Hardware","XON/XOFF","Both" };


unsigned char ttstate=0;
unsigned originmode;              /* Origin mode, relative or absolute */
unsigned insertmode;              /* Insert mode, off or on */
unsigned int autowrap=1;                /* Automatic wrap mode, off or on */
unsigned newline;                 /* Newline mode, off or on,  GLOBAL data!*/
unsigned cursorvisible;           /* Cursor visibility, on or hidden */
unsigned reversebackground;       /* Reverse background attribute, on or off*/
unsigned screenwid;               /* Screen column width */




char term_id_str[]= "[?6c";     /* VT102 id string Vt100 = '[?1;2c' */
#define lansarg 10                /* Max number of ANSI arguments */
int nansarg = 0;           /* Index for ANSI argument list */
int ansargs[lansarg];      /* Room for 10 ANSI arguments */
unsigned char lastc;

/* Messages */

message_text msg[NR_OF_MESSAGES];

char zmodem_receive_string[7];
char zmodem_send_string[7];

char *ws="      "; // 6
char *wsl="                    "; // 20


char filetypes[4096];
char old_filetypes[4096];
int drop_dtr=0;


int german_keyb=FALSE;


unsigned char keyb_table[]={ 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,
                                    16,17,18,19,20,21,22,23,24,26,25,27,28,29,30,31,
                                    32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,
                                    48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,
                                    64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,
                                    80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,
                                    96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,
                                    112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,
                                    128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,
                                    144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,
                                    160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,
                                    176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,
                                    192,193,194,195,142,197,198,199,200,201,202,203,204,205,206,207,
                                    208,209,210,211,212,213,153,215,216,217,218,219,154,221,222,225,
                                    224,225,226,227,132,229,230,231,232,233,234,235,236,237,238,239,
                                    240,241,242,243,244,245,148,247,248,249,250,251,129,253,254,255
                                  };

unsigned char keyb_table2[]={ 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,
                                    16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,
                                    32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,
                                    48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,
                                    64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,
                                    80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,
                                    96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,
                                    112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,
                                    128,252,130,131,228,133,134,135,136,137,138,139,140,141,196,143,
                                    144,145,146,147,246,149,150,151,152,214,220,155,156,157,158,159,
                                    160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,
                                    176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,
                                    192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,
                                    208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
                                    224,223,226,227,228,229,230,231,232,233,234,235,236,237,238,239,
                                    240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
                                  };



