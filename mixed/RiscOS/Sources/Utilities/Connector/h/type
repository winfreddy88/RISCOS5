/*
 * Copyright (c) 1995, Andreas Zieringer
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#include "Desk/Wimp.h"

typedef struct
        {
            char name[20];
            char number[41];
            int terminal_nr;
            int baud_nr;
            int data_nr;
            int auto_logon;
            char script_name[32];
            int  wrap;
            int lines;
        } edit_data;

typedef struct
        {
            char init[60];
            char dialprefix[60];
            char dialsuffix[60];
            char hangup[60];
            char answer[60];
        } modem_str;

typedef struct {
                 Desk_linklist_header header;
                 edit_data   daten;
               } t_element;


typedef struct
        {
          char text[80];
        } message_text;


typedef struct
{
  Desk_linklist_header header;
  char name[60];
  char path[MAX_PATHLENGTH];
  int filetype;
  int size;
  int sent;
  int selected;
} file_des;

typedef struct
        {
          Desk_icon_handle iconnr;
          Desk_window_handle window;
          int line;
          Desk_icon_block *icon;
        } card_icons;

typedef struct
        {
          Desk_window_handle window;
          int nr_of_cards;
          int active_card;
          int nr_of_lines;
          int y0,y1;
          Desk_icon_handle backicon;
          Desk_wimp_box box;
          card_icons *icons;
        } card_block;
