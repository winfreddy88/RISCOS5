/*
 * Copyright (c) 1986, HIRANO Satoshi
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 * 
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer. 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution. 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * hterm.h: hterm constant definitions and variables
 *
 * Author: HIRANO Satoshi
 * (C) 1989  Halca Computer Science Laboratory TM
 *           University of Tokyo
 *
 * Edition history:
 * 3.1 87/06/17 Halca.Hirano conbine hterm/pc and hterm/98 into
 * 				a set of source file
 * 3.2 89/05/16 Halca.Hirano V2.2 distribution
 * 3.3 89/06/16 Halca.Hirano move machine dependent part to config.h
 * 3.4 89/07/27 Halca.Hirano make assembly functions far
 * ---- V2.3.-1.1 distritution ----
 * 3.5 89/09/10 Halca.Hirano
 * ---- V2.3.0.0 distribution
 * 3.5 89/09/21 Halca.Hirano add xmodem
 * ---- V2.4.0.0 distribution
 *
 * $Header: /home/rool/cvsroot/mixed/RiscOS/Sources/Utilities/Connector/h/Hterm,v 1.2 2016/01/17 10:32:50 rsprowson Exp $
 */

#include "config.h"

/*
 * hterm internal character code definition
 *
 * Character code definition between modules (C source files) is here.
 *
 * 00xx		if bit 7 of xx is 0, it's ASCII code.
 * 00xx		if bit 7 of xx is 1, it's kana code.
 * xx00		hterm special control code (such as CTRL-PF key, curosr key)
 * xxyy		JIS kanji code without preamble
 */

/*
 * colums and lines
 */
#define MAX_COLUMN 80
#define LAST_COLUMN (MAX_COLUMN-1)
#define MAX_LINE_19_MODE 19	/* use with FEP			*/
#define MAX_LINE_20_MODE 20	/* may not with status line	*/
#define MAX_LINE_24_MODE 24	/* 25mode with FEP		*/
#define MAX_LINE_25_MODE 25	/* may not with status line	*/
#define BOTTOM_LINE_19_MODE (MAX_LINE_19_MODE-1)
#define BOTTOM_LINE_20_MODE (MAX_LINE_20_MODE-1)
#define BOTTOM_LINE_24_MODE (MAX_LINE_24_MODE-1)
#define BOTTOM_LINE_25_MODE (MAX_LINE_25_MODE-1)
#define SETUP_LINE 16
#define MAX_CHAR (MAX_COLUMN * MAX_LINE_25_MODE)

/*
 * characters
 */
#define NUL	0x00
#define SOH	0x01
#define ENQ	0x05
#define BEL	0x07
#define BS	0x08
#define HT	0x09
#define TAB	0x09
#define LF	0x0a
#define VT	0x0b
#define FF	0x0c
#define CR	0x0d
#define SO	0x0e
#define SI	0x0f
#define DC1	0x11
#define DC3	0x13
#define CAN	0x18
#define SUB	0x1a

#define ESC	27

#define SPACE	0x20
#define	DEL	0x7f
#define	SS2	0x8e
#define	SS3	0x8f
#define CSI	0x9b

#define	isSJIS1(c)	((0x81 <= (c) && (c) <= 0x9f) || (0xe0 <= (c) && (c) <=0xfc))
#define	isSJIS2(c)	((0x40 <= (c) && (c) <= 0x7e) || (0x80 <= (c)))
#define isEUC(x) 	((x) & 0x80)
#define	isKana(c)	(0xa0 <= (c) && (c) <= 0xdf)
#define isHtermCtrl(c)	(((c) & 0x80) && !isKana(c))
#define isAscii(c)	((c) >= 0x20 && (c) <= 0x7e)
#define CTRL(c)		((c)-0x40)

/*
 * flags
 */
#define YES	1
#define	NO	0
#define OK	0
#define ERR	(-1)
#define UP 1
#define DOWN 2
#define RIGHT	3
#define LEFT	4
/* file transfer panel tags */
#define	X_FILENAME	(0)
#define	X_PROTOCOL	(1)
#define	X_PERCENT	(2)
#define	X_KBYTES	(3)
#define	X_PSENT		(4)
#define	X_PRECV		(5)
#define	X_RATE		(6)
#define	X_RETRY		(7)
#define	X_PSIZE		(8)
#define	X_STATUS	(9)
#define	X_ERROR		(10)

#define E_HELP		1		/* emacs with help	*/
#define E_NO_HELP	0		/* emacs without help	*/


/*
 * ansi escape sequence mode
 */
extern int originMode;			/* origin mode flag		*/
extern unsigned int saveX, saveY, saveAttr;	/* save cursor position		*/
extern unsigned int ansiVramSave[MAX_CHAR];

/*
 * display mode
 */
extern unsigned int maxLine;			/* lines usable fotm the host	*/
extern unsigned int realMaxLine;		/* physical lines on the screen	*/
extern unsigned int bottomLine;			/* lowest line for the host	*/
extern unsigned int realBottomLine;		/* physical lowest line		*/
extern unsigned int vramSegment;		/* VRAM segment 		*/
extern int lineMode;			/* line mode LINE_MODE_20/24/25	*/
extern int cursorX;			/* cursor X coordinate		*/
extern int cursorY;			/* cursor Y coordinate		*/
extern unsigned int attrib;			/* attribute			*/
extern int cursor;				/* cursor display flag		*/
extern int vtTypeWrap;			/* VT auto wrap (need xn)	*/
extern int	formfeed;			/* foomfeed mode (FF/LF)	*/
extern int blinkCursor;			/* blinking = YES, static = NO	*/
extern int blockCursor;			/* block = YES, underLine = NO	*/
extern int autoWrap;			/* auto wrap mode		*/
extern unsigned int upScrRegion;		/* upper scroll region		*/
extern unsigned int lowScrRegion;		/* lower scroll region		*/
extern int echoMode;			/* echo back flag		*/
extern int smooth;				/* smooth scroll mode for PC98	*/
extern int smLine;				/* scroll lines if smooth scroll */
extern int scrollRate;			/* smooth scroll rate 		*/
extern int backQuote;			/* can display back quote/slash */
extern int kanjiCode;			/* kanji code			*/
extern int kfirst;				/* first byte of kanji		*/
extern int kstate;				/* roman/kana/kanji state	*/
extern unsigned int page;			/* active screen page number	*/
extern char tabTable[MAX_COLUMN];		/* tab stop table		*/
extern int	spaceTab;			/* number of tabs in the table	*/
extern int visibleBell;			/* use visible bell		*/

/*
 * keyboard
 */
extern int	clickFlag;		/* key click flag(1=click)	*/
extern int	stopFlag;		/* stop key flag		*/
extern int copyFlag;		/* copy key flag		*/
/*extern int	newline;*/		/* newline flag(1=newline)	*/
extern int	asckey;			/* ascii keyboard mode for PC98(1=ascii)*/
extern int applCursor;		/* application cursor flag (1=appl)	*/
extern int	applKeypad;		/* application keypad flag (1=appl)	*/
extern short fepState;		/* front end processor state (1=fep)	*/
extern int	fepInvoke;		/* fep invoke sequence			*/
extern int bsDel;			/* if 0 BS->BS, else BS->DEL key	*/
extern int shiftLock;		/* shift/ctrl lock (1=lock)		*/
extern int dosMode;		/* in DOS mode				*/
extern int mouseSpeed;		/* mouse speed				*/

