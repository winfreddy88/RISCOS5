/*
 * Copyright (c) 1995, Andreas Zieringer
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include "Desk/Wimp.h"
#include "Desk/LinkList.h"
#include "Desk/Slider.h"
#include "Desk/Dialog.h"
#include "Desk/File.h"
#include "Desk/Save.h"
#include "Desk/Font.h"
#include "Desk/Dialog.h"

#include "osspriteop.h"

#include "driver.h"
#include "defines.h"
#include "type.h"

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <signal.h>
#include <setjmp.h>
#include <time.h>

extern char config_ro_filename[]; /* Read only */
extern char config_filename[];    /* Writes */

extern int mouse_ctrl;

extern int statusline;
extern int use_dosmap;

extern int clear_terminal;
extern int dropped_in_tools_window;
extern int send_all;

extern int script_hangup;

extern int transfer_active;

extern int sinfo_open;
extern int sinfo_open_0;

extern int avatar;
extern int avatar_0;

extern int local_max_port_nr;
extern int truncate_filename;

extern char *sb_label[8];
extern char *sb_data[8];

extern char *sb_label_0[8];
extern char *sb_data_0[8];

extern char *t_sb_label[8];
extern char *t_sb_data[8];

extern int sb_height;
extern int show_sb,show_sb_0;

extern int vt_font,ansi_font;

extern int ansi_charheight;
extern int vt_charheight;
extern int ZA;

extern Desk_font_handle font_handle;
//extern Desk_icon_block text_icon;


extern int title_bar_height;

extern time_t log_start_time;
extern char log_number[];
extern char log_name[];



extern int scroll_above;
extern int cept_xmin,cept_ymin,cept_xmax,cept_ymax;

extern int online_time_width;

extern char *fkeys[];
extern char *fkeys_0[];
extern char *t_fkeys[];

extern int cept_zoom;
extern int ackint;
extern int ackint_0;
extern int discbuffer;
//extern int discbuffer_0;

extern int clear_screen;
extern int spool_frame;
extern int spool_frame_0;

extern int f_keys;

/*
extern int rx_check;
extern jmp_buf rxjmp;

extern Desk_icon_block online_time_icon;
*/

extern int cursor_on;

extern int banner_time;
extern int banner_xsize,banner_ysize;
extern int banner_exist;

extern int filetr_finished;

extern int filetr_abort;
extern int tx_window;
extern int tx_window_size;
extern int tx_window_0;
extern int tx_window_size_0;

extern int serial_port_claimed;
extern int window_dial;

extern int autologon;

extern int ascii_char_delay;
extern int ascii_line_delay;
extern int ascii_trans;
extern int ascii_char_delay_0;
extern int ascii_line_delay_0;
extern int ascii_trans_0;

extern char *ascii_trans_str[];

extern int btx_wait;

extern int xclip0,xclip1,yclip0,yclip1;

extern osspriteop_trans_tab *trans_tab;
extern os_factors factors;

extern char *mousebuffer; //[];

/******************************** GLOBAL DATA *******************************/
extern Desk_window_handle dir_window;
extern Desk_window_handle haupt_window;
extern Desk_window_handle info_window;
extern Desk_window_handle pane_window;
extern Desk_window_handle unten_window;
extern Desk_window_handle filetrans_window;
extern Desk_window_handle exporttext_window;
extern Desk_window_handle exportdata_window;
extern Desk_window_handle send_window;
extern Desk_window_handle colours_window;
//extern Desk_window_handle receive_window;
extern Desk_window_handle dial_window;
extern Desk_window_handle tools_window;
extern Desk_window_handle edit_window;
extern Desk_window_handle spool_window;
extern Desk_window_handle banner_window;
extern Desk_window_handle fkeys_window;
extern Desk_window_handle fkeys2_window;
extern Desk_window_handle xmodem_window;
extern Desk_window_handle ymodem_window;
extern Desk_window_handle zmodem_window;
extern Desk_window_handle ascii_window;
extern Desk_window_handle smartbutton_window;
extern Desk_window_handle sbedit_window;
extern Desk_window_handle sbedit2_window;
extern Desk_window_handle driverinfo_window;
extern Desk_window_handle ansi_window;
extern Desk_window_handle vt100_window;
//extern Desk_window_handle config_window;
//extern Desk_window_handle config_pane_window;
extern Desk_window_handle configure_window;
extern Desk_window_handle cmodem_window;
extern Desk_window_handle cterminal_window;
extern Desk_window_handle cserial_window;
extern Desk_window_handle cfiletr_window;

extern Desk_window_handle sinfo_window;

extern int save_handler_type;

extern int esc_break;
extern int import_ascii;

extern int xmodem_protocol;
extern int ymodem_protocol;

extern int xmodem_crc;
extern int xmodem_k;
extern int ymodem_crc;
extern int ymodem_k;

extern int xmodem_crc_0;
extern int xmodem_k_0;
extern int ymodem_crc_0;
extern int ymodem_k_0;


extern unsigned int *screen_address;

extern int pause_status;

extern char t_name[];
extern char *t_number[];
extern int t_number_nr;
extern int t_terminal;
extern int t_baud;
extern int t_data;
extern int t_filetr;
extern int t_wrap;
extern int t_echo;
extern int t_lines25;
extern int t_crtocrlf;
extern int t_lftocrlf;
extern int t_online;
extern char t_modeminit[];
extern char t_download[];
extern char *t_filename[];
extern int t_send_crashrecovery;
extern int t_receive_file_action;
extern int t_tx_window;
extern int t_tx_window_size;
extern int t_ackint;
extern int t_xmodem_crc;
extern int t_xmodem_k;
extern int t_ymodem_crc;
extern int t_ymodem_k;
extern int t_ascii_char_delay;
extern int t_ascii_line_delay;
extern int t_ascii_trans;
extern int t_avatar;

extern int number_of_scripts;

extern int null_event_time;

extern int cycle_dial[];
extern int cycle_dial_pos;

extern int riscosfiletype;
extern int buffersize;
extern int send_crashrecovery;
extern int send_crashrecovery_0;
extern int receive_file_action;
extern int receive_file_action_0;

extern int remote_lines;
extern int local_lines;
extern int chat_special;
extern int close_filetrans;

extern int cursorkeys_mode;
extern int terminal_height;
extern int ansi_terminal_height;
extern int ansi_terminal_height_0;

extern int ascii_abort;

extern Desk_save_saveblock *export_data;
extern int export_data_text;
extern int export_data_text_0;
extern Desk_save_saveblock *export_text;


extern Desk_icon_incdecblock *incdec_cserial;
/*extern int isofont;*/
extern Desk_file_handle logon_file;

extern int online_time;
extern int online;
extern int logon;
extern int auto_logon;
extern char script_name[];
extern char gstring[];
extern char gstring2[];

extern int color_window_type;

extern dialog ok_dialog;
extern dialog message_dialog;
extern int message_open_time;
extern int message_open;

extern Desk_menu_ptr dial_menu;
extern Desk_menu_ptr icon_menu;
extern Desk_menu_ptr haupt_menu;
extern Desk_menu_ptr baud_menu;
extern Desk_menu_ptr terminal_menu;
extern Desk_menu_ptr data_menu;
extern Desk_menu_ptr transfer_menu;
extern Desk_menu_ptr driver_menu;
extern Desk_menu_ptr flow_menu;
extern Desk_menu_ptr transfertype_menu;
extern Desk_menu_ptr modem_menu;
extern Desk_menu_ptr special_menu;
extern Desk_menu_ptr ascii_menu;
extern Desk_menu_ptr wrap_menu;
extern Desk_menu_ptr logon_menu;
extern Desk_menu_ptr import_menu;
extern Desk_menu_ptr send_menu;
extern Desk_menu_ptr filetypes_menu;
//extern Desk_menu_ptr status_menu;

extern int local_echo;
extern int local_echo_0;

extern Desk_file_handle spool_file;
extern int spool_action;
extern Desk_file_position spool_position;
extern int spool_end;
extern int spool_speed;
extern int old_spool_speed;
extern int spool_once;
extern int spool_pause;
extern char spool_filename[];
extern Desk_slider_info spool_slider;
extern Desk_slider_info filetrans_slider;

extern Desk_linklist_header  Files;
extern int file_droped;
extern int file_nr;
extern int old_file_nr;

extern int serial_input_buffer_size;
extern int serial_output_buffer_size;
extern int serial_input_buffer;
extern int serial_output_buffer;


extern int dynamic_area;
extern int version;

extern Desk_task_handle Task_Handle;
extern Desk_task_handle other_task_handle;

extern unsigned int *text_buffer;
extern int text_buffer_size;
extern int tb_above;
extern int tb_all;
extern int screen_above;
extern unsigned char *zeichen;

extern int cursorX,cursorY;
extern unsigned int  normal_attr;
extern unsigned int  attrib;
extern unsigned int  backcolor;
extern unsigned int  oldattr;
extern char          astring[];
/*extern int           driver_block[];*/
extern int           *driver_block;
extern drivers_block drivers[];
extern int           number_of_drivers;
extern int           portnumber;
extern int           portnumber_0;
extern int           max_port_nr;
extern int internal_driver;

/*extern os_f          xferh;*/
extern int           got;
extern char          downloads_directory[];
extern char          old_downloads_directory[];
extern char          file_path[];
extern int cursor;
extern int number_of_icons;  /* Statusfenster */

extern int error_ref;
extern int error_value;
extern Desk_window_handle error_handle;

extern char iconbar_text[];
extern Desk_icon_handle baricon;

/* Bildschirm */

extern int log2bpp, ncolour, modeflags;
extern int highres;

extern int wrap;
extern int wrap_0;

extern int status_open;

extern unsigned int screen_status;

extern Desk_sprite_area spritearea;

extern osspriteop_area *cept_spritearea;
extern osspriteop_id   cept_sprite_id;


extern Desk_sprite_area usericonsprites;
extern Desk_sprite_area bannersprite;
/*******************************/

extern FILE *fd;

extern  char block_driver_name[];
extern  int  driver_nr;
extern  int  new_driver_nr;
extern  int  choosed_driver_nr;

extern  char driver_menu_string[];

extern Desk_mouse_block oldmouse;

extern  int haupt_open;
extern  int redit_open;
extern  int dir_open;
extern  int configure_open;
extern  int dial_open;
extern  int filetrans_open;
extern  int colours_open;
extern  int send_open;

extern  int save_modem_status;
extern  int  unten_offset;
extern  Desk_window_handle input_focus;

extern int autodial;
extern int dialing;
extern int dial_delay;
extern int beep_online;
extern int beep_transfer;
extern int toolbar;
extern int toolbar_type;

extern int init_modem;

extern char old_number[];
extern int dial_time;
extern int dial_delay_time;

/**  aktueller handle **/
extern  Desk_window_handle menu_window_handle;
extern  Desk_icon_handle menu_icon_handle;
extern  int editaction;


extern  int xorigin,yorigin;
extern  int cept_xorigin,cept_yorigin;

extern  unsigned char bitfont[];
extern  unsigned char iso_bitfont[];
extern  unsigned char *bit_font;


extern  int screentop;
extern  int screenbottom;  /* Definiert Scrollbereich */
extern  int dragging;
extern  int dragx;

extern  modem_str modem;

extern  int script_nr;

extern  Desk_event_pollblock e;

extern  int           filelen;

extern int crtocrlf;
extern int lftocrlf;

extern int crtocrlf_0;
extern int lftocrlf_0;

extern  int forecolor;
extern  int cursorcolor;
extern  int wer;   /* fuer colourauswahl */
extern  int flash;
extern  int cursor_flashing;
extern  int text_flash;
extern  int text_flashing;

extern  char dial_number[];
extern  char old_dial_number[];


extern  int dial_terminal_nr;
extern  int dial_baud_nr;
extern  int dial_data_nr;

extern  int dial_terminal_nr_0;
extern  int dial_baud_nr_0;
extern  int dial_data_nr_0;

extern  int edit_terminal_nr;
extern  int edit_baud_nr;
extern  int edit_filetr_nr;
extern  int edit_data_nr;

extern  int transfer_type_nr;
extern  int transfer_type_nr_0;

extern int flow_type_nr;
extern int flow_type_nr_0;
extern int choosed_flow_type_nr;

extern  struct terminal_st
       {
         char *string;
       } terminal[];
extern  struct baud_st
       {
         char *string;
         int value;
       } baud[];
extern  struct data_st
       {
         char *string;
         int value;
       } data[];

extern  char *transfer[];

extern char *flow[];

extern unsigned char ttstate;
extern unsigned originmode;              /* Origin mode, relative or absolute */
extern unsigned insertmode;              /* Insert mode, off or on */
extern unsigned autowrap;                /* Automatic wrap mode, off or on */
extern unsigned newline;                 /* Newline mode, off or on,  GLOBAL data!*/
extern unsigned cursorvisible;           /* Cursor visibility, on or hidden */
extern unsigned reversebackground;       /* Reverse background attribute, on or off*/
extern unsigned screenwid;               /* Screen column width */




extern char term_id_str[];     /* VT100 id string */

extern int nansarg;           /* Index for ANSI argument list */
extern int ansargs[10];      /* Room for 10 ANSI arguments */
extern unsigned char lastc;

/* Messages */

extern message_text msg[];

extern char zmodem_receive_string[];
extern char zmodem_send_string[];

extern char *ws;
extern char *wsl;

extern char filetypes[];
extern char old_filetypes[];
extern int send_hangup_string;
extern int drop_dtr;

extern int german_keyb;

extern unsigned char keyb_table[];
extern unsigned char keyb_table2[];


