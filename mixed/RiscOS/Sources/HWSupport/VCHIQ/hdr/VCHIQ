; 
; Copyright (c) 2012, RISC OS Open Ltd
; All rights reserved.
; 
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met: 
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
; 
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
; 
        SUBT Exported VCHIQ constants

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

SWIClass        SETS    VCHIQSWI_Name

        ^       VCHIQSWI_Base

        AddSWI  Initialise
        AddSWI  Connect
        AddSWI  Disconnect
        AddSWI  BulkQueueTransmit
        AddSWI  MsgDequeue
        AddSWI  MsgQueue
        AddSWI  MsgQueueV
        AddSWI  MsgPeek
        AddSWI  MsgRemove
        AddSWI  ServiceClose
        AddSWI  ServiceOpen
        AddSWI  ServiceCreate
        AddSWI  ServiceDestroy
        AddSWI  ServiceUse
        AddSWI  ServiceRelease
        AddSWI  BulkQueueReceive

; Flags for BulkQueueTransmit, BulkQueueReceive, MsgDequeue, MsgQueue, MsgQueueV, MsgPeek SWIs
VCHI_FLAGS_BLOCK_UNTIL_OP_COMPLETE      * &01
VCHI_FLAGS_CALLBACK_WHEN_OP_COMPLETE    * &02
VCHI_FLAGS_BLOCK_UNTIL_QUEUED           * &04
VCHI_FLAGS_ALLOW_PARTIAL                * &08
VCHI_FLAGS_BLOCK_UNTIL_DATA_READ        * &10
VCHI_FLAGS_CALLBACK_WHEN_DATA_READ      * &20

; Service creation struct for ServiceOpen, ServiceCreate
                                  ^ 0
VCHIQ_Service_Version             # 4
VCHIQ_Service_Version_Min         # 4                                  
VCHIQ_Service_Id                  # 4 ; fourcc, big endian. E.g. 'AUDS' = &41554453
VCHIQ_Service_Reserved            # 4 ; Reserved, must be 0
VCHIQ_Service_RxFifoSize          # 4
VCHIQ_Service_TxFifoSize          # 4
VCHIQ_Service_Callback            # 4
VCHIQ_Service_CallbackParam       # 4
VCHIQ_Service_WantUnalignedBulkRx # 4
VCHIQ_Service_WantUnalignedBulkTx # 4
VCHIQ_Service_WantCRC             # 4
VCHIQ_Service_Size                # 0

; Callback function reasons
VCHI_CALLBACK_MSG_AVAILABLE                 * 1
VCHI_CALLBACK_MSG_SENT                      * 2
VCHI_CALLBACK_MSG_SPACE_AVAILABLE           * 3 ; (not yet implemented in core)
VCHI_CALLBACK_BULK_RECEIVED                 * 4
VCHI_CALLBACK_BULK_SENT                     * 5
VCHI_CALLBACK_BULK_RX_SPACE_AVAILABLE       * 6 ; (not yet implemented in core)
VCHI_CALLBACK_BULK_TX_SPACE_AVAILABLE       * 7 ; (not yet implemented in core)
VCHI_CALLBACK_SERVICE_CLOSED                * 8
VCHI_CALLBACK_SENT_XOFF                     * 9
VCHI_CALLBACK_SENT_XON                      * 10
VCHI_CALLBACK_BULK_DATA_READ                * 11
VCHI_CALLBACK_PEER_OFF                      * 12
VCHI_CALLBACK_PEER_SUSPENDED                * 13
VCHI_CALLBACK_PEER_ON                       * 14
VCHI_CALLBACK_PEER_RESUMED                  * 15
VCHI_CALLBACK_FORCED_POWER_OFF              * 16
VCHI_CALLBACK_SERVICE_OPENED                * 17
VCHI_CALLBACK_SERVICE_BULK_RECEIVE_ABORTED  * 18
VCHI_CALLBACK_SERVICE_BULK_TRANSMIT_ABORTED * 19

; Errors

        ^        ErrorBase_VCHIQ
        AddError VCHIQ_NoDev, "No VCHIQ device found"
        AddError VCHIQ_BadDev, "VCHIQ device failed to activate"
        AddError VCHIQ_InitSlots, "vchiq_init_slots failed"
        AddError VCHIQ_InitState, "vchiq_init_state failed"
        AddError VCHIQ_NoKill, "VCHIQ cannot be killed"
        AddError VCHIQ_Retry, "Retry status returned by VCHIQ core"
        AddError VCHIQ_Error, "Error status returned by VCHIQ core"

        OPT     OldOpt
        END
