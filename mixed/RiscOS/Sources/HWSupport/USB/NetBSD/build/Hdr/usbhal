; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; HAL USB workspace structure
; This workspace shouldn't be poked directly by the HAL. The only reason
; it gets exported is to allow USBHAL_WS_Size to be read, to allow the
; correct amount of memory to be reserved in the HAL workspace at sb
; USBHAL_WorkspaceOffset should then be set to the offset of this memory

; Note: This must be kept in sync with the matching C struct in dev/usb/usbhal.h

                        ^ 0
USBHAL_WS_Heap_Normal   # 4 ; Heap structure for malloc & free
USBHAL_WS_Heap_NCNB     # 4 ; Heap structure for malloc_contig & free_contig
USBHAL_WS_allbuses      # 8 ; TAILQ of buses
USBHAL_WS_usbbus_no     # 4 ; Next number to use
USBHAL_WS_monotonictime # 4 ; Centisecond counter equivalent to OS_ReadMonotonicTime
USBHAL_WS_callouts      # 4 ; Head of callouts list
USBHAL_WS_irqsema       # 4 ; nonzero when processing interrupts
USBHAL_WS_rediscover    # 4 ; re_discover callout
USBHAL_WS_t_handles     # 4 ; tsleep handle list
USBHAL_WS_t_locks       # 4 ; tsleep lock list
USBHAL_WS_nhandles      # 4 ; tsleep handle count
USBHAL_WS_kbdflags      # 4 ; Sticky keyboard scan bits
USBHAL_WS_callbacks     # 4 ; Array of callbacks
USBHAL_WS_nextcb        # 4 ; Index of next callback to run
USBHAL_WS_numcb         # 4 ; Number of callbacks
USBHAL_WS_cbs_needed    # 4 ; True if callbacks need processing
USBHAL_WS_Size          # 0

        END
