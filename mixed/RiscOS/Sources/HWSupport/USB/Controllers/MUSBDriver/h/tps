/*
 * Copyright (c) 2009 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jeffrey Lee (me@phlamethrower.co.uk)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef MUSBDRIVER_TPS_H
#define MUSBDRIVER_TPS_H

// TPS/TWL registers
// physical address in low byte, IIC address(*2) in high byte

/* USB */
#define TPS_USB_VENDOR_ID_LO		0x9000
#define TPS_USB_VENDOR_ID_HI		0x9001
#define TPS_USB_PRODUCT_ID_LO		0x9002
#define TPS_USB_PRODUCT_ID_HI		0x9003
#define TPS_USB_FUNC_CTRL		0x9004
#define TPS_USB_FUNC_CTRL_SET		0x9005
#define TPS_USB_FUNC_CTRL_CLR		0x9006
#define TPS_USB_IFC_CTRL		0x9007
#define TPS_USB_IFC_CTRL_SET		0x9008
#define TPS_USB_IFC_CTRL_CLR		0x9009
#define TPS_USB_OTG_CTRL		0x900A
#define TPS_USB_OTG_CTRL_SET		0x900B
#define TPS_USB_OTG_CTRL_CLR		0x900C
#define TPS_USB_USB_INT_EN_RISE		0x900D
#define TPS_USB_USB_INT_EN_RISE_SET	0x900E
#define TPS_USB_USB_INT_EN_RISE_CLR	0x900F
#define TPS_USB_USB_INT_EN_FALL		0x9010
#define TPS_USB_USB_INT_EN_FALL_SET	0x9011
#define TPS_USB_USB_INT_EN_FALL_CLR	0x9012
#define TPS_USB_USB_INT_STS		0x9013
#define TPS_USB_USB_INT_LATCH		0x9014
#define TPS_USB_DEBUG			0x9015
#define TPS_USB_SCRATCH_REG		0x9016
#define TPS_USB_SCRATCH_REG_SET		0x9017
#define TPS_USB_SCRATCH_REG_CLR		0x9018
#define TPS_USB_CARKIT_CTRL		0x9019
#define TPS_USB_CARKIT_CTRL_SET		0x901A
#define TPS_USB_CARKIT_CTRL_CLR		0x901B
#define TPS_USB_CARKIT_INT_DELAY	0x901C
#define TPS_USB_CARKIT_INT_EN		0x901D
#define TPS_USB_CARKIT_INT_EN_SET	0x901E
#define TPS_USB_CARKIT_INT_EN_CLR	0x901F
#define TPS_USB_CARKIT_INT_STS		0x9020
#define TPS_USB_CARKIT_INT_LATCH	0x9021
#define TPS_USB_CARKIT_PLS_CTRL		0x9022
#define TPS_USB_CARKIT_PLS_CTRL_SET	0x9023
#define TPS_USB_CARKIT_PLS_CTRL_CLR	0x9024
#define TPS_USB_TRANS_POS_WIDTH		0x9025
#define TPS_USB_TRANS_NEG_WIDTH		0x9026
#define TPS_USB_RCV_PLTY_RECOVERY	0x9027
#define TPS_USB_MCPC_CTRL		0x9030
#define TPS_USB_MCPC_CTRL_SET		0x9031
#define TPS_USB_MCPC_CTRL_CLR		0x9032
#define TPS_USB_MCPC_IO_CTRL		0x9033
#define TPS_USB_MCPC_IO_CTRL_SET	0x9034
#define TPS_USB_MCPC_IO_CTRL_CLR	0x9035
#define TPS_USB_MCPC_CTRL2		0x9036
#define TPS_USB_MCPC_CTRL2_SET		0x9037
#define TPS_USB_MCPC_CTRL2_CLR		0x9038
#define TPS_USB_OTHER_FUNC_CTRL		0x9080
#define TPS_USB_OTHER_FUNC_CTRL_SET	0x9081
#define TPS_USB_OTHER_FUNC_CTRL_CLR	0x9082
#define TPS_USB_OTHER_IFC_CTRL		0x9083
#define TPS_USB_OTHER_IFC_CTRL_SET	0x9084
#define TPS_USB_OTHER_IFC_CTRL_CLR	0x9085
#define TPS_USB_OTHER_INT_EN_RISE	0x9086
#define TPS_USB_OTHER_INT_EN_RISE_SET	0x9087
#define TPS_USB_OTHER_INT_EN_RISE_CLR	0x9088
#define TPS_USB_OTHER_INT_EN_FALL	0x9089
#define TPS_USB_OTHER_INT_EN_FALL_SET	0x908A
#define TPS_USB_OTHER_INT_EN_FALL_CLR	0x908B
#define TPS_USB_OTHER_INT_STS		0x908C
#define TPS_USB_OTHER_INT_LATCH		0x908D
#define TPS_USB_ID_INT_EN_RISE		0x908E
#define TPS_USB_ID_INT_EN_RISE_SET	0x908F
#define TPS_USB_ID_INT_EN_RISE_CLR	0x9090
#define TPS_USB_ID_INT_EN_FALL		0x9091
#define TPS_USB_ID_INT_EN_FALL_SET	0x9092
#define TPS_USB_ID_INT_EN_FALL_CLR	0x9093
#define TPS_USB_ID_INT_STS		0x9094
#define TPS_USB_ID_INT_LATCH		0x9095
#define TPS_USB_ID_STATUS		0x9096
#define TPS_USB_CARKIT_SM_1_INT_EN	0x9097
#define TPS_USB_CARKIT_SM_1_INT_EN_SET	0x9098
#define TPS_USB_CARKIT_SM_1_INT_EN_CLR	0x9099
#define TPS_USB_CARKIT_SM_1_INT_STS	0x909A
#define TPS_USB_CARKIT_SM_1_INT_LATCH	0x909B
#define TPS_USB_CARKIT_SM_2_INT_EN	0x909C
#define TPS_USB_CARKIT_SM_2_INT_EN_SET	0x909D
#define TPS_USB_CARKIT_SM_2_INT_EN_CLR	0x909E
#define TPS_USB_CARKIT_SM_2_INT_STS	0x909F
#define TPS_USB_CARKIT_SM_2_INT_LATCH	0x90A0
#define TPS_USB_CARKIT_SM_CTRL		0x90A1
#define TPS_USB_CARKIT_SM_CTRL_SET	0x90A2
#define TPS_USB_CARKIT_SM_CTRL_CLR	0x90A3
#define TPS_USB_CARKIT_SM_CMD		0x90A4
#define TPS_USB_CARKIT_SM_CMD_SET	0x90A5
#define TPS_USB_CARKIT_SM_CMD_CLR	0x90A6
#define TPS_USB_CARKIT_SM_CMD_STS	0x90A7
#define TPS_USB_CARKIT_SM_STATUS	0x90A8
#define TPS_USB_CARKIT_SM_NEXT_STATUS	0x90A9
#define TPS_USB_CARKIT_SM_ERR_STATUS	0x90AA
#define TPS_USB_CARKIT_SM_CTRL_STATE	0x90AB
#define TPS_USB_POWER_CTRL		0x90AC
#define TPS_USB_POWER_CTRL_SET		0x90AD
#define TPS_USB_POWER_CTRL_CLR		0x90AE
#define TPS_USB_OTHER_IFC_CTRL2		0x90AF
#define TPS_USB_OTHER_IFC_CTRL2_SET	0x90B0
#define TPS_USB_OTHER_IFC_CTRL2_CLR	0x90B1
#define TPS_USB_REG_CTRL_EN		0x90B2
#define TPS_USB_REG_CTRL_EN_SET		0x90B3
#define TPS_USB_REG_CTRL_EN_CLR		0x90B4
#define TPS_USB_REG_CTRL_ERROR		0x90B5
#define TPS_USB_OTHER_FUNC_CTRL2	0x90B8
#define TPS_USB_OTHER_FUNC_CTRL2_SET	0x90B9
#define TPS_USB_OTHER_FUNC_CTRL2_CLR	0x90BA
#define TPS_USB_CARKIT_ANA_CTRL		0x90BB
#define TPS_USB_CARKIT_ANA_CTRL_SET	0x90BC
#define TPS_USB_CARKIT_ANA_CTRL_CLR	0x90BD
#define TPS_USB_VBUS_DEBOUNCE		0x90C0
#define TPS_USB_ID_DEBOUNCE		0x90C1
#define TPS_USB_TPH_DP_CON_MIN		0x90C2
#define TPS_USB_TPH_DP_CON_MAX		0x90C3
#define TPS_USB_TCR_DP_CON_MIN		0x90C4
#define TPS_USB_TCR_DP_CON_MAX		0x90C5
#define TPS_USB_TPH_DP_PD_SHORT		0x90C6
#define TPS_USB_TPH_CMD_DLY		0x90C7
#define TPS_USB_TPH_DET_RST		0x90C8
#define TPS_USB_TPH_AUD_BIAS		0x90C9
#define TPS_USB_TCR_UART_DET_MIN	0x90CA
#define TPS_USB_TCR_UART_DET_MAX	0x90CB
#define TPS_USB_TPH_ID_INT_PW		0x90CD
#define TPS_USB_TACC_ID_INT_WAIT	0x90CE
#define TPS_USB_TACC_ID_INT_PW		0x90CF
#define TPS_USB_TPH_CMD_WAIT		0x90D0
#define TPS_USB_TPH_ACK_WAIT		0x90D1
#define TPS_USB_TPH_DP_DISC_DET		0x90D2
#define TPS_USB_VBAT_TIMER		0x90D3
#define TPS_USB_CARKIT_4W_DEBUG		0x90E0
#define TPS_USB_CARKIT_5W_DEBUG		0x90E1
#define TPS_USB_TEST_CTRL_CLR		0x90EB
#define TPS_USB_TEST_CARKIT_SET		0x90EC
#define TPS_USB_TEST_CARKIT_CLR		0x90ED
#define TPS_USB_TEST_POWER_SET		0x90EE
#define TPS_USB_TEST_POWER_CLR		0x90EF
#define TPS_USB_TEST_ULPI		0x90F0
#define TPS_USB_TXVR_EN_TEST_SET	0x90F2
#define TPS_USB_TXVR_EN_TST_CLR		0x90F3
#define TPS_USB_VBUS_EN_TEST		0x90F4
#define TPS_USB_ID_EN_TEST		0x90F5
#define TPS_USB_PSM_EN_TEST_SET		0x90F6
#define TPS_USB_PSM_EN_TEST_CLR		0x90F7
#define TPS_USB_PHY_TRIM_CTRL		0x90FC
#define TPS_USB_PHY_PWR_CTRL		0x90FD
#define TPS_USB_PHY_CLK_CTRL		0x90FE
#define TPS_USB_PHY_CLK_CTRL_STS	0x90FF

/* PM_MASTER/PM_RECEIVER - just the ones needed for USB */
#define TPS_PM_MASTER_PROTECT_KEY	0x9644
#define TPS_PM_MASTER_CFG_BOOT		0x963B
#define TPS_PM_MASTER_STS_HW_CONDITIONS	0x9645
#define TPS_PM_RECEIVER_VUSB1V5_DEV_GRP	0x96CC
#define TPS_PM_RECEIVER_VUSB1V5_TYPE	0x96CD
#define TPS_PM_RECEIVER_VUSB1V5_REMAP	0x96CE
#define TPS_PM_RECEIVER_VUSB1V8_DEV_GRP	0x96CF
#define TPS_PM_RECEIVER_VUSB1V8_TYPE	0x96D0
#define TPS_PM_RECEIVER_VUSB1V8_REMAP	0x96D1
#define TPS_PM_RECEIVER_VUSB3V1_DEV_GRP	0x96D2
#define TPS_PM_RECEIVER_VUSB3V1_TYPE	0x96D3
#define TPS_PM_RECEIVER_VUSB3V1_REMAP	0x96D4
#define TPS_PM_RECEIVER_VUSBCP_DEV_GRP	0x96D5
#define TPS_PM_RECEIVER_VUSBCP_TYPE	0x96D6
#define TPS_PM_RECEIVER_VUSBCP_REMAP	0x96D7
#define TPS_PM_RECEIVER_VUSB_DEDICATED1	0x96D8
#define TPS_PM_RECEIVER_VUSB_DEDICATED2	0x96D9

/* PIH */
#define TPS_PIH_PIH_ISR_P1		0x9681
#define TPS_PIH_PIH_ISR_P2		0x9682
#define TPS_PIH_PIH_SIR			0x9683

/* POWERINT */
#define TPS_POWERINT_PWR_ISR1		0x962E
#define TPS_POWERINT_PWR_IMR1		0x962F
#define TPS_POWERINT_PWR_ISR2		0x9630
#define TPS_POWERINT_PWR_IMR2		0x9631
#define TPS_POWERINT_PWR_EDR1		0x9633
#define TPS_POWERINT_PWR_EDR2		0x9634
#define TPS_POWERINT_PWR_SIH_CTRL	0x9635

struct musb_softc;

typedef struct
{
	int dpll_clk_state; /* DPLL clk request counter */
	int lastreg; /* Last register read/written, for debugging */
	int retry_counter; /* DEVCTL_SESSION retry counter (should probably be in main struct!) */
	struct musb_softc *musb; /* Parent controller */
	struct callout ticker; /* Ticker event to poll the ID pin */
} tps_state;

extern void tps_init(tps_state *state,struct musb_softc *musb);
extern void tps_shutdown(tps_state *state);

#endif
