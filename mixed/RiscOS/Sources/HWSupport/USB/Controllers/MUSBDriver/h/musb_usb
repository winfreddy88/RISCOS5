/*
 * Copyright (c) 2009 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jeffrey Lee (me@phlamethrower.co.uk)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef MUSBDRIVER_USB_H
#define MUSBDRIVER_USB_H

#include "musb.h"

/* USBDriver interfaces */

extern usbd_status musb_init(musb_softc_t *sc);
extern int musb_intr(musb_softc_t *sc);

extern void musb_abort_xfer(usbd_xfer_handle xfer,usbd_status status);

/* musb_root.c */

extern usbd_status	musb_root_ctrl_transfer(usbd_xfer_handle);
extern usbd_status	musb_root_ctrl_start(usbd_xfer_handle);
extern void		musb_root_ctrl_abort(usbd_xfer_handle);
extern void		musb_root_ctrl_close(usbd_pipe_handle);
extern void		musb_root_ctrl_done(usbd_xfer_handle);

extern usbd_status	musb_root_intr_transfer(usbd_xfer_handle);
extern usbd_status	musb_root_intr_start(usbd_xfer_handle);
extern void		musb_root_intr_abort(usbd_xfer_handle);
extern void		musb_root_intr_close(usbd_pipe_handle);
extern void		musb_root_intr_done(usbd_xfer_handle);

/* musb.c */

extern usbd_status	musb_device_transfer(usbd_xfer_handle);
extern usbd_status	musb_device_start(usbd_xfer_handle);
extern void		musb_device_abort(usbd_xfer_handle);
extern void		musb_device_close(usbd_pipe_handle);
extern void		musb_device_clear_toggle(usbd_pipe_handle);
extern void		musb_device_done(usbd_xfer_handle);

#endif
