/* Copyright 2009 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef MUSBDRIVER_CMODULE_H
#define MUSBDRIVER_CMODULE_H

#define NOTUSED(V) ((V)=(V))

#define ErrorBase_MUSBDriver 0x820A80
#define ErrorNumber_MUSB_NoReinit    (ErrorBase_MUSBDriver+0)
#define ErrorNumber_MUSB_NoMUSB      (ErrorBase_MUSBDriver+1)
#define ErrorNumber_MUSB_ClaimVeneer (ErrorBase_MUSBDriver+2)
#define ErrorNumber_MUSB_USBTooOld   (ErrorBase_MUSBDriver+3)

extern void* private_word;
extern void build_veneer (int* vn, int* st, size_t sz);

typedef struct iic_transfer
{
	unsigned addr:8;
	unsigned :21;
	unsigned retry:1;
	unsigned checksumonly:1;
	unsigned nostart:1;
	union {
		unsigned checksum;
		void *data;
	} d;
	unsigned len;
} iic_transfer;

extern int do_iicop(iic_transfer *tran,int count); /* Returns nonzero on success */


extern void riscos_cancel_abort_pipe (void* v);

#endif
