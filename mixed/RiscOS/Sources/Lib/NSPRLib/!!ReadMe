NSPRLib 18/10/2007 - ReadMe
===========================

Some Mozilla source code uses the NSPR - NetScape Portable Run-Time, a
complex library that defines just about everything you might want to get
a piece of software as complex as a web browser running at a technical
level. It even includes threading support for operating systems that
don't have it themselves.

The JavaScript interpreter doesn't require much of the NSPR, as the code
of it is meant to be stand-alone anyway. However, some of the NSPR header
files - in particular those relating to fundamental 'cross platform'
datatypes - are required.

Rather than kludge those into JSLib, these headers are available through
NSPRLib, along with various other functions which the JavaScript source
would like to see. Note, the API presented by the exported headers is NOT
wholly supported by the compiled binary! There will almost certainly be
several fragments of source code here which simply aren't used yet, and
the source itself is not a complete set of NSPR sources.

Note the 'SetPaths' obey file - useful for some editors. None of the
system variable names are allocated though...

The majority of the library files fall under the NPL (now called the MPL
in its more modern incarnation). Files created anew for the port fall
under the shared source licence. The applicable licence is described by
comments within individual files.


Replacing malloc, free, calloc and realloc
==========================================

By adding "-DUSE_NSPRLIB_ALLOC_REGISTRATION", the malloc() family of calls
will not be used. Instead, functions in "RISCOSconf.c.ROSallocs" are used;
these let you register any function you like. The default is for the
malloc family, but MemLib could be used instead.

There is a slight speed penalty for doing this, so in builds where the
malloc() family is an acceptable allocation method it is best to build
without USE_NSPRLIB_ALLOC_REGISTRATION defined.

It is up to the client application to register different functions and
call any relevant initialisation functions for a chosen replacement memory
system before any functions in NSPRLib, if functions other than the
malloc() family are required.
