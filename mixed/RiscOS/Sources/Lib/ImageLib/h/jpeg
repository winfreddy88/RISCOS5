/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
extern int NewJPEG(Image *im);
extern int NewInternalJPEG(Image *im);

/*
 * This routine can be used to figure out whether SpriteExtend
 * can handle a JPEG or not. It should be used as follows:
 *
 * int state = JS_UNKNOWN;
 * int offset = 0;
 * int available = 0;
 *
 * while (!(state & JS_DECIDED))
 * {
 *   available += read_bytes(buffer + available);
 *   offset += ParseJPEG(buffer + offset, available - offset, &state);
 * }
 * if (state & JS_NOT_A_JPEG)
 *   exit(EXIT_FAILURE);
 * if (state & JS_SPRITEEXTEND_CAN_DO_IT)
 *   ...
 */
#define JS_UNKNOWN                    0
#define JS_DECIDED                0x100
#define JS_SPRITEEXTEND_CAN_DO_IT 0x200
#define JS_NOT_A_JPEG             0x400

extern int ParseJPEG(const char *data, int len, int *state);
