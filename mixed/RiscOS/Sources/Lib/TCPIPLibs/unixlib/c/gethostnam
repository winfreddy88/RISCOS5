/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -*-C-*-
 *
 * $Header: /home/rool/cvsroot/mixed/RiscOS/Sources/Lib/TCPIPLibs/unixlib/c/gethostnam,v 4.1 1997/03/06 14:27:59 rbuckley Exp $
 * $Source: /home/rool/cvsroot/mixed/RiscOS/Sources/Lib/TCPIPLibs/unixlib/c/gethostnam,v $
 *
 * Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.1  95/04/20  09:50:07  kwelton
 * Initial revision
 *
 */
#include <stdio.h>
#include <string.h>

#include "kernel.h"
#include "swis.h"

#include "unixlib.h"
#include "stubs.h"

static const char hostnamevar[] = "Inet$HostName";
static const char defaulthostname[] = "ARM_NoName";

/**********************************************************************/

char *getvarhostname(void)
{
    int retried = 0;
    int nread;
    _kernel_oserror *e;

    do
    {
        if( (e = _swix(OS_ReadVarVal, _INR(0,4)|_OUT(2),
                                      hostnamevar,
                                      _varnamebuf,
                                      VARBUFSIZE,
                                      0, 0,
                                      &nread
                      )) == NULL )
	{
	    _varnamebuf[nread] = '\0';

	    if (nread > 0)
		return(_varnamebuf);
	}

	if( !retried )
	{
	    e = _swix(OS_SetVarVal, _INR(0,4),
	                            hostnamevar,
	                            defaulthostname,
	                            sizeof(defaulthostname),
	                            0, 0);
	}
    } while( !(retried++) && e == NULL );

    /*
     * failed - return nothing
     */
    return ((char *)0);
}

/**********************************************************************/

int gethostname(char *name, int max_namelen)
{
    char *n;

    if( (n = getvarhostname()) != 0 )
	(void)strncpy(name, n, max_namelen);
    else
	(void)strncpy(name, defaulthostname, max_namelen);

    return (0);
}

/**********************************************************************/

/* EOF gethostnam.c */
