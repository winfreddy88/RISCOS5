/* Copyright 2004 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    generic.c                                         */
/*                                                            */
/* Purpose: Functions not specific to this module.            */
/**************************************************************/

#include <ctype.h>

#include "generic.h"

/*
 * Strcmp_ci()
 *
 * Compare two strings case insensitively
 *
 * Parameters: matches those of strcmp.
 * Result: matches the exit conditions of strcmp.
 *
 * The conversions to unsigned int stop the compiler messing around with
 * shifts all over the place whilst trying to promote the chars to int
 * whilst retaining the sign.
 *
 * Problems: Choice of return value when strings do not match is based
 *           upon character number rather than any alphabetic sorting.
 *
 */

int Strcmp_ci(const char *first, const char *second)
{
    for (;;)
    {
        unsigned int a = *first++;
        unsigned int b = *second++;

        if (a == 0)
            return -b;
        if (a != b)
        {
            unsigned int c = (unsigned int) tolower(a);
            unsigned int d = (unsigned int) tolower(b);
            signed int result = c - d;
            if (result != 0)
                return result;
        }
    }
}
