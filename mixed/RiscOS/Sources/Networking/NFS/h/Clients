/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
        RISC OS NFS Clients routines
*/

#ifndef __NFSCLIENTS_H
#define __NFSCLIENTS_H
#ifndef __NFSTYPES_H
#include "NFSTypes.h"
#endif

extern _kernel_oserror *errno_to_riscos_err( void );
extern _kernel_oserror *rpcnfs_to_riscos_err( void *, MountPoint *, CLIENT * );
extern _kernel_oserror *rpcmount_to_riscos_err( void *, MountPoint *, CLIENT * );
extern _kernel_oserror *rpcpcnfsd_pi_to_riscos_err( void *, CLIENT *, char * );
extern _kernel_oserror *rpcpcnfsd_ps_to_riscos_err( void *, CLIENT *, char * );

extern void release_client( unused_client *client );

/*
        get a client for an nfs call on this host. This can return a reference
        to an old client for reuse
*/
extern _kernel_oserror *get_nfs_client_for_mp( unused_client **nfs_clientp, MountPoint *mount_point );

/*
        get a client for a mount call on this host. This can return a reference
        to an old client for reuse
*/
extern _kernel_oserror *get_mount_client_for_mp( unused_client **mount_clientp, MountPoint *mount_point );

/*
        get a client for a pcnfsd call on this host. This can return a reference
        to an old client for reuse.  the u_long is the version of PCNFS to create
*/
extern _kernel_oserror *get_pcnfsd_client_for_host( unused_client **pcnfsd_clientp, Host *, u_long );

/*
        get a client for a quota call on this host. This can return a reference
        to an old client for reuse
*/
extern _kernel_oserror *get_quota_client( unused_client **quota_clientp, MountPoint *mount_point );

#endif
