1024x768x16bpp 75Hz

RegWrite08(0x006013d4, 0x1f); // Read CRTC 1F (NVidia lock) = 3
RegRead08(0x006013d5) = 0x03;
RegWrite08(0x006013d5, 0x57); // Set it to 57
RegWrite08(0x006033d4, 0x1f);
RegRead08(0x006033d5) = 0x03; // read back - still 3
RegWrite08(0x006033d5, 0x57); // Set it to 57
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44); // read CRTC 44 (?) = 0
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44); // set CRTC 44 (?) to 0
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x00);
RegRead08(0x000c03c5) = 0x03; // read seq reset (3)
RegWrite08(0x000c03c5, 0x01); // set to 1 (sync reset)
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44); // set CRTC 44 (?) to 0
RegWrite08(0x006013d5, 0x00);
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44); // read CRTC 44 (?) = 0
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44); // set CRTC 44 (?) to 3
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x00);
RegRead08(0x000c03c5) = 0x03; // read seq reset (3)
RegWrite08(0x000c03c5, 0x01); // set to 1 (sync reset)
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44); // set CRTC 44 (?) to 0
RegWrite08(0x006013d5, 0x00);
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44); // read CRTC 44 (?) = 0
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44); // set CRTC 44 (?) to 0
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x03);
RegRead08(0x000c03c5) = 0x00; // read seq 3 (char gen select) = 0
RegWrite08(0x000c03c5, 0x00); // set it to 0
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00); // set CRTC 44 (?) to 0

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03); // set alt seq 3 to 0
RegWrite08(0x000c03c4, 0x03);
RegRead08(0x000c03c5) = 0x00;
RegWrite08(0x000c03c5, 0x00);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);


ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);  // set seq 2 (plane enable) to F
RegWrite08(0x000c03c4, 0x02);
RegRead08(0x000c03c5) = 0x0f;
RegWrite08(0x000c03c5, 0x0f);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x02);  // set alt seq 2 (plane enable) to F
RegRead08(0x000c03c5) = 0x0f;
RegWrite08(0x000c03c5, 0x0f);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x04); // set seq 4 (mem mode) to E
RegRead08(0x000c03c5) = 0x0e;
RegWrite08(0x000c03c5, 0x0e);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x04);
RegRead08(0x000c03c5) = 0x0e;
RegWrite08(0x000c03c5, 0x0e);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x04); // again
RegRead08(0x000c03c5) = 0x0e;
RegWrite08(0x000c03c5, 0x0e);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x04);
RegRead08(0x000c03c5) = 0x0e;
RegWrite08(0x000c03c5, 0x0e);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x01); // set seq 1 (clock mode) to 1
RegRead08(0x000c03c5) = 0x01;
RegWrite08(0x000c03c5, 0x01);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);


ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x01);
RegRead08(0x000c03c5) = 0x01;
RegWrite08(0x000c03c5, 0x01);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x01); // set seq 1 (clock mode) to 21
RegRead08(0x000c03c5) = 0x01;
RegWrite08(0x000c03c5, 0x21);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x01);
RegRead08(0x000c03c5) = 0x01;
RegWrite08(0x000c03c5, 0x21);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00); // read MiscOut (2B)
RegRead08(0x000c03cc) = 0x2b;
RegWrite08(0x000c03c2, 0x2b); // set to 2B
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegRead08(0x000c03cc) = 0x2b;
RegWrite08(0x000c03c2, 0x2b);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00); // again
RegRead08(0x000c03cc) = 0x2b;
RegWrite08(0x000c03c2, 0x2b);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegRead08(0x000c03cc) = 0x2b;
RegWrite08(0x000c03c2, 0x2b);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

RegWrite08(0x006013d4, 0x11); // CRTC 11 (vretrace end) = 4
RegRead08(0x006013d5) = 0x04;
RegWrite08(0x006013d5, 0x04);
RegWrite08(0x006033d4, 0x11);
RegRead08(0x006033d5) = 0x04;
RegWrite08(0x006033d5, 0x04);

RegWrite08(0x006013d4, 0x18); // CRTC 18 (?) = 5F
RegRead08(0x006013d5) = 0xff;
RegWrite08(0x006013d5, 0x5f);
RegWrite08(0x006033d4, 0x18);
RegRead08(0x006033d5) = 0xff;
RegWrite08(0x006033d5, 0x5f);

RegWrite08(0x006013d4, 0x0a); // CRTC 0A (curs start) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x0a);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x0b); // CRTC 0B (curs end) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x0b);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x14); // CRTC 14 (und loc) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x14);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x08); // CRTC 08 (preset row scan) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x08);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x0c); // CRTC 0C (addr hi) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x0c);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x0d); // CRTC 0D (addr lo) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x0d);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x0e); // CRTC 0E (cursloc hi) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x0e);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x0f); // CRTC 0F (cursloc lo) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x0f);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x18); // CRTC 18 (?) restored to FF
RegRead08(0x006013d5) = 0x5f;
RegWrite08(0x006013d5, 0xff);
RegWrite08(0x006033d4, 0x18);
RegRead08(0x006033d5) = 0x5f;
RegWrite08(0x006033d5, 0xff);

RegWrite08(0x006013d4, 0x1d); // CRTC 1D (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x1d);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x1e); // CRTC 1E (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x1e);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x2a); // CRTC 2A (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x2a);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x2f); // CRTC 2F (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x2f);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x30); // CRTC 30 (cursor0) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x30);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x31); // CRTC 31 (cursor1) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x31);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x32); // CRTC 31 (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x32);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x5a); // CRTC 5A (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x5a);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x5b); // CRTC 5B (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x5b);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x09); // CRTC 09 (maxscanline) = 0x60
RegRead08(0x006013d5) = 0x60; // bit 9 of line compare = 1
RegWrite08(0x006013d5, 0x60); // bit 9 of start vblank = 1
RegWrite08(0x006033d4, 0x09);
RegRead08(0x006033d5) = 0x60;
RegWrite08(0x006033d5, 0x60);

RegWrite08(0x006013d4, 0x17); // CRTC 17 (mode control) = 0xE3
RegRead08(0x006013d5) = 0xe3; // (h+v retrace, byte mode, addr wrap
RegWrite08(0x006013d5, 0xe3); //  enable interleave)
RegWrite08(0x006033d4, 0x17);
RegRead08(0x006033d5) = 0xe3;
RegWrite08(0x006033d5, 0xe3);

RegWrite08(0x006013d4, 0x17); // again
RegRead08(0x006013d5) = 0xe3;
RegWrite08(0x006013d5, 0xe3);
RegWrite08(0x006033d4, 0x17);
RegRead08(0x006033d5) = 0xe3;
RegWrite08(0x006033d5, 0xe3);

RegWrite08(0x006013d4, 0x19); // CRTC 19 (repaint0) = 40
RegRead08(0x006013d5) = 0x40; // bits 8-10 of line len = 010
RegWrite08(0x006013d5, 0x40);
RegWrite08(0x006033d4, 0x19);
RegRead08(0x006033d5) = 0x40;
RegWrite08(0x006033d5, 0x40);

RegWrite08(0x006013d4, 0x1a); // CRTC 1A (repaint1) = 38 (?)
RegRead08(0x006013d5) = 0x38;
RegWrite08(0x006013d5, 0x38);
RegWrite08(0x006033d4, 0x1a);
RegRead08(0x006033d5) = 0x38;
RegWrite08(0x006033d5, 0x38);

RegWrite08(0x006013d4, 0x1a);
RegRead08(0x006013d5) = 0x38;
RegWrite08(0x006013d5, 0x38);
RegWrite08(0x006033d4, 0x1a);
RegRead08(0x006033d5) = 0x38;
RegWrite08(0x006033d5, 0x38);

RegWrite08(0x006013d4, 0x1c); // CRTC 1C (?) = 1C
RegRead08(0x006013d5) = 0x1c;
RegWrite08(0x006013d5, 0x1c);
RegWrite08(0x006033d4, 0x1c);
RegRead08(0x006033d5) = 0x1c;
RegWrite08(0x006033d5, 0x1c);

RegWrite08(0x006013d4, 0x1c);
RegRead08(0x006013d5) = 0x1c;
RegWrite08(0x006013d5, 0x1c);
RegWrite08(0x006033d4, 0x1c);
RegRead08(0x006033d5) = 0x1c;
RegWrite08(0x006033d5, 0x1c);

RegWrite08(0x006013d4, 0x25); // CRTC 25 (screen = 0)
RegRead08(0x006013d5) = 0x00; // high bits of various regs = 0
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x25);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x29); // CRTC 29 (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x29);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x33); // CRTC 33 (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x33);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x42); // CRTC 42 (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x42);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x43); // CRTC 43 (?) = 1
RegRead08(0x006013d5) = 0x01;
RegWrite08(0x006013d5, 0x01);
RegWrite08(0x006033d4, 0x43);
RegRead08(0x006033d5) = 0x01;
RegWrite08(0x006033d5, 0x01);

RegWrite08(0x006013d4, 0x45); // CRTC 45 (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x45);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x45);
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x45);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x46); // CRTC 46 (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x46);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x46);
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x46);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x48); // CRTC 48 (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x48);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x2d); // CRTC 2D (horiz) = 0
RegRead08(0x006013d5) = 0x00; // (bit 8 of hTotal = 0)
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x2d);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x07); // CRTC 07 (overflow) = F5
RegRead08(0x006013d5) = 0xf5; // bits 9-8 of vretstrt = 11
RegWrite08(0x006013d5, 0xf5); // bits 9-8 of vdspend = 10
RegWrite08(0x006033d4, 0x07); // bits 9-8 of vtot = 11
RegRead08(0x006033d5) = 0xf5; // bit 8 of linecomp = 1
RegWrite08(0x006033d5, 0xf5); // bit 8 of svblank = 0

RegRead32(0x0068050c) = 0x30000f00;
RegWrite32(0x0068050c, 0x30000f00);
RegRead32(0x0068050c) = 0x30000f00;
RegWrite32(0x0068050c, 0x30000f00);
RegRead32(0x00680600) = 0x00100100;
RegWrite32(0x00680600, 0x00100100);
RegRead32(0x00682600) = 0x00100100;
RegWrite32(0x00682600, 0x00100100);

RegWrite08(0x006013c0, 0x11); // Attr 11 (border) = 0
RegRead08(0x006013c1) = 0x00;
RegWrite08(0x006013c0, 0x00);
RegWrite08(0x006033c0, 0x11);
RegRead08(0x006033c1) = 0x00;
RegWrite08(0x006033c0, 0x00);

RegWrite08(0x006013c0, 0x12); // Attr 12 (plane en) = F
RegRead08(0x006013c1) = 0x0f;
RegWrite08(0x006013c0, 0x0f);
RegWrite08(0x006033c0, 0x12);
RegRead08(0x006033c1) = 0x0f;
RegWrite08(0x006033c0, 0x0f);

RegWrite08(0x006013c0, 0x13); // Attr 13 (hpan) = 0
RegRead08(0x006013c1) = 0x00;
RegWrite08(0x006013c0, 0x00);
RegWrite08(0x006033c0, 0x13);
RegRead08(0x006033c1) = 0x00;
RegWrite08(0x006033c0, 0x00);

RegWrite08(0x006013c0, 0x10); // Attr 10 (mode ctrl) = 1
RegRead08(0x006013c1) = 0x01; // (graphics)
RegWrite08(0x006013c0, 0x01);
RegWrite08(0x006033c0, 0x10);
RegRead08(0x006033c1) = 0x01;
RegWrite08(0x006033c0, 0x01);

RegWrite08(0x006013c0, 0x10); // again
RegRead08(0x006013c1) = 0x01;
RegWrite08(0x006013c0, 0x01);
RegWrite08(0x006033c0, 0x10);
RegRead08(0x006033c1) = 0x01;
RegWrite08(0x006033c0, 0x01);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x05); // GR 5 (mode) = 40 (256 col)
RegRead08(0x000c03cf) = 0x40;
RegWrite08(0x000c03cf, 0x40);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x05);
RegRead08(0x000c03cf) = 0x40;
RegWrite08(0x000c03cf, 0x40);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44); // again
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x05);
RegRead08(0x000c03cf) = 0x40;
RegWrite08(0x000c03cf, 0x40);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x05);
RegRead08(0x000c03cf) = 0x40;
RegWrite08(0x000c03cf, 0x40);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x00); // GR 0 (filldata) = 0
RegRead08(0x000c03cf) = 0x00;
RegWrite08(0x000c03cf, 0x00);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x00);
RegRead08(0x000c03cf) = 0x00;
RegWrite08(0x000c03cf, 0x00);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x01); // GR 1 (set/reset enable) = 0
RegRead08(0x000c03cf) = 0x00;
RegWrite08(0x000c03cf, 0x00);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x01);
RegRead08(0x000c03cf) = 0x00;
RegWrite08(0x000c03cf, 0x00);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x02); // GR 2 (colcomp) = 00
RegRead08(0x000c03cf) = 0x00;
RegWrite08(0x000c03cf, 0x00);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x02);
RegRead08(0x000c03cf) = 0x00;
RegWrite08(0x000c03cf, 0x00);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x03); // GR 3 (rot/fnsel) =0
RegRead08(0x000c03cf) = 0x00;
RegWrite08(0x000c03cf, 0x00);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x03);
RegRead08(0x000c03cf) = 0x00;
RegWrite08(0x000c03cf, 0x00);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x04); // GR 4 (read plane) = 0
RegRead08(0x000c03cf) = 0x00;
RegWrite08(0x000c03cf, 0x00);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x04);
RegRead08(0x000c03cf) = 0x00;
RegWrite08(0x000c03cf, 0x00);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x06); // GR 6 (misc) = 5
RegRead08(0x000c03cf) = 0x05; // 64K, graphics
RegWrite08(0x000c03cf, 0x05);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x06);
RegRead08(0x000c03cf) = 0x05;
RegWrite08(0x000c03cf, 0x05);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x07); // GR 7 (don't care) = F
RegRead08(0x000c03cf) = 0x0f;
RegWrite08(0x000c03cf, 0x0f);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x07);
RegRead08(0x000c03cf) = 0x0f;
RegWrite08(0x000c03cf, 0x0f);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x08); // GR 8 (bitmask) = FF
RegRead08(0x000c03cf) = 0xff;
RegWrite08(0x000c03cf, 0xff);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x08);
RegRead08(0x000c03cf) = 0xff;
RegWrite08(0x000c03cf, 0xff);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

RegRead32(0x0068050c) = 0x30000f00;
RegWrite32(0x0068050c, 0x30000f00);
RegRead32(0x0068050c) = 0x30000f00;
RegWrite32(0x0068050c, 0x30000f00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x02); // seq 2 (write en) = F
RegRead08(0x000c03c5) = 0x0f;
RegWrite08(0x000c03c5, 0x0f);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x02);
RegRead08(0x000c03c5) = 0x0f;
RegWrite08(0x000c03c5, 0x0f);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x04); // seq 4 (mem mode) = E
RegRead08(0x000c03c5) = 0x0e;
RegWrite08(0x000c03c5, 0x0e);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x04);
RegRead08(0x000c03c5) = 0x0e;
RegWrite08(0x000c03c5, 0x0e);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x01);
RegRead08(0x000c03c5) = 0x21;
RegWrite08(0x000c03c5, 0x21);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x01);
RegRead08(0x000c03c5) = 0x21;
RegWrite08(0x000c03c5, 0x21);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x01);
RegRead08(0x000c03c5) = 0x21;
RegWrite08(0x000c03c5, 0x21);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x01);
RegRead08(0x000c03c5) = 0x21;
RegWrite08(0x000c03c5, 0x21);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegRead08(0x000c03cc) = 0x2b;
RegWrite08(0x000c03c2, 0x2b);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegRead08(0x000c03cc) = 0x2b;
RegWrite08(0x000c03c2, 0x2b);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

RegWrite08(0x006013d4, 0x0a); // CRTC 0A (curs start) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x0a);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x28); // CRTC 28 (pixel) = 2 (bytes per pixel)
RegRead08(0x006013d5) = 0x03;
RegWrite08(0x006013d5, 0x02);
RegWrite08(0x006033d4, 0x28);
RegRead08(0x006033d5) = 0x03;
RegWrite08(0x006033d5, 0x02);

RegWrite08(0x006013d4, 0x0b); // CRTC 0B (cursor end) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x0b);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x1a); // CRTC 1A (repaint1) = 38
RegRead08(0x006013d5) = 0x38;
RegWrite08(0x006013d5, 0x38);
RegWrite08(0x006033d4, 0x1a);
RegRead08(0x006033d5) = 0x38;
RegWrite08(0x006033d5, 0x38);

RegWrite08(0x006013d4, 0x14); // CRTC 14 (underline loc) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x14);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x09); // CRTC 09 (max scan line) = 60 (see above)
RegRead08(0x006013d5) = 0x60;
RegWrite08(0x006013d5, 0x60);
RegWrite08(0x006033d4, 0x09);
RegRead08(0x006033d5) = 0x60;
RegWrite08(0x006033d5, 0x60);

RegWrite08(0x006013d4, 0x1c); // CRTC 1C = 1C
RegRead08(0x006013d5) = 0x1c;
RegWrite08(0x006013d5, 0x1c);
RegWrite08(0x006033d4, 0x1c);
RegRead08(0x006033d5) = 0x1c;
RegWrite08(0x006033d5, 0x1c);

RegWrite08(0x006013d4, 0x17); // CRTC 17 (mode control) = E3
RegRead08(0x006013d5) = 0xe3; // see above
RegWrite08(0x006013d5, 0xe3);
RegWrite08(0x006033d4, 0x17);
RegRead08(0x006033d5) = 0xe3;
RegWrite08(0x006033d5, 0xe3);
RegWrite08(0x006013d4, 0x17);
RegRead08(0x006013d5) = 0xe3;
RegWrite08(0x006013d5, 0xe3);
RegWrite08(0x006033d4, 0x17);
RegRead08(0x006033d5) = 0xe3;
RegWrite08(0x006033d5, 0xe3);

RegRead32(0x00680600) = 0x00100100;
RegWrite32(0x00680600, 0x00101100);
RegRead32(0x00682600) = 0x00100100;
RegWrite32(0x00682600, 0x00101100);
RegRead32(0x00680600) = 0x00101100;
RegWrite32(0x00680600, 0x00101100);
RegRead32(0x00682600) = 0x00101100;
RegWrite32(0x00682600, 0x00101100);
RegRead32(0x00680600) = 0x00101100;
RegWrite32(0x00680600, 0x00101100);
RegRead32(0x00682600) = 0x00101100;
RegWrite32(0x00682600, 0x00101100);

RegWrite08(0x006013c0, 0x00); // set indexes 0 - 15
RegRead08(0x006013c1) = 0x00;
RegWrite08(0x006013c0, 0x00);
RegWrite08(0x006033c0, 0x00);
RegRead08(0x006033c1) = 0x00;
RegWrite08(0x006033c0, 0x00);
RegWrite08(0x006013c0, 0x01);
RegRead08(0x006013c1) = 0x01;
RegWrite08(0x006013c0, 0x01);
RegWrite08(0x006033c0, 0x01);
RegRead08(0x006033c1) = 0x01;
RegWrite08(0x006033c0, 0x01);
RegWrite08(0x006013c0, 0x02);
RegRead08(0x006013c1) = 0x02;
RegWrite08(0x006013c0, 0x02);
RegWrite08(0x006033c0, 0x02);
RegRead08(0x006033c1) = 0x02;
RegWrite08(0x006033c0, 0x02);
RegWrite08(0x006013c0, 0x03);
RegRead08(0x006013c1) = 0x03;
RegWrite08(0x006013c0, 0x03);
RegWrite08(0x006033c0, 0x03);
RegRead08(0x006033c1) = 0x03;
RegWrite08(0x006033c0, 0x03);
RegWrite08(0x006013c0, 0x04);
RegRead08(0x006013c1) = 0x04;
RegWrite08(0x006013c0, 0x04);
RegWrite08(0x006033c0, 0x04);
RegRead08(0x006033c1) = 0x04;
RegWrite08(0x006033c0, 0x04);
RegWrite08(0x006013c0, 0x05);
RegRead08(0x006013c1) = 0x05;
RegWrite08(0x006013c0, 0x05);
RegWrite08(0x006033c0, 0x05);
RegRead08(0x006033c1) = 0x05;
RegWrite08(0x006033c0, 0x05);
RegWrite08(0x006013c0, 0x06);
RegRead08(0x006013c1) = 0x06;
RegWrite08(0x006013c0, 0x06);
RegWrite08(0x006033c0, 0x06);
RegRead08(0x006033c1) = 0x06;
RegWrite08(0x006033c0, 0x06);
RegWrite08(0x006013c0, 0x07);
RegRead08(0x006013c1) = 0x07;
RegWrite08(0x006013c0, 0x07);
RegWrite08(0x006033c0, 0x07);
RegRead08(0x006033c1) = 0x07;
RegWrite08(0x006033c0, 0x07);
RegWrite08(0x006013c0, 0x08);
RegRead08(0x006013c1) = 0x08;
RegWrite08(0x006013c0, 0x08);
RegWrite08(0x006033c0, 0x08);
RegRead08(0x006033c1) = 0x08;
RegWrite08(0x006033c0, 0x08);
RegWrite08(0x006013c0, 0x09);
RegRead08(0x006013c1) = 0x09;
RegWrite08(0x006013c0, 0x09);
RegWrite08(0x006033c0, 0x09);
RegRead08(0x006033c1) = 0x09;
RegWrite08(0x006033c0, 0x09);
RegWrite08(0x006013c0, 0x0a);
RegRead08(0x006013c1) = 0x0a;
RegWrite08(0x006013c0, 0x0a);
RegWrite08(0x006033c0, 0x0a);
RegRead08(0x006033c1) = 0x0a;
RegWrite08(0x006033c0, 0x0a);
RegWrite08(0x006013c0, 0x0b);
RegRead08(0x006013c1) = 0x0b;
RegWrite08(0x006013c0, 0x0b);
RegWrite08(0x006033c0, 0x0b);
RegRead08(0x006033c1) = 0x0b;
RegWrite08(0x006033c0, 0x0b);
RegWrite08(0x006013c0, 0x0c);
RegRead08(0x006013c1) = 0x0c;
RegWrite08(0x006013c0, 0x0c);
RegWrite08(0x006033c0, 0x0c);
RegRead08(0x006033c1) = 0x0c;
RegWrite08(0x006033c0, 0x0c);
RegWrite08(0x006013c0, 0x0d);
RegRead08(0x006013c1) = 0x0d;
RegWrite08(0x006013c0, 0x0d);
RegWrite08(0x006033c0, 0x0d);
RegRead08(0x006033c1) = 0x0d;
RegWrite08(0x006033c0, 0x0d);
RegWrite08(0x006013c0, 0x0e);
RegRead08(0x006013c1) = 0x0e;
RegWrite08(0x006013c0, 0x0e);
RegWrite08(0x006033c0, 0x0e);
RegRead08(0x006033c1) = 0x0e;
RegWrite08(0x006033c0, 0x0e);
RegWrite08(0x006013c0, 0x0f);
RegRead08(0x006013c1) = 0x0f;
RegWrite08(0x006013c0, 0x0f);
RegWrite08(0x006033c0, 0x0f);
RegRead08(0x006033c1) = 0x0f;
RegWrite08(0x006033c0, 0x0f);

RegWrite08(0x006013c0, 0x12); // Attr 12 (CPE) = F
RegRead08(0x006013c1) = 0x0f;
RegWrite08(0x006013c0, 0x0f);
RegWrite08(0x006033c0, 0x12);
RegRead08(0x006033c1) = 0x0f;
RegWrite08(0x006033c0, 0x0f);
RegWrite08(0x006013c0, 0x13); // Attr 13 (hpan) = 0
RegRead08(0x006013c1) = 0x00;
RegWrite08(0x006013c0, 0x00);
RegWrite08(0x006033c0, 0x13);
RegRead08(0x006033c1) = 0x00;
RegWrite08(0x006033c0, 0x00);
RegWrite08(0x006013c0, 0x10); // Attr 10 (modectrl) = 1
RegRead08(0x006013c1) = 0x01;
RegWrite08(0x006013c0, 0x01);
RegWrite08(0x006033c0, 0x10);
RegRead08(0x006033c1) = 0x01;
RegWrite08(0x006033c0, 0x01);
RegWrite08(0x006013c0, 0x10);
RegRead08(0x006013c1) = 0x01;
RegWrite08(0x006013c0, 0x01);
RegWrite08(0x006033c0, 0x10);
RegRead08(0x006033c1) = 0x01;
RegWrite08(0x006033c0, 0x01);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x05); // Gr 5 (mode) = 40
RegRead08(0x000c03cf) = 0x40;
RegWrite08(0x000c03cf, 0x40);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x05);
RegRead08(0x000c03cf) = 0x40;
RegWrite08(0x000c03cf, 0x40);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x06); // Gr 6 (misc) = 5
RegRead08(0x000c03cf) = 0x05;
RegWrite08(0x000c03cf, 0x05);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x06);
RegRead08(0x000c03cf) = 0x05;
RegWrite08(0x000c03cf, 0x05);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03ce, 0x07);
RegRead08(0x000c03cf) = 0x0f; // Gr 7 (don't care) = F
RegWrite08(0x000c03cf, 0x0f);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03ce, 0x07);
RegRead08(0x000c03cf) = 0x0f;
RegWrite08(0x000c03cf, 0x0f);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegRead08(0x000c03cc) = 0x2b; // MiscOut = 2B
RegWrite08(0x000c03c2, 0x2b);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegRead08(0x000c03cc) = 0x2b;
RegWrite08(0x000c03c2, 0x2b);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegRead08(0x000c03cc) = 0x2b;
RegWrite08(0x000c03c2, 0x2b);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegRead08(0x000c03cc) = 0x2b;
RegWrite08(0x000c03c2, 0x2b);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x01); // seq 1 (clock mode) = 21
RegRead08(0x000c03c5) = 0x21;
RegWrite08(0x000c03c5, 0x21);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x01);
RegRead08(0x000c03c5) = 0x21;
RegWrite08(0x000c03c5, 0x21);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x01); // again
RegRead08(0x000c03c5) = 0x21;
RegWrite08(0x000c03c5, 0x21);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x01);
RegRead08(0x000c03c5) = 0x21;
RegWrite08(0x000c03c5, 0x21);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

RegWrite08(0x006013d4, 0x03); // CRTC 03 (end hblank) = 89
RegRead08(0x006013d5) = 0x89;
RegWrite08(0x006013d5, 0x89);
RegWrite08(0x006033d4, 0x03);
RegRead08(0x006033d5) = 0x89;
RegWrite08(0x006033d5, 0x89);

RegWrite08(0x006013d4, 0x05); // CRTC 05 (end hretrace) = 96
RegRead08(0x006013d5) = 0x96;
RegWrite08(0x006013d5, 0x96);
RegWrite08(0x006033d4, 0x05);
RegRead08(0x006033d5) = 0x96;
RegWrite08(0x006033d5, 0x96);

RegWrite08(0x006013d4, 0x16); // CRTC 16 (end vblank) = 21
RegRead08(0x006013d5) = 0x21;
RegWrite08(0x006013d5, 0x21);
RegWrite08(0x006033d4, 0x16);
RegRead08(0x006033d5) = 0x21;
RegWrite08(0x006033d5, 0x21);

RegWrite08(0x006013d4, 0x17); // CRTC 17 (modectrl) = E3
RegRead08(0x006013d5) = 0xe3;
RegWrite08(0x006013d5, 0xe3);
RegWrite08(0x006033d4, 0x17);
RegRead08(0x006033d5) = 0xe3;
RegWrite08(0x006033d5, 0xe3);

RegWrite08(0x006013d4, 0x39); // CRTC 39 (?) = FF
RegRead08(0x006013d5) = 0xff;
RegWrite08(0x006013d5, 0xff);
RegWrite08(0x006033d4, 0x39);
RegRead08(0x006033d5) = 0xff;
RegWrite08(0x006033d5, 0xff);

RegWrite08(0x006013d4, 0x09); // CRTC 09 (maxscanline) = 09
RegRead08(0x006013d5) = 0x60;
RegWrite08(0x006013d5, 0x60);
RegWrite08(0x006033d4, 0x09);
RegRead08(0x006033d5) = 0x60;
RegWrite08(0x006033d5, 0x60);

RegWrite08(0x006013d4, 0x56); // CRTC 56 (?) = 80
RegRead08(0x006013d5) = 0x80;
RegWrite08(0x006013d5, 0x80);
RegWrite08(0x006033d4, 0x56);
RegRead08(0x006033d5) = 0x80;
RegWrite08(0x006033d5, 0x80);

RegWrite08(0x006013d4, 0x1a); // CRTC 1A (repaint1) = 38
RegRead08(0x006013d5) = 0x38;
RegWrite08(0x006013d5, 0x38);
RegWrite08(0x006033d4, 0x1a);
RegRead08(0x006033d5) = 0x38;
RegWrite08(0x006033d5, 0x38);

RegWrite08(0x006013d4, 0x2d); // CRTC 2D (horiz) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x2d);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegRead32(0x0068050c) = 0x30000f00;
RegWrite32(0x0068050c, 0x30000f00);
RegRead32(0x0068050c) = 0x30000f00;
RegWrite32(0x0068050c, 0x30000f00);

RegWrite08(0x006013d4, 0x00); // CRTC 00 (Htotal) = A5
RegRead08(0x006013d5) = 0xa5;
RegWrite08(0x006013d5, 0xa5);
RegWrite08(0x006033d4, 0x00);
RegRead08(0x006033d5) = 0xa5;
RegWrite08(0x006033d5, 0xa5);

RegWrite08(0x006013d4, 0x2d); // CRTC 2D (Htotal ovf) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x2d);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x55); // CRTC 55 (?) = 40
RegRead08(0x006013d5) = 0x40;
RegWrite08(0x006013d5, 0x40);
RegWrite08(0x006033d4, 0x55);
RegRead08(0x006033d5) = 0x40;
RegWrite08(0x006033d5, 0x40);

RegWrite08(0x006013d4, 0x01); // CRTC 01 (hdispen) = 7F
RegRead08(0x006013d5) = 0x7f;
RegWrite08(0x006013d5, 0x7f);
RegWrite08(0x006033d4, 0x01);
RegRead08(0x006033d5) = 0x7f;
RegWrite08(0x006033d5, 0x7f);

RegWrite08(0x006013d4, 0x2d); // CRTC 2D (hovf) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x2d);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x55); // CRTC 55 (?) = 40
RegRead08(0x006013d5) = 0x40;
RegWrite08(0x006013d5, 0x40);
RegWrite08(0x006033d4, 0x55);
RegRead08(0x006033d5) = 0x40;
RegWrite08(0x006033d5, 0x40);

RegWrite08(0x006013d4, 0x02); // CRTC 02 (starthblank) = 7F
RegRead08(0x006013d5) = 0x7f;
RegWrite08(0x006013d5, 0x7f);
RegWrite08(0x006033d4, 0x02);
RegRead08(0x006033d5) = 0x7f;
RegWrite08(0x006033d5, 0x7f);

RegWrite08(0x006013d4, 0x2d);
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x2d);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x55);
RegRead08(0x006013d5) = 0x40;
RegWrite08(0x006013d5, 0x40);
RegWrite08(0x006033d4, 0x55);
RegRead08(0x006033d5) = 0x40;
RegWrite08(0x006033d5, 0x40);

RegWrite08(0x006013d4, 0x03); // CRTC 03 (end hblank) = 89
RegRead08(0x006013d5) = 0x89;
RegWrite08(0x006013d5, 0x89);
RegWrite08(0x006033d4, 0x03);
RegRead08(0x006033d5) = 0x89;
RegWrite08(0x006033d5, 0x89);

RegWrite08(0x006013d4, 0x05); // CRTC 05 (end hretrace) = 96
RegRead08(0x006013d5) = 0x96;
RegWrite08(0x006013d5, 0x96);
RegWrite08(0x006033d4, 0x05);
RegRead08(0x006033d5) = 0x96;
RegWrite08(0x006033d5, 0x96);

RegWrite08(0x006013d4, 0x25); // CRTC 25 (screen) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x25);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x55);
RegRead08(0x006013d5) = 0x40;
RegWrite08(0x006013d5, 0x40);
RegWrite08(0x006033d4, 0x55);
RegRead08(0x006033d5) = 0x40;
RegWrite08(0x006033d5, 0x40);

RegWrite08(0x006013d4, 0x04); // CRTC 04 (start hretrace) = 88
RegRead08(0x006013d5) = 0x88;
RegWrite08(0x006013d5, 0x88);
RegWrite08(0x006033d4, 0x04);
RegRead08(0x006033d5) = 0x88;
RegWrite08(0x006033d5, 0x88);

RegWrite08(0x006013d4, 0x2d);
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x2d);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x56);
RegRead08(0x006013d5) = 0x80;
RegWrite08(0x006013d5, 0x80);
RegWrite08(0x006033d4, 0x56);
RegRead08(0x006033d5) = 0x80;
RegWrite08(0x006033d5, 0x80);

RegWrite08(0x006013d4, 0x05); // CRTC 05 (end hretrace) = 96
RegRead08(0x006013d5) = 0x96;
RegWrite08(0x006013d5, 0x96);
RegWrite08(0x006033d4, 0x05);
RegRead08(0x006033d5) = 0x96;
RegWrite08(0x006033d5, 0x96);

RegWrite08(0x006013d4, 0x56);
RegRead08(0x006013d5) = 0x80;
RegWrite08(0x006013d5, 0x80);
RegWrite08(0x006033d4, 0x56);
RegRead08(0x006033d5) = 0x80;
RegWrite08(0x006033d5, 0x80);

RegWrite08(0x006013d4, 0x06); // CRTC 06 (vtotal) = 20
RegRead08(0x006013d5) = 0x20;
RegWrite08(0x006013d5, 0x20);
RegWrite08(0x006033d4, 0x06);
RegRead08(0x006033d5) = 0x20;
RegWrite08(0x006033d5, 0x20);

RegWrite08(0x006013d4, 0x07); // CRTC 07 (ovf) = F5
RegRead08(0x006013d5) = 0xf5;
RegWrite08(0x006013d5, 0xf5);
RegWrite08(0x006033d4, 0x07);
RegRead08(0x006033d5) = 0xf5;
RegWrite08(0x006033d5, 0xf5);
RegWrite08(0x006013d4, 0x07);
RegRead08(0x006013d5) = 0xf5;
RegWrite08(0x006013d5, 0xf5);
RegWrite08(0x006033d4, 0x07);
RegRead08(0x006033d5) = 0xf5;
RegWrite08(0x006033d5, 0xf5);

RegWrite08(0x006013d4, 0x25); // CRTC 25 (screen) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x25);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x41); // CRTC 41 (?) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x41);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x12); // CRTC 12 (vdispen) = FF
RegRead08(0x006013d5) = 0xff;
RegWrite08(0x006013d5, 0xff);
RegWrite08(0x006033d4, 0x12);
RegRead08(0x006033d5) = 0xff;
RegWrite08(0x006033d5, 0xff);

RegWrite08(0x006013d4, 0x07); // CRTC 7 (ovf) = F5
RegRead08(0x006013d5) = 0xf5;
RegWrite08(0x006013d5, 0xf5);
RegWrite08(0x006033d4, 0x07);
RegRead08(0x006033d5) = 0xf5;
RegWrite08(0x006033d5, 0xf5);
RegWrite08(0x006013d4, 0x07);
RegRead08(0x006013d5) = 0xf5;
RegWrite08(0x006013d5, 0xf5);
RegWrite08(0x006033d4, 0x07);
RegRead08(0x006033d5) = 0xf5;
RegWrite08(0x006033d5, 0xf5);

RegWrite08(0x006013d4, 0x25); // CRTC 25 (screen) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x25);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x41); // CRTC 41 (screen) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x41);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x15); // CRTC 15 (startvblank) = FF
RegRead08(0x006013d5) = 0xff;
RegWrite08(0x006013d5, 0xff);
RegWrite08(0x006033d4, 0x15);
RegRead08(0x006033d5) = 0xff;
RegWrite08(0x006033d5, 0xff);

RegWrite08(0x006013d4, 0x07);
RegRead08(0x006013d5) = 0xf5;
RegWrite08(0x006013d5, 0xf5);
RegWrite08(0x006033d4, 0x07);
RegRead08(0x006033d5) = 0xf5;
RegWrite08(0x006033d5, 0xf5);

RegWrite08(0x006013d4, 0x09); // CRTC 09 (maxscanline) = 60
RegRead08(0x006013d5) = 0x60;
RegWrite08(0x006013d5, 0x60);
RegWrite08(0x006033d4, 0x09);
RegRead08(0x006033d5) = 0x60;
RegWrite08(0x006033d5, 0x60);

RegWrite08(0x006013d4, 0x25);
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x25);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x41);
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x41);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x16); // CRTC 16 (end vblank) = 21
RegRead08(0x006013d5) = 0x21;
RegWrite08(0x006013d5, 0x21);
RegWrite08(0x006033d4, 0x16);
RegRead08(0x006033d5) = 0x21;
RegWrite08(0x006033d5, 0x21);

RegWrite08(0x006013d4, 0x56);
RegRead08(0x006013d5) = 0x80;
RegWrite08(0x006013d5, 0x80);
RegWrite08(0x006033d4, 0x56);
RegRead08(0x006033d5) = 0x80;
RegWrite08(0x006033d5, 0x80);

RegWrite08(0x006013d4, 0x10); // CRTC 10 (vretrace start) = 1
RegRead08(0x006013d5) = 0x01;
RegWrite08(0x006013d5, 0x01);
RegWrite08(0x006033d4, 0x10);
RegRead08(0x006033d5) = 0x01;
RegWrite08(0x006033d5, 0x01);

RegWrite08(0x006013d4, 0x07);
RegRead08(0x006013d5) = 0xf5;
RegWrite08(0x006013d5, 0xf5);
RegWrite08(0x006033d4, 0x07);
RegRead08(0x006033d5) = 0xf5;
RegWrite08(0x006033d5, 0xf5);
RegWrite08(0x006013d4, 0x07);
RegRead08(0x006013d5) = 0xf5;
RegWrite08(0x006013d5, 0xf5);
RegWrite08(0x006033d4, 0x07);
RegRead08(0x006033d5) = 0xf5;
RegWrite08(0x006033d5, 0xf5);
RegWrite08(0x006013d4, 0x25);
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x25);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);
RegWrite08(0x006013d4, 0x41);
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x41);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x11); // CRTC 11 (vretrace end) = 4
RegRead08(0x006013d5) = 0x04; // check ours
RegWrite08(0x006013d5, 0x04);
RegWrite08(0x006033d4, 0x11);
RegRead08(0x006033d5) = 0x04;
RegWrite08(0x006033d5, 0x04);

RegWrite08(0x006013d4, 0x13); // CRTC 13 (screen width) = 0
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x13);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

RegWrite08(0x006013d4, 0x19); // CRTC 19 (repaint0) = 20
RegRead08(0x006013d5) = 0x40;
RegWrite08(0x006013d5, 0x20);
RegWrite08(0x006033d4, 0x19); // screen width = &100 bytes (* 8)
RegRead08(0x006033d5) = 0x40;
RegWrite08(0x006033d5, 0x20);

RegWrite08(0x006013d4, 0x42); // overflow?
RegRead08(0x006013d5) = 0x00;
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x006033d4, 0x42);
RegRead08(0x006033d5) = 0x00;
RegWrite08(0x006033d5, 0x00);

WriteCRTCRegister:
RegWrite08(0x006013d4, 0x1b); // CRTC 1B (arb0) = 03
RegWrite08(0x006013d5, 0x03);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x20); // CRTC 20 (arb1) = 80
RegWrite08(0x006013d5, 0x80);
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x28);
RegRead08(0x006013d5) = 0x02;
ReadCRTCRegister:
RegWrite08(0x006013d4, 0x28);
RegRead08(0x006013d5) = 0x02;
RegWrite08(0x006013d4, 0x20);
RegRead08(0x006013d5) = 0x80;
RegWrite08(0x006013d5, 0x80);
RegWrite08(0x006033d4, 0x20);
RegRead08(0x006033d5) = 0x80;
RegWrite08(0x006033d5, 0x80);
RegWrite08(0x006013d4, 0x1b);
RegRead08(0x006013d5) = 0x83;
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x006033d4, 0x1b);
RegRead08(0x006033d5) = 0x83;
RegWrite08(0x006033d5, 0x03);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x00);
RegRead08(0x000c03c5) = 0x01; // seq 0 (reset) = 3 - end reset
RegWrite08(0x000c03c5, 0x03);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x00);
RegRead08(0x000c03c5) = 0x01;
RegWrite08(0x000c03c5, 0x03);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
RegWrite08(0x000c03c4, 0x01); // seq 1 = 01
RegRead08(0x000c03c5) = 0x21; // display on
RegWrite08(0x000c03c5, 0x01);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);

ReadCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegRead08(0x006013d5) = 0x00;
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x03);
RegWrite08(0x000c03c4, 0x01);
RegRead08(0x000c03c5) = 0x21;
RegWrite08(0x000c03c5, 0x01);
WriteCRTCRegister:
RegWrite08(0x006013d4, 0x44);
RegWrite08(0x006013d5, 0x00);
