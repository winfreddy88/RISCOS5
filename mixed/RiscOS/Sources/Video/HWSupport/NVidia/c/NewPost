/* Copyright 2008 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include "nv_std.h"
#include <stdarg.h>

// hand over certain pointers and return address of rom_mirror
uint8* PokeHandles(shared_info* si)
{
  si->framebuffer = si->FBLogicalAddr;
  return si->rom_mirror;
}
// return useful post data
void get_post_data(shared_info* si)
{
  si->CrystalFreqKHz = si->ps.f_ref;
  si->RAMAmount      = si->ps.memory_size;
  si->psCardType     = si->ps.card_type;
  si->psCardArch     = si->ps.card_arch;
  si->SysVcoMin      = si->ps.min_system_vco;
  si->SysVcoMax      = si->ps.max_system_vco;
  si->PixVcoMin      = si->ps.min_pixel_vco;
  si->PixVcoMax      = si->ps.max_pixel_vco;
  si->Pix2VcoMin     = si->ps.min_video_vco;
  si->Pix2VcoMax     = si->ps.max_video_vco;
  si->pllScaleFactor = si->ps.ext_pll?4:0;      // extended pll compensation?
  si->DualHead       = si->ps.secondary_head;
}


// return memory requirement
int shared_info_size(void)
{
  return sizeof(shared_info);
}

#define MAXSTRING 512
void nv_log(char *format, ...)
{
    va_list args;
    char message[MAXSTRING];

    va_start(args, format);
    vsnprintf(message, MAXSTRING, format, args);
    va_end(args);

    printf ("%s",message);

    return;
}



