/*
 * Copyright (c) 2017, RISC OS Open Ltd
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef IRQDESPATCH_H
#define IRQDESPATCH_H

#include <stdint.h>
#include <stdbool.h>

#include "SyncLib/synclib.h"

typedef void (*irq_handler)(void);

typedef struct irqdespatch_s irqdespatch_t;

#define IRQ_SHARED 0x80000000

/* Allocate and initialise a new IRQ despatcher */
extern irqdespatch_t *irq_alloc(void);

/* Claim the given IRQ number on the given despatcher
   Returns true on success, false on failure (e.g. no memory) */
extern bool irq_claim(irqdespatch_t *despatch, int irq, uint32_t r12, irq_handler handler);

/* Release a claim */
extern bool irq_release(irqdespatch_t *despatch, int irq, uint32_t r12, irq_handler handler);

/* Handle the current IRQ */
extern void irq_handle(irqdespatch_t *despatch);

/* Convenience function for assembler */
extern void irq_disable(int irq);

/* OS_ClaimDeviceVector/OS_ReleaseDeviceVector */
extern bool irq_claim_swi(int irq, irq_handler handler, uint32_t r12);
extern bool irq_release_swi(int irq, irq_handler handler, uint32_t r12);

#endif
