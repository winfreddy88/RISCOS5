/*
 * Copyright (c) 2017, RISC OS Open Ltd
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef BOOTSTRAP_H
#define BOOTSTRAP_H

#include <stdint.h>

/* These all live in a code section, could probably be moved */
extern void BootstrapStart(void);
extern void BootstrapEnd(void);
extern void BootstrapLen(void);
extern void BootstrapBootOffset(void);
extern void BootstrapDataOffset(void);

/* KEEP IN SYNC WITH HDR.DEFS! */
typedef struct
{
	void *BootstrapLog; // Log addr of bootstrap code
	uint32_t MyL1PT; // Bootstrap L1PT phys addr
	uint32_t OSL1PT; // OS L1PT phys addr (actually, entire TTBR value)
	// The below are only valid once OSL1PT is in use
	void *CoreWS; // Ptr to workspace for core
	void *Kernel; // Kernel entry point
#ifdef BOOTSTRAP_DEBUG
	void *DebugTX; // HAL_DebugTX
	void *HALWS; // HAL workspace
#endif
} bootstrapdata_t;

/* Accessors */
#define bootstrap_start ((void *)(&BootstrapStart))
#define bootstrap_end ((void *)(&BootstrapEnd))
#define bootstrap_len (*((uint32_t *)(&BootstrapLen)))
#define bootstrap_bootoffset (*((uint32_t *)(&BootstrapBootOffset)))
#define bootstrap_dataoffset (*((uint32_t *)(&BootstrapDataOffset)))

#endif
