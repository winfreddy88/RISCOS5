; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        ; Array writer macros
        MACRO
        DCDArray $string, $len, $pre, $post
        LCLS    string2
 [ $len > 0
   [ "$string" = ""
        %       $len*4
   |
string2 SETS    " DCD      $pre" :CC: ("$string" :LEFT: 1) :CC: "$post"
        $string2
string2 SETS    " DCDArray " :CC: ("$string" :RIGHT: ((:LEN: "$string")-1)) :CC: "," :CC: :STR: ($len-1) :CC: ",$pre,$post"
        $string2
   ]
 |
        ASSERT "$string" = ""
 ]
        MEND

        MACRO
        DCBArray $string, $len, $pre, $post
        LCLS    string2
 [ $len > 0
   [ "$string" = ""
        %       $len
   |
string2 SETS    " DCB      $pre" :CC: ("$string" :LEFT: 1) :CC: "$post"
        $string2
string2 SETS    " DCBArray " :CC: ("$string" :RIGHT: ((:LEN: "$string")-1)) :CC: "," :CC: :STR: ($len-1) :CC: ",$pre,$post"
        $string2
   ]
 |
        ASSERT "$string" = ""
 ]
        MEND

        ; Big ugly macro for defining a board config
        ; Note - $mixers is the set of enabled mixers (not including the system)
        MACRO
        BOARDCFG $name, $debuguart, $haluarts, $defaultuart, $hali2cs, $numi2c, $videoi2c, $audiogpio, $machid, $mixers, $vbcflags, $vbclcdnum, $vbclcdptr, $haldevices
01
        DCD     $debuguart
        DCDArray "$haluarts", 4, L4_UART
        DCBArray "$haluarts", 4, UART, _IRQ
        DCB     $defaultuart-1
        DCB     2_10100 ; BoardFlags: no podules,no PCI cards,multi CPU,no soft off,and soft ROM
        %       2
        ASSERT  (:LEN: "$hali2cs") >= $numi2c
        ASSERT  ((:LEN: "$hali2cs") >= $videoi2c) :LOR: ($videoi2c = 255)
        DCDArray "$hali2cs", 5, L4_I2C
        DCBArray "$hali2cs", 5, I2C, _IRQ
        DCB     $numi2c
        DCB     $videoi2c
        %       1
        DCD     $audiogpio
        ASSERT  MixerChannels = 8
        ASSERT  $mixers <= 255
        DCB     255-($mixers :OR: (1<<MixerChannel_System))     ; convert to mask of disabled channels
        DCB     $vbcflags
        DCB     $vbclcdnum
        DCB     :LEN: "$haluarts"
        DCD     $vbclcdptr
        IMPORT  Board_InitDevices_$haldevices
        DCD     Board_InitDevices_$haldevices
        ASSERT  (:LEN: "$name") < 20
        DCB     "$name"
        %       20 - (:LEN: "$name")
        DCD     $machid
        DCD     0       ; EndOfRAM (filled in at run time)
        ASSERT  (. - %BT01) = BoardConfig_Size
        MEND

        ; Macro for defining LCDConfig structs
        MACRO
$label  LCDCONFIG $dsi_bpp, $dsi_lanes, $acbias_freq, $lcdtype, $flags, $timings, $maxpixrate
$label  DCB     $dsi_bpp
        DCB     $dsi_lanes
        DCB     $acbias_freq
        DCB     LCDConfig_LCDType_$lcdtype
        DCD     $flags
        IMPORT  Video_Power_$label
        DCD     Video_Power_$label
        DCD     $timings
        DCD     $maxpixrate
        ASSERT  (. - $label) = LCDConfig_Size
        MEND

        ; Macro for defining LCDTimings structs
        MACRO
$label  LCDTIMING $pixelrate, $hsw, $hfp, $hbp, $width, $vsw, $vfp, $vbp, $height, $syncpol
$label  DCD     $pixelrate*1000
        DCW     $hsw
        DCW     $hfp
        DCW     $hbp
        DCW     $width
        DCW     $vsw
        DCW     $vfp
        DCW     $vbp
        DCW     $height
        DCD     $syncpol
        ASSERT  (. - $label) = LCDTimings_Size
        MEND

        ; Make the mixer constants a bit nicer
M_HSO   *       (1 << MixerChannel_HeadsetOut)
M_AI    *       (1 << MixerChannel_AuxInput)
M_HF    *       (1 << MixerChannel_HandsFree)

        ; And VBC flags
VBC_SV  *       VideoBoardConfig_Flags_SVideo
VBC_C   *       VideoBoardConfig_Flags_Composite

        ; And now the table of board configs

BoardConfigTable
        ;               Name            DebugUART       UARTs   DefaultUART     I2Cs            NumI2C  VideoI2C        AudioGPIO       MachID                  MixerChans      VBC_Flags       VBC_LCDNum      VBC_LCDPtr      InitDevices
        BOARDCFG        "ISEE IGEPv5",  L4_UART3,       "1235", 3,              "12345",        5,      255,            144,            MachID_IGEP0050,        M_HSO+M_AI,     0,              1,              VBC_HDMI,       IGEPv5
        BOARDCFG        "OMAP5 UEVM",   L4_UART3,       "1235", 3,              "12345",        5,      255,            141,            MachID_OMAP5430EVM,     M_HSO+M_AI,     0,              1,              VBC_HDMI,       EVM
BoardConfigTable_End

        ;               DSI_BPP DSI_LANES       ACBias_freq     LCDType Flags   LCDTimings      Max_PixelRate
VBC_HDMI LCDCONFIG      24,     3,              &28,            TFT,    0,      0,              186000  ;201000

        END
