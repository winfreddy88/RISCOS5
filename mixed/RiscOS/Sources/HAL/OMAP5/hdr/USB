; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_USB_HDR__
        GBLL    __HAL_USB_HDR__

; USB_TLL_HS_CONFIG registers - relative to L4_USB_TLL_HS

USBTLL_REVISION                 *       &0000
USBTLL_HWINFO                   *       &0004
USBTLL_SYSCONFIG                *       &0010
USBTLL_SYSSTATUS                *       &0014
USBTLL_IRQSTATUS                *       &0018
USBTLL_IRQENABLE                *       &001C
TLL_SHARED_CONF                 *       &0030
TLL_CHANNEL_CONF_0              *       &0040
TLL_CHANNEL_CONF_1              *       &0044
TLL_CHANNEL_CONF_2              *       &0048
USBTLL_SAR_CNTX_0               *       &0400
USBTLL_SAR_CNTX_1               *       &0404
USBTLL_SAR_CNTX_2               *       &0408
USBTLL_SAR_CNTX_3               *       &040C
USBTLL_SAR_CNTX_4               *       &0410
USBTLL_SAR_CNTX_5               *       &0414
USBTLL_SAR_CNTX_6               *       &0418

; ULPI register groups - relative to L4_USB_TLL_HS
ULPI_BASE                       *       &0800
ULPI_SIZE                       *       &0100
ULPI_NUM                        *       3

ULPI_VENDOR_ID_LO               *       &0000 ; All registers are byte sized!
ULPI_VENDOR_ID_HI               *       &0001
ULPI_PRODUCT_ID_LO              *       &0002
ULPI_PRODUCT_ID_HI              *       &0003
ULPI_FUNCTION_CTRL              *       &0004
ULPI_FUNCTION_CTRL_SET          *       &0005
ULPI_FUNCTION_CTRL_CLR          *       &0006
ULPI_INTERFACE_CTRL             *       &0007
ULPI_INTERFACE_CTRL_SET         *       &0008
ULPI_INTERFACE_CTRL_CLR         *       &0009
ULPI_OTG_CTRL                   *       &000A
ULPI_OTG_CTRL_SET               *       &000B
ULPI_OTG_CTRL_CLR               *       &000C
ULPI_USB_INT_EN_RISE            *       &000D
ULPI_USB_INT_EN_RISE_SET        *       &000E
ULPI_USB_INT_EN_RISE_CLR        *       &000F
ULPI_USB_INT_EN_FALL            *       &0010
ULPI_USB_INT_EN_FALL_SET        *       &0011
ULPI_USB_INT_EN_FALL_CLR        *       &0012
ULPI_USB_INT_STATUS             *       &0013
ULPI_USB_INT_LATCH              *       &0014
ULPI_DEBUG                      *       &0015
ULPI_SCRATCH_REGISTER           *       &0016
ULPI_SCRATCH_REGISTER_SET       *       &0017
ULPI_SCRATCH_REGISTER_CLR       *       &0018
ULPI_EXTENDED_SET_ACCESS        *       &002F
ULPI_UTMI_VCONTROL_EN           *       &0030
ULPI_UTMI_VCONTROL_EN_SET       *       &0031
ULPI_UTMI_VCONTROL_EN_CLR       *       &0032
ULPI_UTMI_VCONTROL_STATUS       *       &0033
ULPI_UTMI_VCONTROL_LATCH        *       &0034
ULPI_UTMI_VSTATUS               *       &0035
ULPI_UTMI_VSTATUS_SET           *       &0036
ULPI_UTMI_VSTATUS_CLR           *       &0037
ULPI_USB_INT_LATCH_NOCLR        *       &0038
ULPI_VENDOR_INT_EN              *       &003B
ULPI_VENDOR_INT_EN_SET          *       &003C
ULPI_VENDOR_INT_EN_CLR          *       &003D
ULPI_VENDOR_INT_STATUS          *       &003E
ULPI_VENDOR_INT_LATCH           *       &003F

; USB HOST HS registers - relative to L4_USB_HOST_HS
UHH_REVISION                    *       &0000
UHH_HWINFO                      *       &0004
UHH_SYSCONFIG                   *       &0010
UHH_SYSSTATUS                   *       &0014
UHH_HOSTCONFIG                  *       &0040
UHH_DEBUG_CSR                   *       &0044
UHH_SAR_CNTX_i                  *       &0100   ; i = 0 - 383
OHCI_BASE                       *       &0800
EHCI_BASE                       *       &0C00

; OHCI registers - relative to OHCI_BASE
OHCI_HCREVISION                 *       &0000
OHCI_HCCONTROL                  *       &0004
OHCI_HCCOMANDSTATUS             *       &0008
OHCI_HCINTERRUPTSTATUS          *       &000C
OHCI_HCINTERRUPTENABLE          *       &0010
OHCI_HCINTERRUPTDISABLE         *       &0014
OHCI_HCHCCA                     *       &0018
OHCI_HCPERIODCURRENTED          *       &001C
OHCI_HCCONTROLHEADED            *       &0020
OHCI_HCCONTROLCURRENTED         *       &0024
OHCI_HCBULKHEADED               *       &0028
OHCI_HCBULKCURRENTED            *       &002C
OHCI_HCDONEHEAD                 *       &0030
OHCI_HCFMINTERVAL               *       &0034
OHCI_HCFMREMAINING              *       &0038
OHCI_HCFMNUMBER                 *       &003C
OHCI_HCPERIODICSTART            *       &0040
OHCI_HCLSTHRESHOLD              *       &0044
OHCI_HCRHDESCRIPTORA            *       &0048
OHCI_HCRHDESCRIPTORB            *       &004C
OHCI_HCRHSTATUS                 *       &0050
OHCI_HCRHPORTSTATUS_1           *       &0054
OHCI_HCRHPORTSTATUS_2           *       &0058
OHCI_HCRHPORTSTATUS_3           *       &005C

; EHCI registers - relative to EHCI_BASE
EHCI_HCCAPBASE                  *       &0000
EHCI_HCSPARAMS                  *       &0004
EHCI_HCCPARAMS                  *       &0008
EHCI_USBCMD                     *       &0010
EHCI_USBSTS                     *       &0014
EHCI_USBINTR                    *       &0018
EHCI_FRINDEX                    *       &001C
EHCI_CTRLDSSEGMENT              *       &0020
EHCI_PERIODICLISTBASE           *       &0024
EHCI_ASYNCLISTADDR              *       &0028
EHCI_CONFIGFLAG                 *       &0050
EHCI_PORTSC_0                   *       &0054
EHCI_PORTSC_1                   *       &0058
EHCI_PORTSC_2                   *       &005C
EHCI_INSNREG00                  *       &0090
EHCI_INSNREG01                  *       &0094
EHCI_INSNREG02                  *       &0098
EHCI_INSNREG03                  *       &009C
EHCI_INSNREG04                  *       &00A0
EHCI_INSNREG05_UTMI             *       &00A4 ; mode dependent bit fields (UTMI mode)
EHCI_INSNREG05_ULPI             *       &00A4 ; mode dependent bit fields (ULPI mode)
EHCI_INSNREG06                  *       &00A8
EHCI_INSNREG07                  *       &00AC
EHCI_INSNREG08                  *       &00B0

; USBOTGSS_WRAPPER registers - relative to L4_USB_OTG_SS
USBOTGSS_REVISION               *       &0000
USBOTGSS_SYSCONFIG              *       &0010
USBOTGSS_IRQSTATUS_RAW_0        *       &0024
USBOTGSS_IRQSTATUS_0            *       &0028
USBOTGSS_IRQENABLE_SET_0        *       &002C
USBOTGSS_IRQENABLE_CLR_0        *       &0030
USBOTGSS_IRQSTATUS_RAW_1        *       &0034
USBOTGSS_IRQSTATUS_1            *       &0038
USBOTGSS_IRQENABLE_SET_1        *       &003C
USBOTGSS_IRQENABLE_CLR_1        *       &0040
USBOTGSS_UTMI_OTG_CTRL          *       &0080
USBOTGSS_UTMI_OTG_STATUS        *       &0084
USBOTGSS_MMRAM_OFFSET           *       &0100
USBOTGSS_FLADJ                  *       &0104
USBOTGSS_DEBUG_CFG              *       &0108
USBOTGSS_DEBUG_DATA             *       &010C
USBOTGSS_DEV_EBC_EN             *       &0110

; USB2PHY registers - relative to L4_USB_PHY
USB2PHY_TERMINATION_CONTROL     *       &0000
USB2PHY_CHRG_DET                *       &0014
USB2PHY_GPIO                    *       &0030
USB2PHY_AD_INTERFACE_REG3       *       &0048
USB2PHY_ANA_CONFIG2             *       &0050
USB2PHY_CEGPIO_REG              *       &0078


        ] ; __HAL_USB_HDR__

        END
