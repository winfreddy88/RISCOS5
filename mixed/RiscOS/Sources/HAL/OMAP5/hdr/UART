; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; UART1-4

        [       :LNOT: :DEF: __HAL_UART_HDR__
        GBLL    __HAL_UART_HDR__

        GET     hdr.irqids543x

UART_THR                *       &000    ; Transmit Holding Register
UART_RHR                *       &000    ; Receiver Holding Register
UART_DLL                *       &000    ; Divisor Latch Low byte
UART_IER                *       &004    ; Interrupt Enable Register
UART_DLH                *       &004    ; Divisor Latch High byte
UART_IIR                *       &008    ; Interrupt Identification Register
UART_FCR                *       &008    ; FIFO Control Register
UART_EFR                *       &008    ; Enhanced Feature Register
UART_LCR                *       &00C    ; Line Control Register
UART_MCR                *       &010    ; Modem Control Register
UART_XON1_ADDR1         *       &010
UART_LSR                *       &014    ; Line Status Register
UART_XON2_ADDR2         *       &014
UART_TCR                *       &018    ; Transmission Control Register
UART_XOFF1              *       &018
UART_MSR                *       &018    ; Modem Status Register
UART_SPR                *       &01C    ; ScratchPad Register
UART_TLR                *       &01C    ; Trigger Level Register
UART_XOFF2              *       &01C
UART_MDR1               *       &020    ; Mode Definition Register 1
UART_MDR2               *       &024    ; Mode Definition Register 2
UART_SFLSR              *       &028    ; Status FIFO Line Status Register
UART_TXFLL              *       &028    ; Transmit Frame Length register Low
UART_RESUME             *       &02C
UART_TXFLH              *       &02C    ; Transmit Frame Length register High
UART_SFREGL             *       &030    ; Status FIFO Register Low
UART_RXFLL              *       &030    ; Received Frame Length register Low
UART_SFREGH             *       &034    ; Status FIFO Register High
UART_RXFLH              *       &034    ; Received Frame Length register High
UART_BLR                *       &038
UART_UASR               *       &038    ; UART Autobauding Status Register
UART_ACREG              *       &03C    ; Auxiliary Control Register
UART_SCR                *       &040    ; Supplementary Control Register
UART_SSR                *       &044    ; Supplementary Status Register
UART_EBLR               *       &048
UART_MVR                *       &050    ; Module Version Register
UART_SYSC               *       &054    ; System Configuration Register
UART_SYSS               *       &058    ; System Status Register
UART_WER                *       &05C    ; Wake-up Enable Register
UART_CFPS               *       &060    ; Carrier Frequency Prescaler
UART_RXFIFO_LVL         *       &064
UART_TXFIFO_LVL         *       &068
UART_IER2               *       &06C
UART_ISR2               *       &070
UART_FREQ_SEL           *       &074
UART_MDR3               *       &080    ; Mode Definition Register 3
UART_TX_DMA_THRESHOLD   *       &084

; bits in UART_IER
UART_IER_RHR_IT                 *       (1 << 0)
UART_IER_THR_IT                 *       (1 << 1)
UART_IER_LINE_STS_IT            *       (1 << 2)
UART_IER_MODEM_STS_IT           *       (1 << 3)
UART_IER_SLEEP_MODE             *       (1 << 4)
UART_IER_XOFF_IT                *       (1 << 5)
UART_IER_RTS_IT                 *       (1 << 6)
UART_IER_CTS_IT                 *       (1 << 7)

; bits in UART_IIR
UART_IIR_IT_PENDING             *       (1 << 0)
UART_IIR_IT_TYPE                *       (31 << 1)
UART_IIR_IT_TYPE_MODEM          *       ( 0 << 1)
UART_IIR_IT_TYPE_THR            *       ( 1 << 1)
UART_IIR_IT_TYPE_RHR            *       ( 2 << 1)
UART_IIR_IT_TYPE_RLSE           *       ( 3 << 1)       ; Receiver Line Status Error
UART_IIR_IT_TYPE_RXTO           *       ( 6 << 1)       ; RX Time-Out
UART_IIR_IT_TYPE_XOFF           *       ( 8 << 1)
UART_IIR_IT_TYPE_CTS_RTS_DSR    *       (16 << 1)
UART_IIR_FCR_MIRROR             *       (3 << 6)

; bits in UART_FCR
UART_FCR_FIFO_EN                *       (1 << 0)
UART_FCR_RX_FIFO_CLEAR          *       (1 << 1)
UART_FCR_TX_FIFO_CLEAR          *       (1 << 2)
UART_FCR_DMA_MODE               *       (1 << 3)
UART_FCR_TX_FIFO_TRIG           *       (3 << 4)
UART_FCR_TX_FIFO_TRIG_8         *       (0 << 4)
UART_FCR_TX_FIFO_TRIG_16        *       (1 << 4)
UART_FCR_TX_FIFO_TRIG_32        *       (2 << 4)
UART_FCR_TX_FIFO_TRIG_56        *       (3 << 4)
UART_FCR_RX_FIFO_TRIG           *       (3 << 6)
UART_FCR_RX_FIFO_TRIG_8         *       (0 << 6)
UART_FCR_RX_FIFO_TRIG_16        *       (1 << 6)
UART_FCR_RX_FIFO_TRIG_56        *       (2 << 6)
UART_FCR_RX_FIFO_TRIG_60        *       (3 << 6)

; bits in UART_LCR
UART_LCR_CHAR_LENGTH            *       (3 << 0)
UART_LCR_CHAR_LENGTH_5          *       (0 << 0)
UART_LCR_CHAR_LENGTH_6          *       (1 << 0)
UART_LCR_CHAR_LENGTH_7          *       (2 << 0)
UART_LCR_CHAR_LENGTH_8          *       (3 << 0)
UART_LCR_NB_STOP                *       (1 << 2)
UART_LCR_PARITY_EN              *       (1 << 3)
UART_LCR_PARITY_TYPE1           *       (1 << 4)
UART_LCR_PARITY_TYPE2           *       (1 << 5)
UART_LCR_BREAK_EN               *       (1 << 6)
UART_LCR_DIV_EN                 *       (1 << 7)

; bits in UART_LSR
UART_LSR_RX_FIFO_E              *       (1 << 0)
UART_LSR_RX_OE                  *       (1 << 1)
UART_LSR_RX_PE                  *       (1 << 2)
UART_LSR_RX_FE                  *       (1 << 3)
UART_LSR_RX_BI                  *       (1 << 4)
UART_LSR_TX_FIFO_E              *       (1 << 5)
UART_LSR_TX_SR_E                *       (1 << 6)
UART_LSR_RX_FIFO_STS            *       (1 << 7)

; bits in UART_MCR
UART_MCR_DTR                    *       (1 << 0)
UART_MCR_RTS                    *       (1 << 1)
UART_MCR_RI_STS_CH              *       (1 << 2) ; only used in loopback mode
UART_MCR_CD_STS_CH              *       (1 << 3) ; only used in loopback mode
UART_MCR_LOOPBACK_EN            *       (1 << 4)
UART_MCR_XON_EN                 *       (1 << 5)
UART_MCR_TCR_TLR                *       (1 << 6)

; bits in UART_MSR
UART_MSR_CTS_STS                *       (1 << 0)
UART_MSR_DSR_STS                *       (1 << 1)
UART_MSR_RI_STS                 *       (1 << 2)
UART_MSR_DCD_STS                *       (1 << 3)
UART_MSR_NCTS_STS               *       (1 << 4)
UART_MSR_NDSR_STS               *       (1 << 5)
UART_MSR_NRI_STS                *       (1 << 6)
UART_MSR_NCD_STS                *       (1 << 7)

; bits in UART_MDR1
UART_MDR1_MODE_SELECT           *       (7 << 0)
UART_MDR1_MODE_SELECT_UART_16X  *       (0 << 0)
UART_MDR1_MODE_SELECT_SIR       *       (1 << 0)
UART_MDR1_MODE_SELECT_UART_AB   *       (2 << 0)
UART_MDR1_MODE_SELECT_UART_13X  *       (3 << 0)
UART_MDR1_MODE_SELECT_MIR       *       (4 << 0)
UART_MDR1_MODE_SELECT_FIR       *       (5 << 0)
UART_MDR1_MODE_SELECT_CIR       *       (6 << 0)
UART_MDR1_MODE_SELECT_DISABLE   *       (7 << 0)
UART_MDR1_IR_SLEEP              *       (1 << 3)
UART_MDR1_SET_TXIR              *       (1 << 4)
UART_MDR1_SCT                   *       (1 << 5)
UART_MDR1_SIP_MODE              *       (1 << 6)
UART_MDR1_FRAME_END_MODE        *       (1 << 7)

; bits in UART_SYSC (system configuration register)
UART_SYSC_AUTOIDLE              *       (1 << 0)
UART_SYSC_SOFTRESET             *       (1 << 1)
UART_SYSC_ENWAKEUP              *       (1 << 2)
UART_SYSC_IDLEMODE_FORCE        *       (0 << 3) ; Force idle mode
UART_SYSC_IDLEMODE_NONE         *       (1 << 3) ; No idle mode
UART_SYSC_IDLEMODE_SMART        *       (2 << 3) ; Smart idle
UART_SYSC_IDLEMODE_SMARTWUP     *       (3 << 3) ; Smart idle Wakeup

; bits in UART_SYSS (system status register)
UART_SYSS_RDONE                 *       (1 << 0) ; Reset done bit


UARTCLK         *       48000000 ; CORE_48M_FCLK

UART1_IRQ       *       OMAP54XX_IRQ_UART1
UART2_IRQ       *       OMAP54XX_IRQ_UART2
UART3_IRQ       *       OMAP54XX_IRQ_UART3
UART4_IRQ       *       OMAP54XX_IRQ_UART4
UART5_IRQ       *       OMAP54XX_IRQ_UART5


        ] ; __HAL_UART_HDR__

        END
