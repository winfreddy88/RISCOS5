; Copyright 2017 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_I2C_HDR__
        GBLL    __HAL_I2C_HDR__

        GET     hdr.iMx6q

; I2C registers - relative to relevant BaseAddr, etc.
I2C_SlAddr              *       I2C_IADR_OFFSET          ; Slave address
I2C_FDiv                *       I2C_IFDR_OFFSET          ; Clock divider
I2C_CR                  *       I2C_I2CR_OFFSET          ; Control Reg
I2C_SR                  *       I2C_I2SR_OFFSET
I2C_DR                  *       I2C_I2DR_OFFSET

; I2C_CR bits
I2C_CRIEN               *       (1<<7)                  ; Enable
I2C_CRIIEN              *       (1<<6)                  ; IRQ En
I2C_CRMSTA              *       (1<<5)                  ; Master/~slave
I2C_CRMTX               *       (1<<4)                  ; Tx/~Rx
I2C_CRTXAK              *       (1<<3)                  ; send rx ack bit if 0
I2C_CRRSTA              *       (1<<2)                  ; send repeat start

; I2C_SR bits
I2C_SRICF               *       (1<<7)                  ; 1 = transfer complete
I2C_SRIAAS              *       (1<<6)                  ; 1 = addressed as slave
I2C_SRIBB               *       (1<<5)                  ; 1 = bus busy
I2C_SRIAL               *       (1<<4)                  ; 1 = arbitration lost
I2C_SRSRW               *       (1<<2)                  ; 1 = slave tx mode,0=rx
I2C_SRIIF               *       (1<<1)                  ; 1 = IRQ pending
I2C_SRRXACK             *       (1<<0)                  ; 0 = rxack was rcvd



; I2C transfer block/hardware info

                ^       0
I2CBlockBase    #       0
I2C_XIONum      #       4 ; logical interface number, used for error recovery
I2C_XHW         #       4 ; Address of I2C hardware regs
I2C_XACTIONum   #       4 ; Actual I2C Channel
I2C_XIRQ        #       4 ; IRQ number
I2C_XStart      #       4 ; iic_transfer array ptr (null for idle channel)
I2C_XEnd        #       4 ; array end ptr (inclusive)
I2C_XCurrent    #       4 ; Current iic_transfer ptr
I2C_XBytes      #       4 ; Bytes transferred in current iic_transfer
I2C_XRemain     #       4 ; Bytes remaining in non-repeated start iic_transfers (RX only)
I2CBlockSize    #       0

        ] ; __HAL_I2C_HDR__

        END
