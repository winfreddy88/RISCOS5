/* Copyright 2016 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef spi_H
#define spi_H

#ifdef DEBUGLIB
#define DEBUG
#endif
#ifdef DEBUG
#undef dprintf
#define dprintf(...) _dprintf("",__VA_ARGS__)  
#else
#undef dprintf
#define dprintf(...) (void) 0
#endif


#include <stdint.h>
#include <stdbool.h>



#define SPI_ErrorBase 0x820600
enum
{
   SPI_NoRoom = 0x00,
   SPI_SWIunkn,
   SPI_RCunkn,
   SPI_BadReset,
   SPI_BadHostID,
   SPI_BadDevID,
   SPI_NoDevice,
   SPI_Established,
   SPI_NotEstablished,
   SPI_NotIdle,
   SPI_Timeout,
   SPI_Timeout2,
   SPI_QueueNotEmpty,
   SPI_QueueFull,
   SPI_DevReserved,
   SPI_InvalidParms,
   SPI_ParmError,
   SPI_NotFromIRQ,
   SPI_AbortOp,
   SPI_Died,
   SPI_WrongMEMC,
   SPI_UnKnCmd,

   SPI_CheckCondition = 0x80,
   SPI_Busy,
   SPI_StatusUnkn,

   SPI_CC_NoSense = 0xC0,
   SPI_RecoveredError,
   SPI_CC_NotReady,
   SPI_CC_MediumError,
   SPI_CC_HardwareError,
   SPI_CC_IllegalRequest,
   SPI_CC_UnitAttention,
   SPI_CC_DataProtect,
   SPI_CC_BlankCheck,
   SPI_CC_VendorUnique,
   SPI_CC_CopyAborted,
   SPI_CC_AbortedCommand,
   SPI_CC_Equal,
   SPI_CC_VolumeOverflow,
   SPI_CC_Miscompare,
   SPI_CC_Reserved,
   SPI_CC_UnKn,
};

typedef _kernel_oserror *swient(_kernel_swi_regs *);

swient spid_version, spid_initialise, spid_control,
       spid_op, spid_status, 
       spid_register, spid_deregister;

void spi_deregister_all(void);


#endif
