; Copyright 2003 Tematic Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        AREA    |Asm$$Code|,CODE,READONLY

        EXPORT  asm_calldriver
        IMPORT  module_error

; APCS
; In: R0 = routine
;     R1 = their R12
;     R2 = their R8
;     R3 = their R11
;     [SP,#0] -> parameter block (R0-R7)
; Out: R0 = error pointer (if V set) else 0
;      R0-R7 of parameter block updated
asm_calldriver
        STMFD   R13!, {R4-R11,LR}
        LDR     R9, [R13, #36]
        MOV     R10, R0
        MOV     R11, R3
        MOV     R12, R1
        MOV     R8, R2
        LDMIA   R9, {R0-R7}
        MOV     LR, PC
        MOV     PC, R10
        STMIA   R9, {R0-R7}
        MOVVC   R0, #0
        LDMVCFD R13!, {R4-R11,PC}
        LDMFD   R13!, {R4-R11,LR}       ; handles translation of low
        B       module_error            ; error numbers

        EXPORT  asm_callrelease

; APCS
; In: R0 = routine
;     R1 = their R12
;     R2 -> parameter block
; Out: R0 = error pointer (if V set) else 0
asm_callrelease
        STMFD   R13!, {R4-R10,LR}
        MOV     R10, R0
        MOV     R9, R2
        MOV     R12, R1
        LDMIA   R9, {R0-R8}
        MOV     LR, PC
        MOV     PC, R10
        MOVVC   R0, #0
        LDMFD   R13!, {R4-R10,PC}

        EXPORT  asm_callcallback

; APCS
; In: R0 = routine
;     R1 = their R12
;     R2 -> parameter block
asm_callcallback
        STMFD   R13!, {R4-R9,LR}
        CMP     R0, #0
        BEQ     %FT10
        CMP     R0, #&80000000
        CMNVC   R0, #&80000000
10      MOV     R9, R0
        MOV     R8, R2
        MOV     R12, R1
        LDMIA   R8, {R0-R7}
        MOV     LR, PC
        MOV     PC, R9
        MOVVC   R0, #0
        LDMFD   R13!, {R4-R9,PC}

; Keep in sync with C code
IDLE            EQU &00000000
RUNNING         EQU &00000004
STALLED         EQU &00000008
WAITING         EQU &00000010
INITIALISING    EQU &00000020
INITIALISED     EQU &00000040
ERROR           EQU &00000080

        EXPORT  asm_callbackhandler
; SCSI_Op background callback routine used for foreground ops
asm_callbackhandler
        ; keep layout in sync with C code
        MOVVC   R5,#IDLE
        MOVVS   R5,#ERROR
        STMIA   R12,{R0,R1,R2,R3,R4,R5}
        MOV     PC,LR

; Entry point for callbacks from drivers
        IMPORT  driver_callback_entry
        IMPORT  driver_error_entry
        EXPORT  asm_driver_callback
asm_driver_callback
        BVC     driver_callback_entry
        BVS     driver_error_entry

        END
