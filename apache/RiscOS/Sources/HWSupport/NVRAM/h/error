/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* error.h
 *
 *      General purpose error header.
 */

/* We use top bit of error number to flag whether error needs   */
/* to be looked up before being returned to the OS.             */
#define ERROR_LOOKUP_BIT        (1U<<30)

#define ERROR_BASE              0x00819200

/* Our errors. */
#define ERROR_NOMEM             (ERROR_BASE+0)
#define ERROR_NOTAG             (ERROR_BASE+1)
#define ERROR_LOCKED            (ERROR_BASE+2)
#define ERROR_READBUF           (ERROR_BASE+4)
#define ERROR_NOTBYTE           (ERROR_BASE+5)
#define ERROR_NEEDBUF           (ERROR_BASE+6)

/* Declare the given error in a memory efficient way. */
#define ERROR_STRUCT(prefix,name,text) \
        prefix struct {int errnum; char errmess[sizeof(text)];} name = {ERROR_LOOKUP_BIT | ERROR_##name,text}
#define ERROR_EXTERN(name) \
        extern struct {int errnum; char errmess[1];} name;

#define ERROR(e)  ((_kernel_oserror *)&(e))
