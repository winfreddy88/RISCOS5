/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
typedef struct elementinfo_body
{
    char *onload;
    char *onunload;
    char *background;
    unsigned int text;
    unsigned int bgcolour;
    unsigned int link;
    unsigned int vlink;
    unsigned int alink;
} elementinfo_body;

typedef struct elementinfo_meta
{
    char *http_equiv;
    char *name;
    char *content;
    char *scheme;
} elementinfo_meta;

typedef struct elementinfo_form
{
    char *action;
    formmethod method;
    char *enctype;
    char *accept_charset;
    char *onsubmit;
    char *onreset;
    char *target;
} elementinfo_form;

typedef struct elementinfo_input
{
    inputtype type;
    char *name;
    char *value;
    unsigned int checked:1;
    unsigned int disabled:1;
    unsigned int readonly:1;
    unsigned int size;
    unsigned int maxlength;
    char *src;
    char *alt;
    char *usemap;
    imgalign align;
    int tabindex;
    char *onfocus;
    char *onblur;
    char *onselect;
    char *onclick;
    char *onchange;
    char *accept;
} elementinfo_input;

typedef struct elementinfo_select
{
    char *name;
    unsigned int size;
    unsigned int multiple:1;
    unsigned int disabled:1;
    int tabindex;
    char *onfocus;
    char *onblur;
    char *onselect;
    char *onclick;
    char *onchange;
    int *options;
} elementinfo_select;

typedef struct elementinfo_option
{
    unsigned int selected:1;
    unsigned int disabled:1;
} elementinfo_option;

typedef struct elementinfo_object
{
    unsigned int declare:1;
    unsigned int shapes:1;
    int tabindex;
    char *type;
    char *usemap;
    int vspace;
    int hspace;
    imgalign align;
    char *archive;
    int border;
    char *classid;
    char *codebase;
    char *codetype;
    char *data;
    char *standby;
    HStream *hstream;
    HStream *mapstream;
    MapStream *maps;
    HStream *parent;
} elementinfo_object;

typedef struct elementinfo_param
{
    const char *name;
    const char *type;
    const char *value;
    paramtype valuetype;
}
elementinfo_param;

union elementinfo
{
    elementinfo_body   body;
    elementinfo_meta   meta;
    elementinfo_form   form;
    elementinfo_input  input;
    elementinfo_select select;
    elementinfo_option option;
    elementinfo_object object;
    elementinfo_param  param;
};
