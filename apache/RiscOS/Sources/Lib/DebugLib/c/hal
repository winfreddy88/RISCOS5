/* Copyright 2010 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************************/
/* File:    hal.c                                                         */
/* Purpose: Routines for the HAL output method.                           */
/*                                                                        */
/* Copyright [1999-2001] Pace Micro Technology PLC.  All rights reserved. */
/*                                                                        */
/* The copyright in this material is owned by Pace Micro Technology PLC   */
/* ("Pace").  This material is regarded as a highly confidential trade    */
/* secret of Pace.  It may not be reproduced, used, sold or in any        */
/* other way exploited or transferred to any third party without the      */
/* prior written permission of Pace.                                      */
/**************************************************************************/


/* -------------------------------------- LIBRARY IMPORTS --------------------------------------- */
#include "include.h"
#include "misc.h"
#include "hal.h"
#include "globals.h"
#include "Global/HALEntries.h"


/**********************/
/* Exported functions */


/************************************************************************/
/* debug_hal_init                                                       */
/*                                                                      */
/* Function to initialise HAL debug output                              */
/*                                                                      */
/*                                                                      */
/* Parameters: void.                                                    */
/*                                                                      */
/* Returns:    true or false.                                           */
/*                                                                      */
/************************************************************************/
bool debug_hal_init (void)
{
  /* Check that the HAL_DebugTX entry point exists. OS_Hardware should return an error if it doesn't, but we'll check for a null pointer just in case. */
  void *ptr;
  if (_swix(OS_Hardware, _INR(8,9)|_OUT(0), 1, EntryNo_HAL_DebugTX, &ptr) || !ptr)
    return false;
  return true;
}


/************************************************************************/
/* debug_hal_output                                                     */
/*                                                                      */
/* Function outputs the data from the library to the HAL                */
/*                                                                      */
/* Parameters: buffer   - text to output.                               */
/*                                                                      */
/* Returns:    void.                                                    */
/*                                                                      */
/************************************************************************/
void debug_hal_output (const char *buffer, size_t len)
{
  size_t count;

  for (count = 0; count < len; count++)
  {
    _swix (OS_Hardware, _IN(0)|_INR(8,9), (int) buffer[count], 0, EntryNo_HAL_DebugTX);
  }
}
