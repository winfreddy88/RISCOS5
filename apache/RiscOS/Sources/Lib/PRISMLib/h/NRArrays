/* Copyright 2005 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    NRArrays.h                                        */
/*          (C) 2005 Tematic Ltd.                             */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Array management, originally from ARLib routines  */
/*          by S.J.Middleton.                                 */
/*                                                            */
/*          Simple, non-reentrant routines.                   */
/*                                                            */
/* Author:  S.J.Middleton (1992), A.D.Hodgkinson.             */
/*                                                            */
/* History: 06-May-2005 (ADH): Created from ARLib's array.h.  */
/**************************************************************/

#ifndef PRISMLIB_NRARRAYS_H
  #define PRISMLIB_NRARRAYS_H

  /* External inclusions */

  #include <kernel.h>

  /* PRISMLib inclusions */

  #include <PRISMLib/FuncTypes.h>

  /* Data types */

  typedef struct prismlib_internal_nrarray prismlib_nrarray_t;

  /* Function prototypes */

  prismlib_nrarray_t * prismlib_nrarrays_create
                       (
                         int                       initial_n,
                         size_t                    elem_size,
                         prismlib_realloc_fn_ptr_t reallocfn,
                         prismlib_free_fn_ptr_t    freefn
                       );

  _kernel_oserror    * prismlib_nrarrays_extend
                       (
                         prismlib_nrarray_t * restrict v,
                         int                           n
                       );

  _kernel_oserror    * prismlib_nrarrays_insert
                       (
                         prismlib_nrarray_t * restrict v,
                         int                           n,
                         int                           at
                       );

  _kernel_oserror    * prismlib_nrarrays_delete
                       (
                         prismlib_nrarray_t * restrict v,
                         int                           n,
                         int                           at
                       );

  void                 prismlib_nrarrays_destroy
                       (
                         prismlib_nrarray_t ** restrict pv
                       );

  int                  prismlib_nrarrays_size
                       (
                         prismlib_nrarray_t * restrict v
                       );

  void               * prismlib_nrarrays_read
                       (
                         prismlib_nrarray_t * restrict v,
                         int                  entry
                       );

  void                 prismlib_nrarrays_sort
                       (
                         prismlib_nrarray_t        * restrict v,
                         prismlib_compare_fn_ptr_t            comp_fn
                       );

  int                  prismlib_nrarrays_search
                       (
                         prismlib_nrarray_t        * restrict v,
                         const void                *          key,
                         prismlib_compare_fn_ptr_t            comp_fn
                       );

#endif /* PRISMLIB_NRARRAYS_H */

/* End of file */
