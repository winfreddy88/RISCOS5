/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* > eightbit.h */

/**************************************************************************/
/*                                                                        */
/* Copyright [1997-2003] All rights reserved.                             */
/*                                                                        */
/* This file may be included in profit making or non profit making        */
/* software on any system running any version of RISC OS, provided it was */
/* used along with a licensed binary of Unicode Lib                       */
/* It is supplied "as is" without warranty, express or implied, of        */
/* merchantability for any purpose.                                       */
/* No liability can be claimed for any direct or indirect loss            */
/**************************************************************************/

extern EncodingPriv enc_eightbit;

typedef struct EightBit_Encoding
{
    EncodingPriv e;
    encoding_table table; /* 128-entry table for codes 0x80-0xFF */
} EightBit_Encoding;

extern int eightbit_reset(Encoding *e, int for_encoding);
extern unsigned int eightbit_read(EncodingPriv *e,
			   encoding_read_callback_fn ucs_out,
                           const unsigned char *s,
                           unsigned int n,
                           void *handle);
extern int eightbit_read_in_multibyte_sequence(EncodingPriv *e);
extern int eightbit_write(EncodingPriv *e, UCS4 u, unsigned char **s, int *bufsize);
extern void eightbit_delete(EncodingPriv *e);
