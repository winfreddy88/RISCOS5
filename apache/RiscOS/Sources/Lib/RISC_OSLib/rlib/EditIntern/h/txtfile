/* Copyright 2009 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -> h.txtfile
 * Title: txtfile.h
 * Purpose: Search text for string.
 * Author: AFP
 * Status: system-independent
 * Requires:
 *   h.txt
 *   h.txtdat
 * History:
 *   16 July 87 -- started
 *   17 December 87: AFP: converted into C.
 */

void txtfile_buildnewtimestamp(typdat oldty, typdat *newty);
/* build a stamp with the current time/date and old type */

BOOL txtfile_insert(txt t, char *filename, int length, typdat *ty /*out*/);
/* Insert the contents of the named file, returning TRUE if successful. If
you know the length of the file then pass it in length, else set length to
-1. The type/date words will be written to *ty, if successful. */

int txtfile_saverange(txt t, char *filename, typdat ty, txt_index from, txt_index to);
/* Save the given range of text, using the given type/date stamp. */

#if BASIC
BOOL txtfile_basicimport(txtedit_state *s, BOOL insrep, int detokenise, BOOL strip);
/* import some BASIC into the txt. */

BOOL txtfile_basicinsert(txt t, char *filename, int l, typdat *ty, int detokenise, BOOL strip);
/* insert a BASIC file into the txt. */

BOOL txtfile_basicsenderproc(txt t, int *maxbuf, txt_index from, txt_index to, int tokenise, int increment);
/* export some BASIC from the txt. */

BOOL txtfile_savebasicrange(txt t, char *filename, typdat ty, txt_index from, txt_index to, int tokenise, int increment);
/* export to a BASIC file from the txt. */
#endif
