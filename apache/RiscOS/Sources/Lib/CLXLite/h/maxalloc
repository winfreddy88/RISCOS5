/* Copyright 2003 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
  Title:        maxalloc - Grab as much memory as we can at one go.
  Status:       C Library Extension
  Copyright:    (C) 1988, Acorn Computers Ltd., Cambridge, England.
  $Revision: 1.1 $  LDS 11-Mar-88
*/

#ifndef __maxalloc_h
#define __maxalloc_h

#ifndef VoidStar
#  ifdef __STDC__
#    define VoidStar  void *
#  else
#    define VoidStar  char *
#  endif
#endif

extern VoidStar maxalloc(long *ask_get);
/*
 * One entry, *ask_get contains a requested size.
 * On exit, *ask_get is updated to contain the amount got.
 * maxalloc returns a pointer to the gotten memory.
 * In the event of error, NULL is returned and *ask_get is set to 0.
 */

#endif
