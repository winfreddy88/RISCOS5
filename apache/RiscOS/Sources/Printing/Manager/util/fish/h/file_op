/* Copyright 2000 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*----------------------------------------------------------------------*/
/*    Filename    : h.file_op                                           */
/*    Author	  : A.Rodger						*/
/*    Date        : Nov 1997						*/
/*    Source      : c++.file_op						*/
/*    Description : class for all forms of file manipulation a file     */
/*    		  is essentially a block of memory in RAM.		*/
/*    Modification history:      		       			*/
/*----------------------------------------------------------------------*/

#ifndef __fileop_h_
#define __fileop_h_

#include "main.h"
#include "WimpJob.h"

class file
{
	int compress();						// uses the compress swi, done before saving.
public:
	char *name;						// the file name excluding path.
	char *pointer;						// this is an allocated block of memory.
	int size, type;
	
	file(char *s_filename, int filetype, BOOL new_open = FALSE, int new_size = 0); 	// creates a new file of size
	~file();
	
	int save();						// creates a save dialogue box
	void print();						// dumps to debug.
	
	int line_to_int(int *position);                         
	int copy_line(char *buffer, int *position);
	char *line_to_alloc_string(int *position);
	void eat_line(int *position);

};
	
#endif
