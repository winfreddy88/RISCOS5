/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* fudge.c */

/* extract data to fudge old-style palette from prtablegen o/p */

#include <stdio.h>
#include <stdlib.h>

#define PalSize  3637
#define LUTsAt   0x454
#define InvPalAt 0x9c0

unsigned char map[768];
unsigned char palette[PalSize];

static FILE *do_fopen(char *name, char *mode)
{
  FILE *fp = fopen(name,mode);

  if (fp == NULL)
  {
    fprintf(stderr,"failed to open '%s'\n",name);
    exit(1);
  }
  return fp;
}

int main(int argc, char *argv[])
{
  int  i;
  FILE *fp;

  if (argc != 4)
  {
    fprintf(stderr,"usage: fudge <prtablegen table> <palette> <new palette>\n");
    exit(1);
  }

  fp = do_fopen(argv[1],"r");
  fread(map,16,1,fp);
  fread(map,768,1,fp);
  fclose(fp);

  fp = do_fopen(argv[2],"r");
  fread(palette,PalSize,1,fp);
  fclose(fp);

  for (i=0; i<256; i++)
  {
    palette[i+LUTsAt]     = 255 - map[255 - i];
    palette[i+LUTsAt+256] = 255 - map[256 + 255 - i];
    palette[i+LUTsAt+512] = 255 - map[512 + 255 - i];
  }

  for (i=0; i<256*4; i++)
    palette[i+InvPalAt] = palette[i+InvPalAt] >> 1;

  fp = do_fopen(argv[3],"wb");
  fwrite(palette,PalSize,1,fp);
  fclose(fp);

  return 0;
}
