/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#define FONTNAMEMAX 40
#define FOREIGNNAMEMAX 60
#define ENCODINGNAMEMAX 60

typedef enum {Downloaded, Mapped} EntryType;

typedef struct fontentry
{
    EntryType type;
    Bool selected;
    char local [FONTNAMEMAX];
    char foreign [FOREIGNNAMEMAX];
    char encoding [ENCODINGNAMEMAX];
    struct fontentry *prev, *next;
} FontRec, *FontPtr;

FontPtr add_font (FontPtr after, char *local, char *foreign, char *encoding);
void remove_font (FontPtr font);
void select_font (FontPtr font);
void toggle_font (FontPtr font);
void select_all (void);
void deselect_all (void);
int num_fonts (int n);
FontPtr selected_font (void);
void check_selected_fonts (FontPtr this, Bool *sameType, Bool *sameMap, Bool *sameEnc);
#if 0
Bool all_selected_fonts_match (FontPtr this);
#endif
void set_all_selected_to_enc (char *encoding);
void set_all_selected_to (EntryType type, char *foreign);
FontPtr find_font (char *local);

extern FontPtr firstFont, lastFont;
extern int num_selected;
