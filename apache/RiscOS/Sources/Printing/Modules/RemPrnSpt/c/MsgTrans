/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*> c.MsgTrans <*/
/*-------------------------------------------------------------------------*/
/* Wrappers for MessageTrans SWIs                                          */
/*-------------------------------------------------------------------------*/

#include <stdio.h>
#include <stdlib.h>

#include "kernel.h"
#include "swis.h"

#include "MsgTrans.h"
#include "Debug.h"

static char buffer[MSGBUFSIZE] ;

_kernel_oserror *msgtrans_openfile(char *ResourceFile, int file_data[])
{
  _kernel_swi_regs r;
  _kernel_oserror *err;

  if (file_data[4]) return NULL;

  r.r[0] = (int)file_data;
  r.r[1] = (int)ResourceFile;
  r.r[2] = 0;
  if ((err = _kernel_swi(MessageTrans_OpenFile, &r, &r)) != NULL)
    return err;
  file_data[4] = 1;
  return NULL;
}

extern void msgtrans_closefile(int file_data[])
{
  _kernel_swi_regs r;

  if (file_data[4] == 0) return;

  r.r[0] = (int)file_data;
  (void)_kernel_swi(MessageTrans_CloseFile, &r, &r);
  file_data[4] = 0;
}

extern _kernel_oserror *msgtrans_lookup(
  int  file_data[],
  char *token,
  char **buf,
  char *p1,
  char *p2,
  char *p3,
  char *p4
) {
  _kernel_swi_regs r;
  _kernel_oserror *err;

  r.r[0] = (int)file_data;
  r.r[1] = (int)token;
  r.r[2] = (int) buffer;
  r.r[3] = MSGBUFSIZE;
  r.r[4] = (int)p1;
  r.r[5] = (int)p2;
  r.r[6] = (int)p3;
  r.r[7] = (int)p4;
  if ((err = _kernel_swi(MessageTrans_Lookup, &r, &r)) != NULL)
    return err;

  *buf = (char *)r.r[2];

  return NULL;
}

extern _kernel_oserror *msgtrans_error_lookup(
  int  file_data[],
  _kernel_oserror  *errblk,
  char *p1,
  char *p2,
  char *p3,
  char *p4
) {
  _kernel_swi_regs r;

  r.r[0] = (int)errblk ;
  r.r[1] = (int)file_data;
  r.r[2] = (int) buffer;
  r.r[3] = MSGBUFSIZE;
  r.r[4] = (int)p1;
  r.r[5] = (int)p2;
  r.r[6] = (int)p3;
  r.r[7] = (int)p4;

    return (_kernel_swi(MessageTrans_ErrorLookup, &r, &r)) ;
}
