/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*-*-C-*-
 * Interface to the font registry
 */

#include "module.h"
#include "registry.h"

Bool getnext(int *handle,       /* updated with next handle, or 0 */
             char **local,      /* points to RMA storage */
             char **foreign,    /* which we do not own */
             int flags)         /* Only return entries that match this */
{
    int left, buf[3];
    do
    {
        _swix(PDriver_MiscOp, _INR(0,4) | _OUTR(2,3),
              MiscOp_EnumerateFonts, buf, sizeof(buf), *handle, 0,
              &left, handle);
        if (left == 0 && buf[2] == flags)
        {
            *local = (char *) buf[0];
            *foreign = (char *) buf[1];
            return TRUE;
        }
    } while (*handle);
    return FALSE;
}

char *addrecord(char *local, char *foreign, int flags, Bool overwrite)
{
    char *lp, *fp;
    int handle = 0;
    if (_swix(PDriver_MiscOp, _INR(0,4),
              MiscOp_AddFont, local, foreign, flags, overwrite ? MiscOp_AddFont_Overwrite : 0))
        return NULL;
    do
        if (getnext(&handle, &lp, &fp, flags))
            if (compare(lp, local) == 0)
                return fp;
    while (handle);
    return NULL;
}

#if DEBUG
seethem (int flags)
{
        char *lp, *fp;
        int han = 0;
        do
                if (getnext(&han, &lp, &fp, flags))
                {
                        dstringc("CheckEntry: *");
                        dstringc(lp); dstringc("* -> *");
                        dstringc(fp); dstring("*");
                }
        while (han);
}
#endif
