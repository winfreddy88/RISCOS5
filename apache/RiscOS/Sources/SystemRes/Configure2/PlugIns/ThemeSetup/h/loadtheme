/* Copyright 2013 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*---------------------------------------------------------------------------*/
/* File:    loadtheme.h                                                      */
/*---------------------------------------------------------------------------*/

typedef struct
{
    /* Flags */
    BOOL threedborders;
    BOOL texturedmenus;
    BOOL altmenutexture;
    BOOL removeiconboxes;
    BOOL noiconboxesintranswin;
    BOOL threediconbar;
    BOOL fontblend;
    BOOL winoutlineover;

    /* Colours */
    uint32_t winborderface;
    uint32_t winborderopp;
    uint32_t menuborderface;
    uint32_t menuborderopp;
    uint32_t winoutline;
} wimpvisflags_t;
#define WIMPVISFLAGS_RGB_COLOUR(k) ((k)[1] | ((k)[2] << 8) | ((k)[3] << 16)) 
#define WIMPVISFLAGS_DEFAULT       FALSE, FALSE, FALSE, TRUE, \
                                   FALSE, FALSE, FALSE, FALSE, \
                                   0xFFFFFF, 0x777777, \
                                   0xFFFFFF, 0x999999, \
                                   0x000000

typedef struct theme
{
    struct theme  *next;
    void          *previewarea;
    char           name[ThemeNameLen];
    wimpvisflags_t wvf;
    ComponentId    menuid;
} theme_t;

typedef struct
{
    uint32_t width;
    uint32_t height;
    uint32_t xeigen;
    uint32_t yeigen;
    uint32_t mode;
    char     name[12 + 1];
} spriteinfo_t;

typedef struct
{
    int32_t xoffsp;
    int32_t yoffsp;
    int32_t xoffltr;
    int32_t yoffltr;
    int32_t split;
    int32_t xmin;
    int32_t ymin;
    int32_t xmax;
    int32_t ymax;
} fontscan_t;

/* Preview definitions - note the things in OS units are
 * multiples of 4 to avoid having to deal with truncation in
 * plotting into differing eigenfactors.
 */
#define PALETTE_OF_BACKDROP       0x77777700 /* Mid dark grey */
#define PALETTE_OF_WINDOW_BG      0xDDDDDD00 /* Very light grey */
#define PALETTE_OF_MENU_BG        0xFFFFFF00 /* White */
#define PALETTE_OF_TITLE_BG       0xBBBBBB00 /* Light grey */
#define PALETTE_OF_TITLE_FOCUS_BG 0xBBEEEE00 /* Cream */
#define PALETTE_OF_TEXT_FG        0x00000000 /* Black */
#define DEFAULT_WIMP_FONT_SIZE    12*16      /* Points x16 */
#define PREVIEW_WIDTH_OSUNITS     320
#define PREVIEW_HEIGHT_OSUNITS    240
#define MENU_ENTRY_YSTEP_OSUNITS  44
#define SYSFONT_XSIZE_OSUNITS     16
#define SYSFONT_YSIZE_OSUNITS     32
#define SYSFONT_YMAX_OSUNITS      (SYSFONT_YSIZE_OSUNITS - SYSFONT_DESCENDER_OSUNITS)    
#define SYSFONT_DESCENDER_OSUNITS 4
#define INSET_WINDOW_LEFT_OSUNITS 64
#define INSET_WINDOW_TOP_OSUNITS  28
#define INSET_MENU_TICK_OSUNITS   GAP_ICON_OSUNITS+24
#define INSET_MENU_ARROW_OSUNITS  GAP_ICON_OSUNITS+24
#define INSET_MENU_LEFT_OSUNITS   28
#define INSET_MENU_TOP_OSUNITS    100
#define INSET_FILE_LEFT_OSUNITS   240
#define INSET_FILE_TOP_OSUNITS    136
#define GAP_ICON_OSUNITS          4
#define GAP_TEXT_OSUNITS          8
#define GAP_TBARRCAP_OSUNITS      8
#define GAP_BEVEL_OSUNITS         4
#define CEIL_DY(k)                (((k) - (dy / 2) + (dy - 1)) & ~(dy - 1))
#define CEIL_DX(k)                (((k) - (dx / 2) + (dx - 1)) & ~(dx - 1))

extern void select_and_merge_theme(const char *, const char *);
extern const theme_t *match_theme_by_name(const char *);
extern void scan_installed_themes(void);
extern void render_theme_preview(const theme_t *);
extern int *spritearea;
extern theme_t *themehead;
