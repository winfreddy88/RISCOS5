/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/******	Settings.h ********************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	Windows configuration plug-in
This file:	GUI <-> settings routines

History:
Date		Who	Change
----------------------------------------------------------------------------
09/12/1997	BJGA	Split from Main
			Added these headers
11/05/1998	BJGA	Added support for split iconbar number range gadgets
			Added settings_update_display()
29/06/1998	BJGA	Added ClickReleaseButtons and mainwindow_clickrelease

\**************************************************************************/

#ifndef __settings_h
#define __settings_h

/* Toolbox */
#include "toolbox.h"
/* Common */
#include "cmos.h"

/* Constants */

#define IconiseButton			((cmos) cmos_details[0])
#define WimpShiftToggle			((cmos) cmos_details[1])
#define WimpFlagsInstantDragMove	((cmos) cmos_details[2])
#define WimpFlagsInstantDragResize	((cmos) cmos_details[3])
#define WimpFlagsInstantDragHScroll	((cmos) cmos_details[4])
#define WimpFlagsInstantDragVScroll	((cmos) cmos_details[5])
#define WimpFlagsConfinementBR		((cmos) cmos_details[6])
#define WimpFlagsConfinementTL		((cmos) cmos_details[7])
#define IconBarSpeed			((cmos) cmos_details[8])
#define IconBarAcceleration		((cmos) cmos_details[9])
#define ClickReleaseButtons		((cmos) cmos_details[10])
#define WimpFlagsSubMenus		((cmos) cmos_details[11])
#define WimpAutoMenuDelay		((cmos) cmos_details[12])
#define WimpAutoMenuDelayUnit		((cmos) cmos_details[13])
#define WimpMenuDragDelay		((cmos) cmos_details[14])
#define WimpMenuDragDelayUnit		((cmos) cmos_details[15])
#define WimpAutoFrontIconBar		((cmos) cmos_details[16])
#define WimpAutoFrontDelay		((cmos) cmos_details[17])
#define WimpAutoFrontDelayUnit		((cmos) cmos_details[18])

#define mainwindow_dragmove		((ComponentId) 0x001) /* Redraw */
#define mainwindow_dragresize		((ComponentId) 0x002)
#define mainwindow_draghscroll		((ComponentId) 0x003)
#define mainwindow_dragvscroll		((ComponentId) 0x004)
#define mainwindow_dragall		((ComponentId) 0x006)
#define mainwindow_dragnone		((ComponentId) 0x007)
#define mainwindow_bandr		((ComponentId) 0x009) /* Behaviour */
#define mainwindow_tandl		((ComponentId) 0x00a)
#define mainwindow_clickrelease		((ComponentId) 0x018)
#define mainwindow_iconise		((ComponentId) 0x016)
#define mainwindow_submenuauto		((ComponentId) 0x019)
#define mainwindow_submenuopen		((ComponentId) 0x021)
#define mainwindow_submenuclose		((ComponentId) 0x023)
#define mainwindow_speed		((ComponentId) 0x00d) /* Iconbar */
#define mainwindow_speed2		((ComponentId) 0x017)
#define mainwindow_accel		((ComponentId) 0x010)
#define mainwindow_accel2		((ComponentId) 0x01a)
#define mainwindow_shifttoggle		((ComponentId) 0x012)
#define mainwindow_iconbarfwd		((ComponentId) 0x030)
#define mainwindow_iconbardelay		((ComponentId) 0x032)
#define mainwindow_set			((ComponentId) 0x100) /* Actions */
#define mainwindow_cancel		((ComponentId) 0x101)
#define mainwindow_default		((ComponentId) 0x102)

/* Groups for shading/selecting */

#define mainwindow_dragmin		((ComponentId) 0x001)
#define mainwindow_dragmax		((ComponentId) 0x004)
#define mainwindow_submenuauto_shademin	((ComponentId) 0x020)
#define mainwindow_submenuauto_shademax	((ComponentId) 0x025)
#define mainwindow_iconbarfwd_shademin	((ComponentId) 0x031)
#define mainwindow_iconbarfwd_shademax	((ComponentId) 0x033)

/* Global variables */

extern const cmos cmos_details [];

/* Prototypes */

extern void settings_read (int(*get)(cmos item, void *messages));
extern BOOL settings_write (void);
extern void settings_update_display (ObjectId wind, ComponentId comp, int setting);

#endif
