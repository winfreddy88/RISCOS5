/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/******	Housekeep.c *******************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	Configure Installer module (for SysMerge/FontMerge/BootMerge)
This file:	Module initialisation / finalisation housekeeping

History:
Date		Who	Change
----------------------------------------------------------------------------
15/12/1997	BJGA	Created
16/12/1997	BJGA	Bugfixed / internationalised
07/01/1997	BJGA	Now frees log workspace on exit
20/01/1998	BJGA	Calls FileOp_Init and FileOp_Final when appropriate;
			memory leak in OS variable lookup fixed
27/04/1998	BJGA	Changed Housekeep_Init args to be compatible with CMHG 5.18

\**************************************************************************/

/* CLib */
#include <stdlib.h>
#include "swis.h"
/* Common */
#include "Global/Variables.h"
#include "AsmUtils/osvarlen.h"
/* local headers */
#include "Defs.h"
#include "FileOp.h"
#include "Housekeep.h"
#include "Log.h"
#include "InstallerHdr.h"
#include "ResMess.h"

#define INSTPATH "Installer$Path"
#define RESPATH "Resources:$.Resources.Installer."
#define MESS_FILE "Installer:Messages"

int	messages [4] = { 0, 0, 0, 0 };


/******	Housekeep_Init() **************************************************\

Purpose:	Module initialisation; registers messages file in Resources,
		and opens it (or an alternative file on Installer$Path)
In:		Standard args
Out:		Pointer to error block if initialisation failed

\**************************************************************************/

extern _kernel_oserror *Housekeep_Init (const char *cmd_tail, int podule_base, void *pw)
{
  _kernel_oserror *err = NULL;
  BOOL	FileRegistered = FALSE,
  	MessagesOpen = FALSE;
  
  IGNORE(cmd_tail);
  IGNORE(podule_base);
  IGNORE(pw);
  
  /* Set path to default, unless it's already set */
  if (osvarlen (INSTPATH, VarType_Expanded) == -1)
  {
    err = _swix (OS_CLI, _IN(0), "Set " INSTPATH " " RESPATH);
  }
  if (err != NULL) goto finish;
  else
  {
    /* Register default Messages file in ResourceFS */
    err = _swix (ResourceFS_RegisterFiles, _IN(0), Resources ());
    if (err != NULL) goto finish;
    else
    {
      FileRegistered = TRUE;
      /* Open Messages file */
      err = _swix (MessageTrans_OpenFile, _INR(0,2), &messages, MESS_FILE, 0);
      if (err != NULL) goto finish;
      else
      {
        MessagesOpen = TRUE;
        /* Other initialisation */
        err = FileOp_Init ();
        if (err) FileOp_Final ();
      }
    }
  }
  
finish:
  if (err && MessagesOpen) _swix (MessageTrans_CloseFile, _IN(0), &messages);
  if (err && FileRegistered) _swix (ResourceFS_DeregisterFiles, _IN(0), Resources ());

  return err;
}

/******	Housekeep_Final() *************************************************\

Purpose:	Module finalisation; closes and deregisters messages file(s)
In:		Standard args
Out:		Pointer to error block if finalisation failed

\**************************************************************************/

extern _kernel_oserror *Housekeep_Final (int fatal, int podule, void *pw)
{
  _kernel_oserror *err = NULL;
  IGNORE(fatal);
  IGNORE(podule);
  IGNORE(pw);
  
  Log_Final ();
  FileOp_Final ();
  _swix (MessageTrans_CloseFile, _IN(0), &messages);
  _swix (ResourceFS_DeregisterFiles, _IN(0), Resources ());
  return err; /* anything non-NULL will prevent us from dying, so use with caution */
}
