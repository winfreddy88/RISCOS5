; Copyright 2003 Tematic Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        TTL     CD stack reinitialiser

; Author: Christopher Partington
;         Cambridge Systems Design
;
; Description
; ===========
; This utility checks to see whether CDFS, CDFSDriver and CDFSSoftATAPI are
; all running and, if so, reinitialises the CD stack. This is to sort out
; slow-starting CD-ROM drives which do not respond to ATAPI IDENTIFY when
; CDFSSoftATAPI first starts.
;
; On completion, this utility attempts to verify a single sector on ADFS
; drive 4 to get around a problem with the Conner CFS541A (it always aborts
; the first write command after an ATAPI IDENTIFY).
;
; This utility replaces two files previously contained within !Boot (obey
; file ~CDReinit and BASIC file ~Fix541). It is a reasonably direct
; translation with no attempt to improve things - e.g. it could be changed
; to verify the hard disc if and only if CDFSSoftATAPI is present.
;
; Environment
; ===========
; Acorn RISC OS 3.60
;
; Assembler
; =========
; objasm
;
; Change record
; =============
; SAR, 03 Oct 2002, Converted to objasm.
;

        GBLS    VERS
        GBLS    VERD
VERS    SETS    "2.00"
VERD    SETS    "06 Feb 1996"
;
; 06-Feb-96  16:29  cpartington  Version 2.00
; First version to replace obey file.
;
;*end of change record*

;******************************************************************************

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:ModHand
        GET     Hdr:ADFS

;******************************************************************************

        AREA    |ObjAsm$$Code|,CODE,READONLY

Start   B       Enter

;******************************************************************************

        DCB     "~CDReinit",9,"$VERS ($VERD)"
        DCB     0
str_CDFS                DCB     "CDFS",0
str_CDFSDriver          DCB     "CDFSDriver",0
str_CDFSSoftATAPI       DCB     "CDFSSoftATAPI",0
        ALIGN

;******************************************************************************

Enter   ROUT
;
; Main entry point
;
; Entry:
;    r0 -> command line
;    r1 -> command tail with spaces stripped
;    r12 -> workspace (1024 bytes)
;    r13 -> stack
;    r14 = return address
;
; Exit:
;    r0-r5 undefined

        Push    "lr"                    ; and save link

; check if CDFS is running

        MOV     r0,#ModHandReason_LookupName
        ADR     r1,str_CDFS             ; "CDFS"
        SWI     XOS_Module              ; (r0,r1->r1-r5)
        BVS     no_reinit

; CDFS is running
; check if CDFSDriver is running

        MOV     r0,#ModHandReason_LookupName
        ADR     r1,str_CDFSDriver       ; "CDFSDriver"
        SWI     XOS_Module              ; (r0,r1->r1-r5)
        BVS     no_reinit

; CDFS and CDFSDriver are running
; check if CDFSSoftATAPI is running

        MOV     r0,#ModHandReason_LookupName
        ADR     r1,str_CDFSSoftATAPI    ; "CDFSDriver"
        SWI     XOS_Module              ; (r0,r1->r1-r5)
        BVS     no_reinit

; CDFS, CDFSDriver and CDFSSoftATAPI are all running so
; reinitialise the stack

        MOV     r0,#ModHandReason_ReInit
        ADR     r1,str_CDFSDriver
        SWI     XOS_Module              ; (r0,r1->) ignore error
        MOV     r0,#ModHandReason_ReInit
        ADR     r1,str_CDFS
        SWI     XOS_Module              ; (r0,r1->) ignore error

no_reinit

; now verify a sector on the hard disc (if present) to clear Conner CFS541A
; problem (first write after aborted ATAPI IDENTIFY is aborted)

        MOV     r1,#&40                 ; verify, no escape
        MOV     r2,#&C00                ; boot block
        ORR     r2,r2,#4<<29            ; drive 4
        MOV     r4,#512                 ; boot block size
        SWI     XADFS_DiscOp            ; (r1-r4->r2-r4)
        CLRV
        Pull    "pc"

;******************************************************************************
END
        END
