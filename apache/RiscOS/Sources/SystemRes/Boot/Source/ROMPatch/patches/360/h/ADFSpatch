/* Copyright 2012 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* patches/360/ADFSpatch.h */

static patchentry_t *ADFSpatches360_proc(void *handle)
{

  static patchentry_t ADFSpatches360[] =
  {
  /*            addr        old         new */

     /* ADFSBuffers */
     {(uint32 *)0x03934440, 0xE3540502, 0xE3540501},
     {(uint32 *)0x03934444, 0x23E04000, 0x23E04102},

     /* Disc error 20 hook */
     {(uint32 *)0x039345C0, 0x03A00020, 0x0A08B28E},
     {(uint32 *)0x039345C4, 0x08BD437E, 0xE1A00000},
     {(uint32 *)0x039345C8, 0x039EF201, 0xE1A00000},

     /* Disc error 20 patch */
     {(uint32 *)0x03b61000, 0xffffffff, 0xE3A0E302},
     {(uint32 *)0x03b61004, 0xffffffff, 0xE11E000F},
     {(uint32 *)0x03b61008, 0xffffffff, 0x013EF00F},
     {(uint32 *)0x03b6100c, 0xffffffff, 0x13A0E000},
     {(uint32 *)0x03b61010, 0xffffffff, 0xE59C1220},
     {(uint32 *)0x03b61014, 0xffffffff, 0xE59F2098},
     {(uint32 *)0x03b61018, 0xffffffff, 0xE5821000},
     {(uint32 *)0x03b6101c, 0xffffffff, 0xE3A01001},
     {(uint32 *)0x03b61020, 0xffffffff, 0xE58C1220},
     {(uint32 *)0x03b61024, 0xffffffff, 0xE28F1008},
     {(uint32 *)0x03b61028, 0xffffffff, 0xE58C1224},
     {(uint32 *)0x03b6102c, 0xffffffff, 0xE13EF00F},
     {(uint32 *)0x03b61030, 0xffffffff, 0xE8BD837E},
     {(uint32 *)0x03b61034, 0xffffffff, 0xE92D4001},
     {(uint32 *)0x03b61038, 0xffffffff, 0xE1A0000F},
     {(uint32 *)0x03b6103c, 0xffffffff, 0xE33FF3C2},
     {(uint32 *)0x03b61040, 0xffffffff, 0xE1A00000},
     {(uint32 *)0x03b61044, 0xffffffff, 0xE92D49FF},
     {(uint32 *)0x03b61048, 0xffffffff, 0xE59CB228},
     {(uint32 *)0x03b6104c, 0xffffffff, 0xE59F3060},
     {(uint32 *)0x03b61050, 0xffffffff, 0xE5932000},
     {(uint32 *)0x03b61054, 0xffffffff, 0xE2522001},
     {(uint32 *)0x03b61058, 0xffffffff, 0x0A00000F},
     {(uint32 *)0x03b6105c, 0xffffffff, 0xE5DB0818},
     {(uint32 *)0x03b61060, 0xffffffff, 0xE3100008},
     {(uint32 *)0x03b61064, 0xffffffff, 0x05832000},
     {(uint32 *)0x03b61068, 0xffffffff, 0x03A02001},
     {(uint32 *)0x03b6106c, 0xffffffff, 0x0A000005},
     {(uint32 *)0x03b61070, 0xffffffff, 0xE59C1208},
     {(uint32 *)0x03b61074, 0xffffffff, 0xE59C01E8},
     {(uint32 *)0x03b61078, 0xffffffff, 0xE1A0E00F},
     {(uint32 *)0x03b6107c, 0xffffffff, 0xE59CF240},
     {(uint32 *)0x03b61080, 0xffffffff, 0xE59F2028},
     {(uint32 *)0x03b61084, 0xffffffff, 0xE58C2224},
     {(uint32 *)0x03b61088, 0xffffffff, 0xE58C2220},
     {(uint32 *)0x03b6108c, 0xffffffff, 0xE8BD49FF},
     {(uint32 *)0x03b61090, 0xffffffff, 0xE13FF000},
     {(uint32 *)0x03b61094, 0xffffffff, 0xE1A00000},
     {(uint32 *)0x03b61098, 0xffffffff, 0xE8FD8001},
     {(uint32 *)0x03b6109c, 0xffffffff, 0xE3A00020},
     {(uint32 *)0x03b610a0, 0xffffffff, 0xE59C21D4},
     {(uint32 *)0x03b610a4, 0xffffffff, 0xE59C31F4},
     {(uint32 *)0x03b610a8, 0xffffffff, 0xE5DC71BC},
     {(uint32 *)0x03b610ac, 0xffffffff, 0xEAF74DBA},
     {(uint32 *)0x03b610b0, 0xffffffff, 0x03934818},
     {(uint32 *)0x03b610b4, 0xffffffff, 0x00000000}, /* Patched with adfs354_word_addr below */

     {(uint32 *)0,0,0}
  };
  
  ADFSpatches360[(sizeof(ADFSpatches360)/sizeof(patchentry_t))-2].newval = adfs354_word_addr;

  return ADFSpatches360;
}
