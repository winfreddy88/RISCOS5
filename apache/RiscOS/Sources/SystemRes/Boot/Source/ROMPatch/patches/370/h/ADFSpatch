/* Copyright 2012 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* patches/370/ADFSpatch.h */

static patchentry_t *ADFSpatches370_proc(void *handle)
{

  static patchentry_t ADFSpatches370[] =
  {
  /*            addr        old         new */

     /* ADFSBuffers */
     {(uint32 *)0x0394B940, 0xE3540502, 0xE3540501},
     {(uint32 *)0x0394B944, 0x23E04000, 0x23E04102},

     /* Disc error 20 hook */
     {(uint32 *)0x0394BAC0, 0x03A00020, 0x0A09694E},
     {(uint32 *)0x0394BAC4, 0x08BD437E, 0xE1A00000},
     {(uint32 *)0x0394BAC8, 0x039EF201, 0xE1A00000},

     /* Disc error 20 patch */
     {(uint32 *)0x03ba6000, 0xffffffff, 0xE3A0E302},
     {(uint32 *)0x03ba6004, 0xffffffff, 0xE11E000F},
     {(uint32 *)0x03ba6008, 0xffffffff, 0x013EF00F},
     {(uint32 *)0x03ba600c, 0xffffffff, 0x13A0E000},
     {(uint32 *)0x03ba6010, 0xffffffff, 0xE59C1220},
     {(uint32 *)0x03ba6014, 0xffffffff, 0xE59F2098},
     {(uint32 *)0x03ba6018, 0xffffffff, 0xE5821000},
     {(uint32 *)0x03ba601c, 0xffffffff, 0xE3A01001},
     {(uint32 *)0x03ba6020, 0xffffffff, 0xE58C1220},
     {(uint32 *)0x03ba6024, 0xffffffff, 0xE28F1008},
     {(uint32 *)0x03ba6028, 0xffffffff, 0xE58C1224},
     {(uint32 *)0x03ba602c, 0xffffffff, 0xE13EF00F},
     {(uint32 *)0x03ba6030, 0xffffffff, 0xE8BD837E},
     {(uint32 *)0x03ba6034, 0xffffffff, 0xE92D4001},
     {(uint32 *)0x03ba6038, 0xffffffff, 0xE1A0000F},
     {(uint32 *)0x03ba603c, 0xffffffff, 0xE33FF3C2},
     {(uint32 *)0x03ba6040, 0xffffffff, 0xE1A00000},
     {(uint32 *)0x03ba6044, 0xffffffff, 0xE92D49FF},
     {(uint32 *)0x03ba6048, 0xffffffff, 0xE59CB228},
     {(uint32 *)0x03ba604c, 0xffffffff, 0xE59F3060},
     {(uint32 *)0x03ba6050, 0xffffffff, 0xE5932000},
     {(uint32 *)0x03ba6054, 0xffffffff, 0xE2522001},
     {(uint32 *)0x03ba6058, 0xffffffff, 0x0A00000F},
     {(uint32 *)0x03ba605c, 0xffffffff, 0xE5DB0818},
     {(uint32 *)0x03ba6060, 0xffffffff, 0xE3100008},
     {(uint32 *)0x03ba6064, 0xffffffff, 0x05832000},
     {(uint32 *)0x03ba6068, 0xffffffff, 0x03A02001},
     {(uint32 *)0x03ba606c, 0xffffffff, 0x0A000005},
     {(uint32 *)0x03ba6070, 0xffffffff, 0xE59C1208},
     {(uint32 *)0x03ba6074, 0xffffffff, 0xE59C01E8},
     {(uint32 *)0x03ba6078, 0xffffffff, 0xE1A0E00F},
     {(uint32 *)0x03ba607c, 0xffffffff, 0xE59CF240},
     {(uint32 *)0x03ba6080, 0xffffffff, 0xE59F2028},
     {(uint32 *)0x03ba6084, 0xffffffff, 0xE58C2224},
     {(uint32 *)0x03ba6088, 0xffffffff, 0xE58C2220},
     {(uint32 *)0x03ba608c, 0xffffffff, 0xE8BD49FF},
     {(uint32 *)0x03ba6090, 0xffffffff, 0xE13FF000},
     {(uint32 *)0x03ba6094, 0xffffffff, 0xE1A00000},
     {(uint32 *)0x03ba6098, 0xffffffff, 0xE8FD8001},
     {(uint32 *)0x03ba609c, 0xffffffff, 0xE3A00020},
     {(uint32 *)0x03ba60a0, 0xffffffff, 0xE59C21D4},
     {(uint32 *)0x03ba60a4, 0xffffffff, 0xE59C31F4},
     {(uint32 *)0x03ba60a8, 0xffffffff, 0xE5DC71BC},
     {(uint32 *)0x03ba60ac, 0xffffffff, 0xEAF696FA},
     {(uint32 *)0x03ba60b0, 0xffffffff, 0x0394BD18},
     {(uint32 *)0x03ba60b4, 0xffffffff, 0x00000000}, /* Patched with adfs354_word_addr below */

     {(uint32 *)0,0,0}
  };
  
  ADFSpatches370[(sizeof(ADFSpatches370)/sizeof(patchentry_t))-2].newval = adfs354_word_addr;

  return ADFSpatches370;
}
