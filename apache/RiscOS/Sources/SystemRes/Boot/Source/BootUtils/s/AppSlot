; Copyright 2002 Tematic Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;-----------------------------------------------------------------------------
; A transient to try to achieve a specified application space size.
; On RISC OS 3.50 or later, tries to resize Free Pool to do this,
; otherwise tries to resize RMA.
; Derived from old AppSize utility (the term AppSize has become horribly
; confused since, due to silly command version used to minimise RMA on
; 3.50 and later)
;-----------------------------------------------------------------------------

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System

        AREA    |AppSlot$$Code|, CODE, READONLY, PIC

TransientStart
        STMFD   R13!,{R0-R6,LR}

        LDRB    LR,[R1]
        CMP     LR,#32                          ; are they are any commands?
        BLO     %FT90                           ;   complain because the syntax is invalid

        MOV     R0,#0
        MOV     R2,#0
        SWI     XOS_ReadUnsigned                ; attempt to get the line
        BVS     %FT99

        LDRB    LR,[R1]                         ; get the next character
        TEQ     LR,#"K"                         ;   and see if the amount is kilobytes
        TEQNE   LR,#"k"
        MOVEQ   R2,R2,LSL #10                   ;   if it is then multiple by 1024
        TEQ     LR,#"M"                         ;   and see if the amount is kilobytes
        TEQNE   LR,#"m"
        MOVEQ   R2,R2,LSL #20                   ;   if it is then multiple by 1024*1024

        MOV     R5, R2                          ; R5 = desired app size

        SWI     XOS_GetEnv                      ; now R1 = address of first unavailable byte
        BVS     %FT99
        SUB     R1, R1, #32768                  ; R1 = size of app area
        SUB     R4, R1, R5                      ; R4 = amount to move from app area

        MOV     R0,#129
        MOV     R1,#0
        MOV     R2,#255
        SWI     XOS_Byte                        ; read OS version identifier
        BVS     %FT99

        ORR     R1,R1,R2,LSL #8
        CMP     R1,#&00A5                       ; &00A5 or higher for RISC OS 3.50 or later
        BLO     %FT50

;since RISC OS 3.50
        MOV     R0,#6                           ; Free Pool
        MOV     R1,R4                           ; amount to grow Free Pool
        SWI     XOS_ChangeDynamicArea
        B       %FT99

50
;before RISC OS 3.50
        MOV     R0,#1                           ; dynamic Area = RMA
        SWI     XOS_ReadDynamicArea             ;   read its size
        BVS     %FT99                           ; R0 = max size of RMA, R1 = current size
        MOV     R0,#4*1024*1024                 ; DDV asserts that R0 will hold the max
                                                ; size to which RMA can grow - it seems to
                                                ; me to hold 24M! So, we need to insert at
                                                ; this point the max size to which the RMA
                                                ; can grow.
        SUB     R0, R0, R1                      ; R0 = max amount by which RMA can grow
        CMP     R4,R0
        MOVGT   R4,R0

        MOV     R0,#1                           ;   dynamic area = 1 (RMA)
        MOV     R1,R4                           ;   move this much
        SWI     XOS_ChangeDynamicArea           ;   and modify the size

99      STRVS   R0,[R13]
        LDMFD   R13!,{R0-R6,PC}

90
        ADR     R0,Syntax
        CMP     PC, #&80000000                  ; set V
        STR     R0,[R13]
        LDMFD   R13!,{R0-R6,PC}


Syntax  & 220
        = "Syntax: AppSlot <size>[K|M]",0

        DCB     "AppSlot 1.00 24 Sep 1997  © Acorn Computers Ltd 1997", 0
        ALIGN

        END
