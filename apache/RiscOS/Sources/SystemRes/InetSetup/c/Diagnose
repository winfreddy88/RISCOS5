/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <stdio.h>
#include <string.h>
#include <ctype.h>

#include "os.h"
#include "wimpspriteop.h"
#include "toolbox.h"

#include "inetlib.h"
#include "netdb.h"

#include "Main.h"
#include "Load.h"
#include "Diagnose.h"
#include "Gadgets.h"

static int strcasecmp(const char *a, const char *b)
{
    while (tolower(*a) == tolower(*b))
    {
        if (*a == 0) return 0;
        a++; b++;
    }
    return tolower(*a) - tolower(*b);
}

static bool InHostsFile(const char *nam)
{
    struct hostent *hp;
    register char **cp;
    bool found = FALSE;

    sethostent(1);
    while ((hp = gethostent()) != 0)
    {
        if (strcasecmp(hp->h_name, nam) == 0)
        {
            found = TRUE;
            break;
        }
        for (cp = hp->h_aliases; cp != NULL && *cp != 0; cp++)
        {
            if (strcasecmp(*cp, nam) == 0)
            {
                found = TRUE;
                goto found;
            }
        }
    }
found:
    endhostent();
    return found;
}

bool Diagnose(void)
{
    int i, configured = 0;
    os_error err = {1};
    extern toolbox_c interface_addrtype[16];

    if (InternetEnabled)
    {
        if (!Set(HostName))
        {
            toolbox_block id;
            extern toolbox_o MainObject;

            sprintf(err.errmess, msgs_lookup("NoHostName"));
            report_error(&err);

            /* Open the host name dialogue to resolve the problem */
            id.parent_obj = id.ancestor_obj = toolbox_NULL_OBJECT;
            id.parent_cmp = id.ancestor_cmp = toolbox_NULL_COMPONENT;
            id.this_obj = MainObject;
            id.this_cmp = internet_Names;
            show_hostname_window(&id);
            return FALSE;
        }
        for (i = 0; i < interfaces; i++)
        {
            if (Set(interface_address[i]))
            {
                configured++;
                if (!Set(interface_netmask[i]))
                {
                    sprintf(err.errmess, msgs_lookup("NoMask"), interface_name[i],
                        	    	    	    	    	interface_location[i]);
        	    report_error(&err);
        	    return FALSE;
                }

                /* Only checking for remote link address for slip interface */

                if (interface_is_pp[i] == 1 && !Set(interface_linkaddr[i]))
                {
                    sprintf(err.errmess, msgs_lookup("NoLinkAddr"), interface_name[i],
                        	    	    	    	    	    interface_location[i]);
        	    report_error(&err);
        	    return FALSE;
                }

                if ((interface_addrtype[i] == if_Manual
                       || interface_addrtype[i] == if_FromHostname) &&
                    !namisipadr(interface_address[i]) &&
                    !InHostsFile(interface_address[i]))
                {
                    sprintf(err.errmess, msgs_lookup("NotInHosts"), interface_address[i]);
                    report_error(&err);
                    return FALSE;
                }

            }
        }

        if (configured == 0 && interfaces > 0)
        {
            wimp_error_box_selection s;
            strcpy(err.errmess, msgs_lookup("NoIfs"));
            s = wimp_report_error_by_category(&err,
            	    	    	    	      wimp_ERROR_BOX_OK_ICON |
            	    	    	    	      wimp_ERROR_BOX_CANCEL_ICON |
            	    	    	    	      wimp_ERROR_BOX_CATEGORY_QUESTION <<
            	    	    	    	       	wimp_ERROR_BOX_CATEGORY_SHIFT,
            	    	    	    	      msgs_lookup("_TaskName"),
            	    	    	    	      "!inetsetup",
            	    	    	    	      wimpspriteop_AREA,
            	    	    	    	      0);
            if (s == wimp_ERROR_BOX_SELECTED_CANCEL)
            	return FALSE;
        }
    }
    return TRUE;
}
