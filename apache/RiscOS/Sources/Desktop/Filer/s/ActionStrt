; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
 [ actionwind
        LTORG
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; Action Window Handling
; ======================
; -----------------------------------------------------------------------------
;
; StartActionWindow
;
; Entry -
;[ version >= 113
; r0    Minimum memory to attempt to start task with
;]
; Exit
; r0    Task handle or 0 if dead at birth
;

ActionWindowCommand     DCB "*"
ActionWindowModuleName  DCB "Filer_Action",0
        ALIGN

StartActionWindow Entry "r1-r6"
      [ version >= 113

        ; Check the memory is enough to do the operation
        MOV     r6, r0
        MOV     r0, #-1
        MOV     r1, #-1
        SWI     XWimp_SlotSize
        EXIT    VS
        CMP     r2, r6
        MOVLT   r0, #0
        EXIT    LT

        ; Check the Filer_Action module is present
        MOV     r0, #ModHandReason_LookupName
        ADR     r1, ActionWindowModuleName
        SWI     XOS_Module
        BVC     %FT10
        LDR     r1, [r0, #0]    ; error number
        LDR     r2, =ErrorNumber_RMNotFound
        TEQ     r1, r2
        MOVEQ   r0, #0          ; Emulate dead task if module not found
        CLRV    EQ
        EXIT
10
      ]

        ADR     r0, ActionWindowCommand
        SWI     XWimp_StartTask
        EXIT

      [ :LNOT: OptionsAreInRAM
ExtractCMOSOptions Entry "r3"
        BL      ReadCMOSBits
        MOV     r2, #0
        TST     r3, #confirm_cmos_bit
        ORRNE   r2, r2, #Action_OptionConfirm
        TST     r3, #verbose_cmos_bit
        ORRNE   r2, r2, #Action_OptionVerbose
        TST     r3, #force_cmos_bit
        ORRNE   r2, r2, #Action_OptionForce
        TST     r3, #newer_cmos_bit
        ORRNE   r2, r2, #Action_OptionNewer
        EXIT
      ]
      
SendSelectedFiles Entry "r1-r5"
10      CMP     r5, #Nowt
        EXIT    EQ
        LDR     r1, sel_leafname
        SWI     XFilerAction_SendSelectedFile
        EXIT    VS
        BL      GetSelection
        B       %BT10


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; SendWasSelectedFiles

SendWasSelectedFiles Entry "r1-r5"
10      CMP     r5, #Nowt
        EXIT    EQ
        LDR     r1, sel_leafname
        SWI     XFilerAction_SendSelectedFile
        EXIT    VS
        BL      GetWasSelection
        B       %BT10


       LTORG
 ]


        END
