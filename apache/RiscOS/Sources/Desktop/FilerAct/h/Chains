/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
        Chain manipulation routines.
*/

#ifndef __chains_h
#define __chains_h

typedef struct chain_link
{
        struct chain_link       *forwards;
        struct chain_link       *backwards;
        int                     wrapper;
}       chain_link;

typedef struct chain_header
{
        chain_link              *forwards;
        chain_link              *header_indicator;      /* = NULL to indicate this is a header */
        chain_link              *backwards;
}       chain_header;

extern  void chain_remove_link( chain_link *link );
extern  void chain_insert_before_link( chain_link *link, void *wrapper, chain_link *before_this );
extern  void chain_insert_after_link( chain_link *link, void *wrapper, chain_link *after_this );
extern  void chain_insert_after_header( chain_link *link, void *wrapper, chain_header *header );
extern  void chain_insert_before_header( chain_link *link, void *wrapper, chain_header *header );
extern  void chain_initialise_header( chain_header *header );
#define chain_link_Wrapper(link) ((void *)((char *)(link)+(link)->wrapper))
#endif
