/* Copyright 2015 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Name   : datafile.h
 * Desc   : datafile control for the !allocate application
 * Auther : James Bye
 * Date   : 21-Jul-1994
 *
 *
 */
 
 
#ifndef __datafile_h
#define __datafile_h

#ifndef __object_h
#include "object.h"
#endif


/*-- link list of object blocks --*/

typedef struct DataFileObjectList
{
  ObjectBlock *object;
  
  /*-- pointer to next item --*/
  
  struct DataFileObjectList *next;
} DataFileObjectList;


/*
 * Name     : datafile_write_reserve_csv
 * Desc     : writes a CSV file for reserved names
 * Parms    : char *filename
 *            DataFileObjecList *objects - list of reserved objects (only!)
 * Returns  : True or False on result
 */
 
extern BOOL datafile_write_reserve_csv ( char *filename, DataFileObjectList *objects );




/*
 * Name     : datafile_load_file
 * Desc     : loads an allocate data file
 * Parms    : char *filename
 *            DataFileObjectList **objects - destination for linked list pointer
 * Returns  : True or False on result
 */

extern BOOL datafile_load_file ( char *filename, DataFileObjectList **objects );




/*
 * Name     : datafile_write_file
 * Desc     : writes a allocate data file
 * Parms    : char *filename
 *            DataFileObjectList *objects  - pointer to link list of objects
 *            int no_objects               - number of objects in list
 * Returns  : True or False on result
 */

extern BOOL datafile_write_file ( char *filename, DataFileObjectList *objects, int no_objects );



#endif

