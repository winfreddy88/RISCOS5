# Project:   alloc


# Toolflags:
CCflags = -c -depend !Depend -IC: -throwback
C++flags = -c -depend !Depend -IC: -throwback
Linkflags = -aif -c++ -o $@
ObjAsmflags = -throwback -NoCache -depend !Depend
CMHGflags = 
LibFileflags = -c -o $@
Squeezeflags = -o $@


# Final targets:
@.convert:   @.o.convert @.o.datafile \
        @.^.^.^.AcornC/C32.Libraries.clib.o.stubs @.^.^.^.AcornC/C32.Libraries.RISC_OSLib.o.risc_oslib @.o.details @.o.object 
        link $(linkflags) @.o.convert @.o.datafile \
        @.^.^.^.AcornC/C32.Libraries.clib.o.stubs @.^.^.^.AcornC/C32.Libraries.RISC_OSLib.o.risc_oslib @.o.details @.o.object 


# User-editable dependencies:


# Static dependencies:
@.o.convert:   @.c.convert
        cc $(ccflags) -o @.o.convert @.c.convert 
@.o.datafile:   @.c.datafile
        cc $(ccflags) -o @.o.datafile @.c.datafile 
@.o.details:   @.c.details
        cc $(ccflags) -o @.o.details @.c.details 
@.o.object:   @.c.object
        cc $(ccflags) -o @.o.object @.c.object 


# Dynamic dependencies:
o.datafile:	c.datafile
o.datafile:	C:h.kernel
o.datafile:	h.object
o.datafile:	h.datafile
o.datafile:	h.guard
o.datafile:	h.details
o.convert:	c.convert
o.convert:	h.datafile
o.convert:	h.object
o.convert:	h.details
