; Copyright 2005 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>
        GET     Hdr:Proc

        GET     Hdr:OSEntries

        GET     hdr.pxa255
        GET     hdr.UART
        GET     hdr.StaticWS

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        EXPORT  HAL_DebugInit
        EXPORT  HAL_DebugInit2
        EXPORT  HAL_DebugTX
        EXPORT  HAL_DebugRX
        IMPORT  ConfigureDebugUART

 [ Debug

        IMPORT  printf

HAL_DebugInit
        MOV     pc, lr

HAL_DebugInit2
        Entry   "v1"
 [ {FALSE}
        MOV     a1, #0
        STRB    a1, IOSystemType
        EXIT
 ]
        LDR     v1, PCI_IO_Address                ; Slot 0
        LDRB    a1, IOSystemType
        TEQ     a1, #0
        EXIT    EQ
 [ DebugPort = 3
        ADD     v1, v1, #IO_UART3
 |
        ADD     v1, v1, #IO_UART1
 ]
        BL      ConfigureDebugUART
 [ {FALSE}
        ADR     a1, HelloString
        BL      printf
        EXIT

HelloString
        =       "Hello.",13,10,0
        ALIGN
 ]
        EXIT

; in: a1 = character to TX
HAL_DebugTX     ROUT
        LDRB    a3, IOSystemType
        LDR     ip, DebugUART_Address
        TEQ     a3, #0
        MOVEQ   pc, lr
05      LDRB    a2, [ip, #UART_LSR]
        TST     a2, #THRE
        BEQ     %BT05
10      LDRB    a2, [ip, #UART_MSR]             ; crude output flow control
        TST     a2, #CTS
        BEQ     %BT10
        STRB    a1, [ip, #UART_THR]
        MOV     pc, lr

; out: a1 = character, or -1 if none available
HAL_DebugRX     ROUT
        LDRB    a3, IOSystemType
        LDR     ip, DebugUART_Address
        TEQ     a3, #0
        LDRNEB  a2, [ip, #UART_LSR]
        TSTNE   a2, #DR
        MOVEQ   a1, #-1
        LDRNEB  a1, [ip, #UART_RBR]
        MOV     pc, lr

 | ; Debug

HAL_DebugRX
        MOV     a1, #-1
        ; fall through
HAL_DebugInit
HAL_DebugInit2
HAL_DebugTX     ROUT
        MOV     pc, lr

 ] ; Debug

        END
