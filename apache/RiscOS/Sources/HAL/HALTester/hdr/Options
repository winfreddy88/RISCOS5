; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; amg 7/12/96 Renaissance
; Forcibly ensure that options only intended for one class of platform
; stay there. Generally this involves combining switches with the STB
; switch. The exception is processor architectural stuff. 7500FE is
; included always, and StrongARM has an independed switch.
;
; When you want to migrate features from one platform to another you'll
; find that every occurence of feature switches has been qualified with
; the appropriate sense of the STB switch. This is to remind you to think
; about what you're about to do! Check whether the code actually will work
; at all on something that is or is not a STB class product.
;
; Using the STB switch this aggressively also help ensure that there's
; no unexpected code crossover in the initial merge.

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; now the conditional flags for the version we want
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                GBLL    CacheOff
CacheOff        SETL    {FALSE}

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; essential global variables
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                GBLL    StrongARM
                GBLL    SAcleanflushbroken      ;whether StrongARM single MCR for DC clean+flush broken (is always for SA110)
                GBLL    SASTMhatbroken          ;whether ROM must support SA110's with broken STM^ (revision 3 should fix this)
                GBLL    StrongARM_POST          ;whether to run POST for StrongARM (and possibly ARM8)

                GBLL    ARM6support
                GBLL    XScaleMiniCache         ;is the XScale mini data-cache used (at all)
                GBLL    XScaleJTAGDebug
                GBLL    ECC                     ;use ECC on XScale. May compromise other ARM compatibility

StrongARM          SETL {TRUE}
SAcleanflushbroken SETL {TRUE}  :LAND: StrongARM
SASTMhatbroken     SETL {TRUE}  :LAND: StrongARM
StrongARM_POST     SETL {TRUE}  :LAND: StrongARM

ARM6support        SETL {TRUE}

XScaleMiniCache    SETL {FALSE}

XScaleJTAGDebug    SETL {TRUE}

ECC                SETL {FALSE}



                GBLL    DebugTerminal           ; default WRCH and RDCH through HAL
DebugTerminal   SETL    {TRUE}

                GBLL    DebugHALTX
DebugHALTX      SETL    {TRUE}


; Ickle macros. We want to be able to turn IRQs on and off fast in the
; code in various places. To do this easily, have a name for the
; SVC26/32 mode we run in.

 [ No26bitCode
USR2632 * USR32_mode
SVC2632 * SVC32_mode
 |
USR2632 * USR26_mode
SVC2632 * SVC26_mode
 ]

        END
