; Copyright 2012 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

                GBLL    Debug
Debug           SETL    {FALSE}

                GET     hdr.UART

; Note - apart from HAL_DebugTX/HAL_DebugRX, all debug code is only designed to be used pre-MMU

                ; Output string pointed to by $str
                ; Corrupts $str, $temp1, $temp2, flags
                MACRO
                DebugStr_inl $str, $temp1, $temp2
         [ Debug
                LDR     $temp2, =C710Phys
10
                LDRB    $temp1, [$temp2, #UART_LSR]
                TST     $temp1, #THRE
                BEQ     %BT10
                LDRB    $temp1, [$str], #1
                CMP     $temp1, #0
                STRNEB  $temp1, [$temp2, #UART_THR]
                BNE     %BT10
         ]
                MEND

                ; Output static string
                ; Corrupts a1-a2, lr, flags
                MACRO
                DebugTX $str
         [ Debug
                IMPORT  DebugStr
                BL      DebugStr
                = "$str",13,10,0
                ALIGN
         ]
                MEND

                ; Output static string
                ; Corrupts given registers, flags
                MACRO
                DebugTX_inl $str, $temp1, $temp2, $temp3
         [ Debug
                ADR      $temp1, %FT10
                DebugStr_inl $temp1, $temp2, $temp3
                B        %FT20
10
                = "$str",13,10,0
                ALIGN
20
         ]
                MEND                                

                ; Corrupts a1-a3, lr, flags
                ; If $reg is a1/a2/a3/lr, it will also be preserved
                MACRO
                DebugReg $reg
         [ Debug
                IMPORT   DebugHex
            [ $reg <> a1
                MOV      a1, $reg
            ]
                BL       DebugHex
            [ ($reg = a2) :LOR: ($reg = a3) :LOR: ($reg = lr)
                MOV      $reg, a1
            ]
         ]
                MEND

                END
