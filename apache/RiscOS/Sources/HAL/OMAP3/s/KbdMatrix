; Copyright 2012 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; Keyboard matrix handling

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>

        GET     Hdr:Proc
        GET     Hdr:OSEntries
        GET     Hdr:HALEntries

        GET     hdr.omap3530
        GET     hdr.StaticWS
        GET     hdr.UART
        GET     hdr.GPIO
        GET     hdr.PRCM

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        EXPORT  PandoraKB_Init
        IMPORT  TPSRead
        IMPORT  TPSWrite

KEYPAD_IIC * &4A*2

; IIC registers, just the interesting ones
KEYP_CTRL_REG   * &D2
KEY_DEB_REG     * &D3
LK_PTV_REG      * &D5
TIME_OUT_REG1   * &D6
TIME_OUT_REG2   * &D7
FULL_CODE       * &DB ; 8 registers
KEYP_EDR        * &E8
KEYP_SIH_CTRL   * &E9

; Register bits
KEYP_CTRL_REG_SOFT_NRST       * &01
KEYP_CTRL_REG_SOFTMODEN       * &02
KEYP_CTRL_REG_LK_EN           * &04
KEYP_CTRL_REG_TOE_EN          * &08
KEYP_CTRL_REG_TOLE_EN         * &10
KEYP_CTRL_REG_RP_EN           * &20
KEYP_CTRL_REG_KBD_ON          * &40

KEYP_EDR_ITKPFALLING          * &01
KEYP_EDR_ITKPRISING           * &02
KEYP_EDR_ITLKFALLING          * &04
KEYP_EDR_ITLKRISING           * &08
KEYP_EDR_ITTOFALLING          * &10
KEYP_EDR_ITTORISING           * &20
KEYP_EDR_ITMISFALLING         * &40
KEYP_EDR_ITMISRISING          * &80

KEYP_SIH_CTRL_EXCLEN          * &01
KEYP_SIH_CTRL_PENDDIS         * &02
KEYP_SIH_CTRL_COR             * &04

Pandora_GPIO_Ctrl * 104
Pandora_GPIO_Copy * 111 ; B button on gamepad; default mapping is for A/B/X/Y to be home/end/page down/page up

PandoraKB_Init
        Entry   "v1,v2"
        ; Set required GPIOs as input
        GPIO_PrepareC a1,a2,Pandora_GPIO_Ctrl
        GPIO_SetAsInput a1,a2,a3
        GPIO_PrepareC a1,a2,Pandora_GPIO_Copy
        GPIO_SetAsInput a1,a2,a3
        ; Set up keyboard matrix controller
        ADR     a2, init_data
        MOV     a3, #1
        LDR     v1, OSentries + 4*OS_IICOpV
10
        LDRB    a4, [a2], #1
        CMP     a4, #0
        BEQ     %FT20
        MOV     a1, #KEYPAD_IIC
        BL      TPSWrite
        ADD     a2, a2, #1
        B       %BT10
20
        PullEnv
        ; Register the Pandora keyboard HAL device
        ADR     a2, PandoraKBTemplate
        MOV     a1, #0
        LDR     pc, OSentries + 4*OS_AddDevice ; Tail call

init_data
        DCB     KEYP_CTRL_REG
        DCB     KEYP_CTRL_REG_SOFT_NRST + KEYP_CTRL_REG_SOFTMODEN + KEYP_CTRL_REG_TOE_EN + KEYP_CTRL_REG_KBD_ON
        DCB     KEYP_EDR
        DCB     KEYP_EDR_ITKPFALLING + KEYP_EDR_ITKPRISING + KEYP_EDR_ITTORISING
        DCB     LK_PTV_REG
        DCB     4<<5
        DCB     KEY_DEB_REG
        DCB     20
        DCB     TIME_OUT_REG1
        DCB     100
        DCB     TIME_OUT_REG2
        DCB     0
        DCB     KEYP_SIH_CTRL
        DCB     KEYP_SIH_CTRL_PENDDIS + KEYP_SIH_CTRL_COR
        ; Terminator
        DCB     0
        ALIGN

PandoraKBTemplate
        DCW     HALDeviceType_HID + HALDeviceHID_Keyboard
        DCW     HALDeviceID_Keyboard_Pandora
        DCD     HALDeviceBus_Ser + HALDeviceSerBus_IIC ; Keyboard + nubs on IIC, gamepad on OMAP GPIO
        DCD     0               ; API version
        DCD     PandoraKBDesc   ; Description
        DCD     0               ; Address (none)
        %       12              ; Reserved
        DCD     PandoraKBActivate
        DCD     PandoraKBDeactivate
        DCD     PandoraKBReset
        DCD     PandoraKBSleep
        DCD     -1              ; Device (none)
        DCD     0               ; TestIRQ
        DCD     0               ; ClearIRQ
        %       4
        ASSERT  (.-PandoraKBTemplate) = HALDeviceSize

PandoraKBDesc
        =       "Pandora keyboard", 0
        ALIGN

        ; These don't do much
PandoraKBActivate
        MOV     a1, #1
PandoraKBDeactivate
PandoraKBReset
        MOV     pc, lr

PandoraKBSleep
        MOV     a1, #0
        MOV     pc, lr

        END
