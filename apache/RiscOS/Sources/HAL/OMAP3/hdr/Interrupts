; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

INTCPS_SYSCONFIG        *                &010
INTCPS_SYSSTATUS        *                &014
INTCPS_SIR_IRQ          *                &040
INTCPS_SIR_FIQ          *                &044
INTCPS_CONTROL          *                &048
INTCPS_PROTECTION       *                &04C
INTCPS_IDLE             *                &050
INTCPS_IRQ_PRIORITY     *                &060
INTCPS_FIQ_PRIORITY     *                &064
INTCPS_THRESHOLD        *                &068
INTCPS_BITS             *                &080 ; Start of interleaved bit arrays
INTCPS_ILR              *                &100 ; Start of ILR array

INTCPS_BITS_SIZE        *                &020 ; Each BITS is 32 bytes long
INTCPS_BITS_COUNT       *                &003 ; 3 BITS structures
INTCPS_BITS_ITR         *                &000 ; ITR offset in a BITS struct
INTCPS_BITS_MIR         *                &004 ; MIR offset in a BITS struct
INTCPS_BITS_MIR_CLEAR   *                &008 ; MIR_CLEAR offset in a BITS
INTCPS_BITS_MIR_SET     *                &00C ; MIR_SET offset in a BITS struct
INTCPS_BITS_ISR_SET     *                &010 ; ISR_SET offset in a BITS struct
INTCPS_BITS_ISR_CLEAR   *                &014 ; ISR_CLEAR offset in a BITS
INTCPS_BITS_PENDING_IRQ *                &018 ; PENDING_IRQ offset in a BITS
INTCPS_BITS_PENDING_FIQ *                &01C ; PENDING_FIQ offset in a BITS

INTCPS_ILR_SIZE         *                &004 ; 4 bytes per entry
INTCPS_ILR_COUNT        *                &060 ; 96 entries total

INTERRUPT_MAX           *                  96 ; 96 interrupt lines

INTC_INIT_REGISTER1     *  L4_Modem_INTC+&010
INTC_INIT_REGISTER2     *  L4_Modem_INTC+&050              

        END
