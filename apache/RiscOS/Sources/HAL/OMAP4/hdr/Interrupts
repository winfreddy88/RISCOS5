; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_INTERRUPTS_HDR__
        GBLL    __HAL_INTERRUPTS_HDR__

        GET     hdr.omap4_reg

; offsets of register in GIC Processor Interface (relative to MPU_GIC_PI)
GIC_CPU_CTRL            *       &000 ; CPU Interface Control Register (ICCICR)
GIC_CPU_PRIMASK         *       &004 ; Interrupt Priority Mask Register (ICCPMR)
GIC_CPU_BINPOINT        *       &008 ; Binary Point Register (ICCBPR)
GIC_CPU_INTACK          *       &00C ; Interrupt Acknowledge Register (ICCIAR)
GIC_CPU_EOI             *       &010 ; End of Interrupt Register (ICCEOIR)
GIC_CPU_RUNNINGPRI      *       &014 ; Running Priority Register (ICCRPR)
GIC_CPU_HIGHPRI         *       &018 ; Highest Pending Interrupt Register (ICCHPIR)
GIC_CPU_ALIAS_BINPOINT  *       &01C ; Aliased Binary Point Register (ICCABPR)

; bits in CPU Interface Control Register (ICCICR)
ICCICR_ENABLE           *       (1 << 0)

; bits in Interrupt Acknowledge Register (ICCIAR)
ICCIAR_ACKINTID         *       (&3FF << 0)
ICCIAR_CPUID            *       (7 << 10)

; bits in End of Interrupt Register (ICCEOIR)
ICCEOIR_EOIINTID        *       (&3FF << 0)
ICCEOIR_CPUID           *       (7 << 10)


; offsets of register in GIC Interrupt Distributor (relative to MPU_GIC_ID)
GIC_DIST_CTRL           *       &000 ; Distributor Control Register (ICDDCR)
GIC_DIST_CTR            *       &004 ; Interrupt Controller Type Register (ICDICTR)
GIC_DIST_IIDR           *       &008 ; Distributor Implementer Identification Reg (ICDIIDR)
GIC_DIST_ISR            *       &080 ; Interrupt Security Registers (ICDISRn)
GIC_DIST_ENABLE_SET     *       &100 ; Interrupt Set-Enable Registers (ICDISERn)
GIC_DIST_ENABLE_CLEAR   *       &180 ; Interrupt Clear-Enable Registers (ICDICERn)
GIC_DIST_PENDING_SET    *       &200 ; Interrupt Set-Pending Registers (ICDISPRn)
GIC_DIST_PENDING_CLEAR  *       &280 ; Interrupt Clear-Pending Registers (ICDICPRn)
GIC_DIST_ACTIVE_BIT     *       &300 ; Active Bit Registers (ICDABRn)
GIC_DIST_PRI            *       &400 ; Interrupt Priority Registers (ICDIPRn)
GIC_DIST_TARGET         *       &800 ; Interrupt Processor Target Registers (ICDIPTRn)
GIC_DIST_CONFIG         *       &C00 ; Interrupt Configuration Registers (ICDICFRn)
GIC_DIST_SOFTINT        *       &F00 ; Software Generated Interrupt Register (ICDSGIR)

; bits in Distributor Control Register (ICDDCR)
ICDDCR_ENABLE           *       (1 << 0)

; bits in Interrupt Controller Type Register (ICDICTR)
ICDICTR_ITLINES         *       (31 << 0)  ; maximum number of interrupts [32 * (N+1)]
ICDICTR_CPU_NUMBER      *       ( 7 << 5)  ; number of implemented CPU interfaces (-1)
ICDICTR_SECUR_EXTN      *       ( 1 << 10) ; Security Extension implemented
ICDICTR_LSPI            *       (31 << 11) ; number of lockable SPI


INTERRUPT_MAX   OMAP44XX_HARDIRQ        128 ; 128 interrupt lines

        ] ; __HAL_INTERRUPTS_HDR__

        END
