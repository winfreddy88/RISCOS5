; Copyright 2012 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Services
        GET     Hdr:ModHand
        GET     Hdr:FSNumbers
        GET     Hdr:NewErrors
        GET     Hdr:VduExt
        GET     Hdr:OsWords
        GET     Hdr:OsBytes
        GET     Hdr:HighFSI
        
        GET     VersionASM

        AREA    |ArmBE$$Code|, CODE, READONLY, PIC

Module_BaseAddr
        DCD     0                                       ; Start offset
        DCD     Mod_Init - Module_BaseAddr              ; Initialisation offset
        DCD     Mod_Die - Module_BaseAddr               ; Finalisation offset
        DCD     Mod_Service - Module_BaseAddr           ; Service call handler offset
        DCD     Mod_Title - Module_BaseAddr             ; Title string offset
        DCD     Mod_HelpStr - Module_BaseAddr           ; Help string offset
        DCD     Mod_HC_Table - Module_BaseAddr          ; Help and command keyword table offset
        DCD     0                                       ; SWI chunk number
        DCD     0                                       ; SWI handler code offset
        DCD     0                                       ; SWI decoding table offset
        DCD     0                                       ; SWI decoding code offset
        DCD     0                                       ; Messages filename offset
        DCD     Mod_Flags - Module_BaseAddr             ; Flags word offset

ARMBE_Syntax * Module_BaseAddr ; use default syntax

ARMBE_Help
        DCB     "Enter the Editor using EDIT from Basic", 0
        ALIGN

Mod_HC_Table
        Command ARMBE, 255, 0
        DCB     0
        ALIGN
        
Mod_Flags
        DCD     ModuleFlag_32bit

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_1                                            ; Address &94, referenced 10 times
        Push    "R0,R1,R14"
        LDR     R0,[R12,#332]
        ADD     R1,R12,#&05D0                           ; =1488
        ADD     R1,R1,R0,LSL #2
        STR     R1,[R12,#560]
        ADD     R1,R12,#&07D0                           ; =2000
        ADD     R1,R1,R0,LSL #2
        STR     R1,[R12,#564]
        STR     R0,[R12,#344]
        LDR     R0,[R12,#328]
        SUB     R0,R0,#2
        STR     R0,[R12,#324]
        BL      subroutine_178
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_2                                            ; Address &CC, referenced once
        Push    "R1-R3,R7-R9,R14"
        MOV     R9,R0
        LDR     R8,[R12,#600]
        LDR     R7,data_20202020
        ADD     R0,R12,#&0204                           ; =516
        ADD     R1,R12,#&0248                           ; =584
        BL      subroutine_5
        CMP     R0,#0
        BNE     skip_447
        ADD     R0,R12,#&0208                           ; =520
        ADD     R1,R12,#&024C                           ; =588
        BL      subroutine_5
skip_447                                                ; Address &FC, referenced once
        Pull    "R1-R3,R7-R9,PC"
data_20202020
        DCD     &20202020

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_5                                            ; Address &100, referenced twice
        Push    "R14"
        LDR     R2,[R0]
        LDR     R3,[R1]
        CMP     R2,R7
        BEQ     skip_430
        CMP     R3,R8
        MOVNE   R0,#0
        BNE     skip_417
        CMP     R2,R9
        ANDEQ   R9,R9,#&DF                              ; ="ß"
skip_430                                                ; Address &128, referenced once
        STR     R9,[R0]
        STR     R8,[R1]
        MOV     R0,#1
skip_417                                                ; Address &134, referenced once
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_7                                            ; Address &13C, referenced 3 times
        Push    "R0-R3,R14"
        MOV     R3,R0
        MOV     R2,R1
        MOV     R1,#0
        ADD     R0,R12,#&0400                           ; =1024
        BL      subroutine_306
        CMP     R0,#0
        MOVNE   R1,#0
        BNE     code_21
        MOV     R11,R3
        BL      subroutine_282
        MOV     R0,#0
        STR     R0,[R12,#292]
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_8                                            ; Address &174, referenced once
        Push    "R0-R9,R14"
        LDR     R9,[R12,#480]
        LDR     R8,[R12,#484]
        LDR     R7,[R12,#488]
        SUB     R6,R8,R9
        LDR     R5,[R12,#516]
        AND     R5,R5,#&DF                              ; ="ß"
        ADD     R4,R12,#&0248                           ; =584
        ADD     R3,R12,#&0280                           ; =640
        ADD     R2,R12,#&0280                           ; =640
loop_92                                                 ; Address &19C, referenced twice
        CMP     R4,R3
        BEQ     skip_411
        LDR     R0,[R4],#4
        CMN     R0,#1
        STREQ   R0,[R2],#4
        BEQ     loop_92
        BL      subroutine_277
        MOV     R1,R0
        CMP     R0,R7
        ADDCS   R1,R0,R6
        CMP     R5,#&4D                                 ; ="M"
        BNE     skip_416
        CMP     R0,R9
        BCC     skip_414
        CMP     R0,R8
        ADDCC   R1,R7,R0
        SUBCC   R1,R1,R9
skip_414                                                ; Address &1E0, referenced once
        CMP     R1,R8
        SUBCS   R1,R1,R6
skip_416                                                ; Address &1E8, referenced once
        STR     R1,[R2],#4
        B       loop_92
skip_411                                                ; Address &1F0, referenced once
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_9                                            ; Address &1F4, referenced once
        Push    "R1,R2,R5-R9,R14"
        MOV     R9,R0
        MOV     R8,#0
        MOV     R7,#0
        LDR     R6,[R12,#484]
        LDR     R5,[R12,#324]
        ADD     R5,R5,#1
loop_151                                                ; Address &210, referenced once
        CMP     R9,R6
        BEQ     skip_365
        MOV     R0,R9
        BL      subroutine_310
        MOV     R0,#0
        BL      subroutine_223
        CMN     R0,#1
        BEQ     skip_394
        CMP     R8,#0
        BNE     skip_458
        MOV     R8,#1
        BL      subroutine_178
        BL      subroutine_77
skip_458                                                ; Address &244, referenced once
        LDR     R0,[R12,#396]
        BL      subroutine_46
        MOV     R1,R7
        ADD     R7,R7,R0
        CMP     R7,R5
        BGT     skip_365
        MOV     R0,R9
        BL      subroutine_301
        MOV     R2,#1
        BL      subroutine_148
skip_394                                                ; Address &26C, referenced once
        LDRB    R0,[R9,#3]
        ADD     R9,R9,R0
        B       loop_151
skip_365                                                ; Address &278, referenced twice
        MOV     R0,R8
        Pull    "R1,R2,R5-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_10                                           ; Address &280, referenced once
        Push    "R1,R2,R8,R9,R14"
        MOV     R9,#0
loop_21                                                 ; Address &288, referenced 4 times
        MOV     R1,#0
        MOV     R2,R9
        BL      subroutine_140
        MOV     R0,#1
        BL      subroutine_279
        MOV     R8,R0
        BL      subroutine_228
        CMP     R0,#1
        STREQ   R8,[R12,#440]
        MOVEQ   R8,#1
        STREQ   R8,[R12,#444]
        BEQ     skip_342
        CMP     R8,#&8F00
        BNE     skip_271
        CMP     R9,#0
        SUBNE   R9,R9,#1
        BNE     loop_21
        BL      subroutine_24
        MOV     R9,R0
        B       loop_21
skip_271                                                ; Address &2D8, referenced once
        CMP     R8,#&8E00
        BNE     skip_376
        BL      subroutine_24
        CMP     R9,R0
        MOVEQ   R9,#0
        ADDNE   R9,R9,#1
        B       loop_21
skip_376                                                ; Address &2F4, referenced once
        CMP     R8,#&9700
        CMPNE   R8,#&B300
        BEQ     skip_342
        CMP     R8,#&B200
        BNE     skip_395
        LDR     R0,[R12,#560]
        LDR     R11,[R0,R9,LSL #2]
        BL      subroutine_282
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        MOV     R0,#0
        BL      subroutine_223
        STR     R0,[R12,#292]
        B       skip_342
skip_395                                                ; Address &32C, referenced once
        CMP     R8,#&8600
        BNE     skip_345
        LDR     R0,[R12,#560]
        LDR     R1,[R12,#324]
        LDR     R2,[R0,R9,LSL #2]
        BL      subroutine_241
        MOV     R1,R0
        MOV     R0,R2
        BL      subroutine_301
        BL      subroutine_238
skip_345                                                ; Address &354, referenced once
        B       loop_21
skip_342                                                ; Address &358, referenced 3 times
        MOV     R0,R8
        Pull    "R1,R2,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_15                                           ; Address &360, referenced once
        Push    "R0-R4,R7-R9,R14"
        ADD     R9,R12,#&0A70                           ; =2672
        LDR     R8,[R12,#292]
        LDR     R7,[R12,#384]
        MOV     R1,#&0170                               ; =368
        CMP     R8,R1
        BLE     skip_348
loop_131                                                ; Address &37C, referenced once
        SWI     OS_WriteI+7
        B       skip_351
skip_348                                                ; Address &384, referenced once
        BL      subroutine_58
        CMP     R8,R7
        ADDCS   R7,R8,#1
        STRCS   R7,[R12,#384]
        BCS     skip_338
        LDR     R0,[R12,#348]
        CMP     R0,#0
        BEQ     skip_338
        LDRB    R0,[R9,#368]
        CMP     R0,#&20                                 ; =" "
        BNE     loop_131
        ADD     R0,R9,R8
        ADD     R1,R0,#1
        SUB     R2,R7,R8
        BL      subroutine_114
        LDR     R0,[R12,#372]
        STRB    R0,[R9,R8]
        MOV     R0,#&0170                               ; =368
        ADD     R0,R0,#1
        CMP     R7,R0
        BCS     skip_341
        LDRB    R0,[R9,R7]
        CMP     R0,#&20                                 ; =" "
        ADDNE   R7,R7,#1
        STRNE   R7,[R12,#384]
skip_341                                                ; Address &3E8, referenced once
        LDR     R0,[R12,#356]
        MOV     R1,R11
        MOV     R2,R9
        MOV     R3,R7
        MOV     R4,R8
        BL      subroutine_149
        MOV     R0,#1
        BL      subroutine_157
        B       skip_352
skip_338                                                ; Address &40C, referenced twice
        LDR     R0,[R12,#372]
        STRB    R0,[R9,R8]
        BL      subroutine_188
        LDR     R0,[R12,#356]
        BL      subroutine_290
        MOV     R0,#0
        BL      subroutine_157
skip_352                                                ; Address &428, referenced once
        ADD     R8,R8,#1
        STR     R8,[R12,#292]
        BL      subroutine_121
skip_351                                                ; Address &434, referenced once
        Pull    "R0-R4,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_21                                           ; Address &438, referenced once
        Push    "R0-R3,R6-R9,R14"
        MOV     R9,R0
        LDR     R8,[R12,#288]
        MOV     R0,#&FF00
        BL      subroutine_192
        MOV     R7,R1
        LDR     R0,[R12,#272]
        CMP     R0,R9
        MOVCC   R0,#6
        STRCC   R0,[R12,#304]
        BCC     skip_353
        MOV     R0,#OSFile_Load
        ADD     R1,R12,#&0C40                           ; =3136
        LDR     R2,[R12,#260]
        SUB     R2,R2,#2
        MOV     R6,R2
        MOV     R3,#0
        SWI     XOS_File
        BVC     skip_331
        BL      subroutine_70
        MVN     R0,#0
        STR     R0,[R12,#304]
        B       skip_353
skip_331                                                ; Address &494, referenced once
        MOV     R0,#1
        STR     R0,[R12,#548]
        BL      subroutine_41
        LDR     R0,[R12,#304]
        CMP     R0,#0
        BEQ     skip_335
        BL      subroutine_34
        MOV     R0,#&0D                                 ; =13
        STRB    R0,[R6,#0]
        MOV     R0,#&FF                                 ; ="ÿ"
        STRB    R0,[R6,#1]
        BL      subroutine_261
        B       skip_353
skip_335                                                ; Address &4C8, referenced twice
        MOV     R0,#1
        STR     R0,[R12,#380]
        LDR     R0,[R12,#308]
        CMP     R0,#0
        MOVNE   R0,R6
        MOVNE   R1,R7
        MOVNE   R2,R8
        BLNE    subroutine_278
        MOV     R9,R0
        MOV     R11,R7
        MOV     R0,R7
        BL      subroutine_301
        STR     R0,[R12,#624]
        BL      subroutine_282
        MOV     R0,#0
        STR     R0,[R12,#292]
        CMP     R9,#0
        MOVNE   R0,#&11                                 ; =17
        MOVNE   R1,#0
        BNE     code_21
skip_353                                                ; Address &518, referenced 3 times
        Pull    "R0-R3,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_278                                          ; Address &51C, referenced once
        Push    "R1,R2,R6-R9,R14"
        MOV     R6,R0
        MOV     R7,R1
        MOV     R8,R2
        MOV     R9,#0
        MOV     R0,R7
        BL      subroutine_301
        ADD     R0,R0,#&0A                              ; =10
        MOV     R1,#&0A                                 ; =10
        BL      subroutine_153
        MOV     R1,R0,LSL #3
        ADD     R0,R1,R0,LSL #1
        MOV     R2,R0
        LDR     R1,[R12,#288]
        SUB     R1,R1,R8
        BL      subroutine_45
        CMN     R0,#1
        BNE     skip_400
        MOV     R0,#&0A                                 ; =10
        LDR     R1,[R12,#288]
        BL      subroutine_45
        CMN     R0,#1
        MOVEQ   R1,#0
        MOVEQ   R0,#1
        MOVNE   R1,#&0A                                 ; =10
        STR     R1,[R12,#456]
        STR     R0,[R12,#460]
        LDR     R0,[R12,#264]
        STR     R0,[R12,#464]
        STR     R6,[R12,#468]
        STR     R0,[R12,#472]
        STR     R6,[R12,#476]
        BL      subroutine_300
        ORR     R9,R0,R9
        MOV     R0,R7
        BL      subroutine_301
        LDR     R1,[R12,#460]
        ADD     R2,R0,R1
        MOV     R0,R1
skip_400                                                ; Address &5B8, referenced once
        STR     R2,[R12,#456]
        STR     R0,[R12,#460]
        STR     R6,[R12,#464]
        LDR     R0,[R12,#260]
        SUB     R0,R0,#2
        STR     R0,[R12,#468]
        STR     R6,[R12,#472]
        STR     R0,[R12,#476]
        BL      subroutine_300
        ORRS    R0,R0,R9
        MOVNE   R0,#&11                                 ; =17
        Pull    "R1,R2,R6-R9,PC"

; ******************************************************************************
;
; <- Main entry point
;
ARMBE_Code                                              ; Address &5E8, referenced once
        LDR     R12,[R12,#0]
        LDR     R1,[R12,#716]
        LDR     R2,data_7
        CMP     R2,R1,LSR #12
        BEQ     skip_261
        SETV
        ADR     R0,error_blk_only_from_basic
        MOV     PC,R14
skip_261                                                ; Address &60C, referenced once
        STR     R14,[R12,#760]
        BL      subroutine_72
        LDR     R0,[R12,#732]
        LDR     R1,[R12,#720]
        LDR     R2,[R0,#8]
        LDR     R2,[R1,R2]
        STR     R2,[R12,#264]
        LDR     R2,[R0,#20]
        LDR     R2,[R1,R2]
        STR     R2,[R12,#256]
        MOV     R0,#0
        STR     R0,[R12,#716]
        STR     R0,[R12,#304]
        STR     R0,[R12,#380]
        STR     R0,[R12,#376]
        STR     R0,[R12,#548]
        STR     R0,[R12,#532]
        STR     R0,[R12,#352]
        STR     R0,[R12,#412]
        MOV     R0,#1
        STR     R0,[R12,#556]
        BL      subroutine_161
        BL      subroutine_41
        LDR     R0,[R12,#304]
        CMP     R0,#0
        MOVNE   R0,#0
        STRNE   R0,[R12,#304]
        BLNE    subroutine_166
        BL      subroutine_182
        BL      subroutine_187
        BL      subroutine_177
        BL      subroutine_143
        LDR     R0,[R12,#308]
        CMP     R0,#0
        BEQ     skip_327
        BL      subroutine_281
        BL      subroutine_287
        BL      subroutine_291
        B       skip_319
skip_327                                                ; Address &6A8, referenced once
        BL      subroutine_217
skip_319                                                ; Address &6AC, referenced once
        B       code_16
data_7                                                  ; Address &6B0, referenced once
        DCD     &BA51C
error_blk_only_from_basic
        DCD     ErrorBase_BASICEditor + 1
        DCB     "*ARMBE is only valid from BASIC", 0
        ALIGN

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_270                                          ; Address &6D8, referenced once
        Push    "R1-R4,R14"
        LDR     R1,[R12,#284]
        CMP     R1,#0
        MVNEQ   R0,#0
        BEQ     skip_11
        MOV     R0,#0
        ADD     R2,R12,#&0C40                           ; =3136
loop_146                                                ; Address &6F4, referenced once
        LDRB    R3,[R2],#1
        SUB     R3,R3,#&30                              ; ="0"
        MOV     R4,R0,LSL #3
        ADD     R0,R4,R0,LSL #1
        ADD     R0,R0,R3
        SUBS    R1,R1,#1
        BNE     loop_146
skip_11                                                 ; Address &710, referenced once
        Pull    "R1-R4,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_31                                           ; Address &714, not referenced
        Push    "R0,R1,R7-R9,R14"
        LDR     R9,[R12,#360]
        LDR     R8,[R12,#320]
        CMP     R9,#0
        BEQ     skip_12
        LDR     R0,[R12,#292]
        MOV     R1,R8
        BL      subroutine_153
        MOVS    R7,R1
        MOVEQ   R7,R8
        SUB     R0,R7,#1
        MOV     R1,R9
        BL      subroutine_153
        MOV     R1,R9
        BL      subroutine_164
        SUB     R0,R7,R0
loop_137                                                ; Address &754, referenced once
        BL      subroutine_138
        SUBS    R0,R0,#1
        BNE     loop_137
skip_12                                                 ; Address &760, referenced once
        Pull    "R0,R1,R7-R9,PC"
loop_47                                                 ; Address &764, referenced twice
        MOV     R1,#0
        STR     R1,[R12,#428]
        BL      subroutine_57
        SWI     OS_WriteI+12
        CMP     R0,#0
        BEQ     code_4
        SWI     OS_WriteS
        DCB     13, 10
        DCB     "Line ", 0
        ALIGN
code_2                                                  ; Address &788, not referenced
        LDR     R0,[R12,#632]
        BL      subroutine_35
        BL      subroutine_296
        SWI     OS_WriteS
        DCB     " is too long to be edited", 13
        DCB     10, 10
        DCB     0
        ALIGN
code_4                                                  ; Address &7B8, referenced once
        LDR     R0,[R12,#268]
        STR     R0,[R12,#552]
        LDR     R0,[R12,#548]
        CMP     R0,#0
        BEQ     skip_15
        LDR     R0,[R12,#732]
        LDR     R0,[R0,#12]
        LDR     R1,[R12,#720]
        LDR     R2,[R12,#260]
        ORR     R2,R2,#&80000000
        STR     R2,[R1,R0]
skip_15                                                 ; Address &7E4, referenced once
        ADD     R0,R12,#&02E0                           ; =736
        LDMDB   R0,{R6-R11}
        SWI     OS_EnterOS
        CLRV
        LDR     PC,[R12,#760]

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_35                                           ; Address &7F8, referenced 13 times
        Push    "R0-R3,R14"
        MOV     R2,#0
        ADD     R3,R12,#0
loop_118                                                ; Address &804, referenced once
        MOV     R1,#&0A                                 ; =10
        BL      subroutine_153
        ADD     R1,R1,#&30                              ; ="0"
        STRB    R1,[R3],#1
        ADD     R2,R2,#1
        CMP     R0,#0
        BNE     loop_118
        STR     R2,[R12,#404]
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_36                                           ; Address &828, referenced twice
        Push    "R0-R2,R14"
        LDR     R1,[R12,#452]
        CMP     R1,#0
        BEQ     skip_297
        MOV     R1,#0
        MOV     R2,R0
        BL      subroutine_140
        SWI     OS_WriteS
        DCB     "      ", 0
        ALIGN
code_13                                                 ; Address &850, not referenced
        LDR     R1,[R12,#564]
        LDR     R0,[R1,R2,LSL #2]
        CMP     R0,#0
        BEQ     skip_297
loop                                                    ; Address &860, referenced once
        SWI     OS_WriteI+" "
        SUBS    R0,R0,#1
        BNE     loop
        STR     R0,[R1,R2,LSL #2]
skip_297                                                ; Address &870, referenced twice
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_38                                           ; Address &874, referenced 3 times
        Push    "R0-R2,R9,R14"
        LDR     R0,[R12,#300]
        MOV     R1,#VduExt_ModeFlags
        SWI     OS_ReadModeVariable
        MOV     R9,R2
        MOV     R1,#VduExt_YEigFactor
        SWI     OS_ReadModeVariable
        MOV     R1,#7
        CMP     R2,#2
        BNE     skip_290
        TST     R9,#2
        BEQ     skip_298
skip_290                                                ; Address &8A4, referenced once
        MOV     R1,#&0E                                 ; =14
skip_298                                                ; Address &8A8, referenced once
        SWI     OS_WriteI+23
        SWI     OS_WriteI+0
        SWI     OS_WriteI+9
        MOV     R0,R1
        SWI     OS_WriteC
        BL      subroutine_196
        SWI     OS_WriteI+23
        SWI     OS_WriteI+0
        SWI     OS_WriteI+10
        SWI     OS_WriteI+0
        BL      subroutine_196
        BL      subroutine_96
        Pull    "R0-R2,R9,PC"

; ******************************************************************************
;
; do_bar_char_defns
; => No entry parameters
; <= Registers preserved
;
do_bar_char_defns ROUT
        Push    "R0-R2,R14"
        MOV     R0,#OsWord_ReadCharacterDefinition
        ADD     R1,R12,#&0CA0                           ; =3232
        MOV     R2,#&96                                 ; First character definition (inclusive)
10
        STRB    R2,[R1]
        SWI     OS_Word                                 ; Read & store the user's definitions
        ADD     R1,R1,#9
        ADD     R2,R2,#1
        CMP     R2,#&A0                                 ; Last character definition (exclusive)
        BNE     %BT10

        ADRL    R1,bar_char_defns
        MOV     R2,#bar_char_defns_end - bar_char_defns
20
        LDRB    R0,[R1],#1
        SWI     OS_WriteC                               ; Install our bar line definitions
        SUBS    R2,R2,#1
        BNE     %BT20
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_42                                           ; Address &924, referenced twice
        Push    "R0-R2,R9,R14"
        MOV     R9,R0
        LDR     R1,data_alt1_20202020
        STR     R1,[R12,#8]
        LDR     R1,data_20200020
        STR     R1,[R12,#12]
        ADD     R2,R12,#8
        LDR     R0,[R12,#516]
        LDR     R1,[R12,#584]
        BL      subroutine_43
        LDR     R0,[R12,#520]
        LDR     R1,[R12,#588]
        BL      subroutine_43
        LDR     R0,[R12,#592]
        CMP     R0,R9
        LDREQ   R0,[R12,#524]
        STREQB  R0,[R2],#1
        LDR     R0,[R12,#596]
        CMP     R0,R9
        LDREQ   R0,[R12,#528]
        STREQB  R0,[R2]
        Pull    "R0-R2,R9,PC"

data_alt1_20202020
        DCD     &20202020
data_20200020
        DCD     &20200020

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_43                                           ; Address &97C, referenced twice
        Push    "R14"
        CMP     R1,R9
        BNE     skip_264
        CMP     R0,#&5A                                 ; ="Z"
        STRLEB  R0,[R2],#1
        AND     R0,R0,#&DF                              ; ="ß"
        STRB    R0,[R2],#1
skip_264                                                ; Address &998, referenced once
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_45                                           ; Address &9A4, referenced 5 times
        Push    "R1,R2,R14"
        CMP     R1,#2
        MOVCC   R0,#&0A                                 ; =10
        BCC     skip_328
        SUB     R1,R1,#1
        ADD     R2,R0,R1
        CMP     R2,#&FF00
        MVNCS   R0,#0
        BCS     skip_328
        MOV     R2,R1,LSL #3
        ADD     R2,R2,R1,LSL #1
        ADD     R2,R0,R2
        CMP     R2,#&FF00
        MOVCC   R0,#&0A                                 ; =10
        BCC     skip_328
        MOV     R2,#&FF00
        SUB     R2,R2,#1
        SUB     R0,R2,R0
        BL      subroutine_153
skip_328                                                ; Address &9F0, referenced 3 times
        Pull    "R1,R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_46                                           ; Address &9F4, referenced 14 times
        Push    "R1,R14"
        LDR     R1,[R12,#320]
        BL      subroutine_153
        CMP     R1,#0
        ADDNE   R0,R0,#1
        CMP     R0,#0
        MOVEQ   R0,#1
        Pull    "R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_47                                           ; Address &A14, referenced twice
        Push    "R1,R9,R14"
        MOV     R9,R0
        ADD     R0,R9,#&0A                              ; =10
        MOV     R1,#&0A                                 ; =10
        BL      subroutine_153
        MOV     R1,R0,LSL #3
        ADD     R0,R1,R0,LSL #1
        CMP     R0,#&FF00
        BCC     skip_249
        ADD     R0,R9,#1
        CMP     R0,#&FF00
        MVNCS   R0,#0
skip_249                                                ; Address &A44, referenced once
        Pull    "R1,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_48                                           ; Address &A48, referenced 8 times
        Push    "R0-R2,R14"
        MOV     R0,#0
        STR     R0,[R12,#452]
        LDR     R0,[R12,#624]
        MOV     R1,#0
        MVN     R2,#0
        BL      subroutine_148
        MOV     R0,#1
        STR     R0,[R12,#452]
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_49                                           ; Address &A70, referenced 4 times
        Push    "R0,R14"
        LDR     R0,[R12,#556]
        CMP     R0,#1
        BEQ     skip_250
        BL      subroutine_258
        BL      subroutine_167
        BL      subroutine_48
        BL      subroutine_1
        BL      subroutine_167
skip_250                                                ; Address &A94, referenced once
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_51                                           ; Address &A98, referenced twice
        Push    "R0,R1,R6-R9,R14"
        MOV     R9,R0
        MOV     R8,#0
        MOV     R7,R1
        ADD     R7,R7,#1
loop_73                                                 ; Address &AAC, referenced once
        MOV     R0,R9
        BL      subroutine_310
        LDR     R0,[R12,#396]
        BL      subroutine_46
        ADD     R8,R8,R0
        CMP     R8,R7
        BGT     skip_230
        MOV     R6,R9
        MOV     R0,R9
        BL      subroutine_301
        BL      subroutine_192
        CMP     R1,#0
        MOVNE   R9,R1
        BNE     loop_73
skip_230                                                ; Address &AE4, referenced once
        MOV     R0,R6
        BL      subroutine_301
        CMN     R0,#1
        MOVEQ   R0,#&0A                                 ; =10
        STR     R0,[R12,#624]
        Pull    "R0,R1,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_53                                           ; Address &AFC, referenced twice
        Push    "R2-R9,R14"
        MOV     R9,R0
        MOV     R7,#0
        LDR     R4,[R12,#260]
        SUB     R4,R4,#2
        LDR     R3,[R12,#264]
        BL      subroutine_301
        MOVS    R8,R0
        MOVMI   R6,#&14                                 ; =20
        BMI     skip_260
        LDRB    R5,[R9,#3]
        ADD     R5,R9,R5
        MOV     R0,R5
        BL      subroutine_301
        CMN     R0,#1
        BEQ     skip_243
        ADD     R1,R8,#1
        CMP     R0,R1
        MOVGT   R6,R1
        BGT     skip_260
        MOV     R7,#1
        ADD     R0,R3,R4
        MOV     R0,R0,LSR #1
        CMP     R9,R0
        MOVGT   R0,R5
        MOVGT   R1,R4
        LDRGT   R2,[R12,#288]
        MOVLE   R0,R3
        MOVLE   R1,R5
        MOVLE   R2,#0
        BL      subroutine_85
        CMP     R2,#0
        SUBNE   R0,R2,R0
        MOV     R2,R0
        MOV     R0,#&0A                                 ; =10
        LDR     R1,[R12,#288]
        ADD     R1,R1,#1
        BL      subroutine_45
        CMP     R0,#2
        BLT     skip_235
        STR     R0,[R12,#460]
        SUB     R1,R2,#1
        BL      subroutine_164
        ADD     R6,R0,#&0B                              ; =11
        MOV     R0,#&0A                                 ; =10
        STR     R0,[R12,#456]
        STR     R3,[R12,#464]
        STR     R4,[R12,#468]
        STR     R3,[R12,#472]
        STR     R4,[R12,#476]
        B       skip_260
skip_235                                                ; Address &BC8, referenced once
        MOV     R0,#1
        STR     R0,[R12,#460]
        STR     R3,[R12,#464]
        STR     R4,[R12,#468]
        CMP     R2,R8
        MOVLE   R6,R2
        MOVLE   R0,#0
        STRLE   R3,[R12,#472]
        STRLE   R5,[R12,#476]
        ADDGT   R6,R8,#1
        ADDGT   R0,R6,#1
        STRGT   R5,[R12,#472]
        STRGT   R4,[R12,#476]
        STR     R0,[R12,#456]
        B       skip_260
skip_243                                                ; Address &C04, referenced once
        MOV     R0,R8
        BL      subroutine_47
        CMN     R0,#1
        MOVNE   R6,R0
        BNE     skip_260
        MOV     R0,#&0A                                 ; =10
        LDR     R1,[R12,#288]
        ADD     R1,R1,#1
        BL      subroutine_45
        CMN     R0,#1
        MOVNE   R1,#&0A                                 ; =10
        MOVEQ   R0,#1
        MOVEQ   R1,#0
        STR     R0,[R12,#460]
        STR     R1,[R12,#456]
        STR     R3,[R12,#464]
        STR     R4,[R12,#468]
        STR     R3,[R12,#472]
        STR     R4,[R12,#476]
        MOV     R7,#1
        LDR     R1,[R12,#288]
        SUB     R1,R1,#1
        BL      subroutine_164
        LDR     R1,[R12,#456]
        ADD     R0,R0,R1
        BL      subroutine_47
        MOV     R6,R0
skip_260                                                ; Address &C70, referenced 5 times
        MOV     R0,R7
        MOV     R1,R6
        Pull    "R2-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_55                                           ; Address &C7C, referenced 3 times
        Push    "R2,R14"
        LDR     R1,[R12,#288]
        CMP     R1,#&FF00
        MOVEQ   R0,#&10                                 ; =16
        MOVEQ   R1,#0
        BEQ     code_21
        BL      subroutine_53
        CMP     R0,#0
        BEQ     skip_219
        BL      subroutine_300
        CMP     R0,#0
        MOVEQ   R0,#1
        BEQ     skip_219
        MOV     R1,#1
        STR     R1,[R12,#408]
        LDR     R2,[R12,#556]
        CMP     R2,#1
        STRNE   R1,[R12,#412]
        MOV     R1,#0
        B       code_21
skip_219                                                ; Address &CCC, referenced twice
        Pull    "R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_56                                           ; Address &CD0, referenced twice
        Push    "R0-R2,R7-R9,R14"
        MOV     R9,R0
        MOV     R8,R1
        BL      subroutine_24
        MOV     R7,R0
        MOV     R0,R1
        BL      subroutine_225
        CMP     R0,#0
        BNE     skip_225
        LDRB    R0,[R1,#3]
        ADD     R0,R1,R0
        CMP     R0,R8
        BNE     skip_225
        ADD     R0,R7,R9
        LDR     R1,[R12,#324]
        CMP     R0,R1
        BGT     skip_225
        MOV     R0,R8
        BL      subroutine_301
        ADD     R1,R7,#1
        MVN     R2,#0
        BL      subroutine_148
skip_225                                                ; Address &D28, referenced 3 times
        Pull    "R0-R2,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_224                                          ; Address &D2C, referenced twice
        Push    "R0-R2,R14"
        BL      subroutine_48
        LDR     R0,[R12,#560]
        LDR     R1,[R12,#324]
        MOV     R2,R11
        BL      subroutine_241
        CMN     R0,#1
        LDREQ   R0,[R12,#600]
        STREQ   R0,[R12,#624]
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_58                                           ; Address &D54, referenced once
        Push    "R0-R3,R14"
        LDR     R0,[R12,#320]
        LDR     R1,[R12,#448]
        BL      subroutine_164
        LDR     R1,[R12,#292]
        ADD     R1,R1,#1
        CMP     R1,R0
        BEQ     skip_211
        LDR     R1,[R12,#348]
        CMP     R1,#0
        BEQ     skip_213
        ADD     R1,R12,#&0A70                           ; =2672
        LDR     R2,[R12,#384]
        SUBS    R3,R2,#1
        BMI     skip_213
        LDRB    R1,[R1,R3]
        CMP     R1,#&20                                 ; =" "
        BEQ     skip_213
        CMP     R2,R0
        BNE     skip_213
skip_211                                                ; Address &DA4, referenced once
        BL      subroutine_186
        BL      subroutine_128
skip_213                                                ; Address &DAC, referenced 4 times
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_60                                           ; Address &DB0, referenced twice
        Push    "R1-R7,R14"
        LDR     R3,[R12,#356]
        LDR     R4,[R12,#560]
        LDR     R5,[R12,#324]
        ADD     R6,R3,R0
        ADD     R6,R6,R1
        SUB     R6,R6,R5
        SUBS    R6,R6,#1
        MOVLE   R0,#0
        BLE     skip_203
        SUB     R6,R6,#1
        LDR     R6,[R4,R6,LSL #2]
        LDRB    R7,[R6,#3]
        ADD     R6,R6,R7
        CMP     R6,R2
        MOVEQ   R0,#0
        STREQ   R0,[R12,#356]
        BEQ     skip_210
loop_68                                                 ; Address &DF8, referenced once
        BL      subroutine_201
        LDR     R7,[R4]
        CMP     R7,R6
        BNE     loop_68
skip_210                                                ; Address &E08, referenced once
        MOV     R0,#1
skip_203                                                ; Address &E0C, referenced once
        Pull    "R1-R7,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_216                                          ; Address &E10, referenced 23 times
        Push    "R0-R2,R14"
        BL      subroutine_48
        LDR     R0,[R12,#560]
        LDR     R1,[R12,#324]
        MOV     R2,R11
        BL      subroutine_241
        CMN     R0,#1
        MOVEQ   R0,R11
        BLEQ    subroutine_212
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_62                                           ; Address &E38, referenced once
        Push    "R2-R9,R14"
        MOV     R9,R0
        LDR     R8,[R12,#292]
        MOV     R7,#0
        MOV     R4,#0
        ADD     R0,R12,#&0A70                           ; =2672
        MOV     R1,R8
        LDR     R2,[R12,#600]
        BL      subroutine_64
        MOV     R6,R0
        BL      subroutine_23
        ADD     R0,R12,#&0400                           ; =1024
        LDR     R1,[R12,#396]
        MOV     R2,R9
        BL      subroutine_64
        MOV     R5,R0
        AND     R0,R5,R6
        TST     R0,#2
        BEQ     skip_200
loop_121                                                ; Address &E84, referenced 3 times
        MOV     R0,#&2F                                 ; ="/"
        MOV     R1,#0
        B       code_21
skip_200                                                ; Address &E90, referenced once
        TST     R6,#2
        BEQ     skip_201
        TST     R6,#1
        BEQ     loop_121
        ORR     R7,R7,#4
        B       skip_190
skip_201                                                ; Address &EA8, referenced once
        TST     R6,#4
        ORRNE   R7,R7,#4
        TST     R5,#2
        BEQ     skip_190
        TST     R5,#1
        BEQ     loop_121
        ORR     R7,R7,#&0C                              ; =12
skip_190                                                ; Address &EC4, referenced twice
        TST     R5,#4
        ORRNE   R7,R7,#&0C                              ; =12
        MOV     R0,R4
        MOV     R1,R7
        Pull    "R2-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_64                                           ; Address &ED8, referenced twice
        Push    "R14"
        BL      subroutine_174
        LDR     R2,[R12,#388]
        CMN     R2,#1
        BEQ     loop_121
        ADD     R0,R12,#&1000                           ; =4096
        ADD     R1,R12,#&0400                           ; =1024
        BL      subroutine_114
        BL      subroutine_292
        CMP     R0,#0
        ORRNE   R7,R7,#2
        ADD     R0,R12,#&1000                           ; =4096
        ADD     R1,R12,#&0400                           ; =1024
        BL      subroutine_81
        MOV     R3,R0
        ADD     R0,R12,#&1000                           ; =4096
        BL      subroutine_102
        LDR     R0,[R12,#396]
        CMN     R0,#1
        ORREQ   R3,R3,#2
        ADDEQ   R4,R4,#4
        BEQ     skip_192
        ADD     R0,R12,#&0400                           ; =1024
        LDR     R1,[R12,#396]
        LDR     R2,[R12,#632]
        BL      subroutine_174
        LDR     R0,[R12,#388]
        CMN     R0,#1
        MOVEQ   R0,#4
        ORREQ   R3,R3,#4
        ADD     R4,R4,R0
skip_192                                                ; Address &F54, referenced once
        MOV     R0,R3
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_65                                           ; Address &F5C, referenced once
        Push    "R2-R8,R14"
        LDR     R8,[R12,#292]
        MOV     R7,R0
        MOV     R6,#0
        MOV     R5,#0
        MOV     R4,#0
        ADD     R0,R12,#&0A70                           ; =2672
        MOV     R1,R8
        LDR     R2,[R12,#600]
        BL      subroutine_66
        MOV     R4,R0
        LDR     R3,[R12,#388]
        BL      subroutine_23
        ADD     R0,R12,#&0400                           ; =1024
        LDR     R1,[R12,#396]
        MOV     R2,R7
        BL      subroutine_66
        MOV     R5,R0
        ANDS    R0,R4,R5
        BEQ     skip_226
loop_114                                                ; Address &FAC, referenced once
        MOV     R0,#&2F                                 ; ="/"
        MOV     R1,#0
        B       code_21
skip_226                                                ; Address &FB8, referenced once
        ORR     R0,R4,R5
        CMP     R0,#3
        BEQ     loop_114
        CMP     R4,#0
        ORRNE   R6,R6,#4
        MOVNE   R3,#4
        CMP     R5,#0
        ORRNE   R6,R6,#&0C                              ; =12
        MOVNE   R2,#4
        LDREQ   R2,[R12,#388]
        ADD     R0,R2,R3
        MOV     R1,R6
        Pull    "R2-R8,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_66                                           ; Address &FEC, referenced twice
        Push    "R14"
        BL      subroutine_174
        LDR     R0,[R12,#388]
        CMN     R0,#1
        MOVEQ   R0,#1
        BEQ     skip_184
        ADD     R0,R12,#&1000                           ; =4096
        BL      subroutine_102
        LDR     R0,[R12,#396]
        CMN     R0,#1
        MOVEQ   R0,#2
        MOVNE   R0,#0
skip_184                                                ; Address &101C, referenced once
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_68                                           ; Address &1020, referenced 20 times
        Push    "R0-R4,R7-R9,R14"
        MOV     R9,R0
        MOV     R8,R1
        LDR     R7,[R12,#448]
        LDR     R0,[R12,#556]
        CMP     R0,#1
        BEQ     skip_133
        BL      subroutine_258
        LDR     R0,[R12,#560]
        LDR     R1,[R12,#324]
        MOV     R2,R11
        BL      subroutine_241
        CMN     R0,#1
        BNE     skip_142
        MOV     R0,R7
        MOV     R1,R11
        BL      subroutine_56
        B       skip_187
skip_142                                                ; Address &1068, referenced once
        CMP     R7,R8
        BNE     skip_161
        CMP     R9,#0
        MOVNE   R1,R11
        ADDNE   R2,R12,#&0A70                           ; =2672
        LDRNE   R3,[R12,#384]
        MOVNE   R4,#0
        BLNE    subroutine_149
        B       skip_187
skip_161                                                ; Address &108C, referenced once
        MOV     R1,R0
        LDR     R0,[R12,#600]
        MVN     R2,#0
        BL      subroutine_148
skip_187                                                ; Address &109C, referenced twice
        BL      subroutine_1
skip_133                                                ; Address &10A0, referenced once
        Pull    "R0-R4,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_75                                           ; Address &10A4, referenced 29 times
        Push    "R0-R4,R7-R9,R14"
        LDR     R9,[R12,#448]
        LDR     R8,[R12,#600]
        LDRB    R7,[R11,#3]
        LDR     R0,[R12,#376]
        CMP     R0,#0
        BEQ     skip_53
        ADD     R0,R12,#&0A70                           ; =2672
        LDR     R1,[R12,#384]
        MOV     R2,R8
        MOV     R3,R11
        BL      subroutine_306
        CMP     R0,#0
        MOVNE   R1,#0
        BNE     code_21
        BL      subroutine_282
        LDR     R0,[R12,#264]
        LDRB    R0,[R0,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BEQ     skip_53
        LDRB    R0,[R11,#3]
        SUBS    R0,R0,R7
        BEQ     skip_53
        LDR     R1,[R12,#356]
        ADD     R1,R1,R9
        LDR     R2,[R12,#324]
        LDR     R3,[R12,#560]
        BL      subroutine_76
        LDR     R1,[R12,#556]
        CMP     R1,#1
        BEQ     skip_53
        MOV     R1,#0
        LDR     R2,[R12,#336]
        SUB     R2,R2,#2
        ADD     R3,R12,#&05D0                           ; =1488
        LDR     R4,[R12,#340]
        ADD     R3,R3,R4,LSL #2
        BL      subroutine_76
skip_53                                                 ; Address &113C, referenced 4 times
        LDR     R0,[R12,#384]
        BL      subroutine_46
        STR     R0,[R12,#448]
        Pull    "R0-R4,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_76                                           ; Address &114C, referenced twice
        Push    "R14"
loop_24                                                 ; Address &1150, referenced once
        CMP     R1,R2
        BGT     skip_131
        LDR     R4,[R3,R1,LSL #2]
        CMP     R4,#0
        BEQ     skip_131
        CMP     R4,R11
        ADDGT   R4,R4,R0
        STRGT   R4,[R3,R1,LSL #2]
        ADD     R1,R1,#1
        B       loop_24
skip_131                                                ; Address &1178, referenced twice
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_77                                           ; Address &117C, referenced twice
        Push    "R0-R3,R14"
        SWI     OS_WriteI+12
        LDR     R0,[R12,#324]
        LDR     R1,[R12,#560]
        LDR     R3,[R12,#564]
        MOV     R2,#0
loop_78                                                 ; Address &1194, referenced once
        STR     R2,[R1,R0,LSL #2]
        STR     R2,[R3,R0,LSL #2]
        SUBS    R0,R0,#1
        BPL     loop_78
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_78                                           ; Address &11A8, referenced twice
        Push    "R0-R2,R14"
        BL      subroutine_80
        MOV     R0,#CliV
        ADRL    R1,event_CliV
        MOV     R2,R12
        SWI     XOS_Claim
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_80                                           ; Address &11C8, referenced twice
        Push    "R0-R2,R14"
loop_26                                                 ; Address &11CC, referenced once
        MOV     R0,#CliV
        ADRL    R1,event_CliV
        MOV     R2,R12
        SWI     XOS_Release
        BVC     loop_26
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
event_CliV                                              ; Address &11E8, referenced 4 times
        Push    "R14"
        LDR     R14,data_basmagic
        TEQ     R14,R1,LSR #12
        MOVNE   R14,#0
        STRNE   R14,[R12,#716]
        BNE     skip_143
        STR     R0,[R12,#712]
        STR     R1,[R12,#716]
        STR     R2,[R12,#720]
        STR     R3,[R12,#724]
        STR     R4,[R12,#728]
        STR     R5,[R12,#732]
        ADD     R14,R12,#&02E0                          ; =736
        STMIA   R14,{R6-R11}
skip_143                                                ; Address &1220, referenced once
        Pull    "PC"

data_basmagic
        DCD     &000BA51C

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_81                                           ; Address &1228, referenced once
        Push    "R1-R4,R9,R14"
        MOV     R9,R0
        MOV     R0,#1
        CMP     R2,#0
        BEQ     skip_130
loop_2                                                  ; Address &123C, referenced once
        LDRB    R3,[R9],#1
        LDRB    R4,[R1],#1
        CMP     R3,R4
        MOVNE   R0,#0
        BNE     skip_130
        SUBS    R2,R2,#1
        BNE     loop_2
skip_130                                                ; Address &1258, referenced twice
        Pull    "R1-R4,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_83                                           ; Address &125C, referenced twice
        Push    "R0-R2,R9,R14"
        SWI     OS_WriteI+30
        SWI     OS_WriteI+13
        MOV     R0,#OsByte_CursorKeyStatus
        MOV     R1,#2
        SWI     OS_Byte
        LDR     R9,[R12,#352]
        MOV     R0,#0
        STR     R0,[R12,#352]
        BL      subroutine_97
        CMP     R9,#0
        BLNE    subroutine_69
        Pull    "R0-R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_84                                           ; Address &1290, not referenced
        Push    "R0-R2,R9,R14"
        LDR     R0,[R12,#556]
        CMP     R0,#1
        BNE     skip_147
        LDR     R9,[R12,#352]
        MOV     R0,#1
        STR     R0,[R12,#352]
        MOV     R0,#OsByte_CursorKeyStatus
        BL      do_osbyte_x0_y0
        CMP     R9,#0
        BLEQ    subroutine_69
skip_147                                                ; Address &12BC, referenced once
        Pull    "R0-R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_85                                           ; Address &12C0, referenced once
        Push    "R1-R3,R14"
        MOV     R2,#0
loop_25                                                 ; Address &12C8, referenced once
        CMP     R0,R1
        BEQ     skip_123
        ADD     R2,R2,#1
        LDRB    R3,[R0,#3]
        ADD     R0,R0,R3
        B       loop_25
skip_123                                                ; Address &12E0, referenced once
        MOV     R0,R2
        Pull    "R1-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_174                                          ; Address &12E8, referenced 6 times
        Push    "R0-R9,R14"
        MOV     R9,R2
        MOV     R7,R0
        BL      subroutine_151
        MOV     R8,R0
        MOV     R1,R7
        ADD     R2,R12,#&1000                           ; =4096
        MOV     R0,#&0D                                 ; =13
        STRB    R0,[R2]
        LDRB    R6,[R1,R8]
        STRB    R0,[R1,R8]
        STRB    R9,[R2,#2]
        MOV     R9,R9,LSR #8
        STRB    R9,[R2,#1]
        ADD     R2,R2,#4
        MOV     R3,#0
        MOV     R4,#0
        MOV     R9,R13
        LDR     R13,[R12,#728]
        Push    "R6-R12"
        ADR     R14,return_subroutine_174
        LDR     R0,[R12,#732]
        ADD     PC,R0,#&48                              ; ="H"
return_subroutine_174
        Pull    "R6-R12"
        MOV     R13,R9
        STRB    R6,[R7,R8]
        ADD     R0,R12,#&1000                           ; =4096
        SUB     R1,R2,R0
        SUB     R1,R1,#1
        CMP     R1,#&FF                                 ; ="ÿ"
        MVNGT   R1,#0
        STRLEB  R1,[R0,#3]
        STR     R1,[R12,#388]
        BGT     skip_150
        ADD     R0,R0,#4
loop_74                                                 ; Address &1374, referenced once
        LDRB    R1,[R0],#1
        CMP     R1,#&20                                 ; =" "
        BEQ     loop_74
        CMP     R1,#&8B                                 ; =""
        MOVEQ   R1,#&CC                                 ; ="Ì"
        STREQB  R1,[R0,#-1]
skip_150                                                ; Address &138C, referenced once
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_89                                           ; Address &1390, referenced once
        Push    "R1-R3,R14"
        MOV     R1,R0
        MOV     R0,#&8D                                 ; =""
        MOV     R2,R1,LSR #12
        AND     R2,R2,#&0C                              ; =12
        AND     R3,R1,#&C0                              ; ="À"
        ORR     R2,R2,R3,LSR #2
        EOR     R2,R2,#&54                              ; ="T"
        ADD     R0,R2,R0,LSL #8
        AND     R2,R1,#&3F                              ; ="?"
        ORR     R2,R2,#&40                              ; ="@"
        ADD     R0,R2,R0,LSL #8
        MOV     R2,R1,LSR #8
        AND     R2,R2,#&3F                              ; ="?"
        ORR     R2,R2,#&40                              ; ="@"
        ADD     R0,R2,R0,LSL #8
        Pull    "R1-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_90                                           ; Address &13D4, referenced once
        Push    "R1,R2,R14"
        BL      subroutine_178
        MOV     R0,#&48                                 ; ="H"
        MOV     R1,#&49                                 ; ="I"
        BL      subroutine_294
        MOV     R1,#&12                                 ; =18
        MOV     R2,#3
        BL      subroutine_140
        LDR     R0,[R12,#568]
        CMP     R0,#0
        MOVEQ   R0,#&59                                 ; ="Y"
        MOVNE   R0,#&4E                                 ; ="N"
        SWI     OS_WriteC
        BL      subroutine_93
        Pull    "R1,R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_93                                           ; Address &1410, referenced once
        Push    "R1,R2,R8,R9,R14"
        MOV     R8,#1
loop_123                                                ; Address &1418, referenced twice
        CMP     R8,#1
        BLEQ    subroutine_94
        CMP     R9,#&B800
        BNE     skip_126
        CMP     R8,#1
        BNE     skip_118
        B       skip_116
skip_126                                                ; Address &1434, referenced once
        CMP     R9,#&8A00
        BNE     skip_155
skip_118                                                ; Address &143C, referenced once
        ADD     R8,R8,#1
        CMP     R8,#2
        MOVEQ   R8,#1
        B       loop_123
skip_155                                                ; Address &144C, referenced once
        CMP     R9,#&9A00
        BNE     skip_116
        SUBS    R8,R8,#1
        MOVEQ   R8,#1
        B       loop_123
skip_116                                                ; Address &1460, referenced twice
        MOV     R0,R9
        Pull    "R1,R2,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_94                                           ; Address &1468, referenced once
        Push    "R14"
loop_29                                                 ; Address &146C, referenced once
        ADR     R0,string_yesno
        MOV     R1,#&12                                 ; =18
        MOV     R2,#3
        BL      subroutine_305
        CMP     R1,#0
        MOVNE   R9,R1
        BNE     skip_113
        CMP     R0,#&59                                 ; ="Y"
        MOVEQ   R0,#0
        MOVNE   R0,#1
        STR     R0,[R12,#568]
        B       loop_29
skip_113                                                ; Address &149C, referenced once
        Pull    "PC"

string_yesno
        DCB     "YN", 0
        ALIGN

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_96                                           ; Address &14A4, referenced twice
        Push    "R0,R14"
        SWI     OS_WriteI+23
        SWI     OS_WriteI+1
        LDR     R0,[R12,#568]
        CMP     R0,#0
        MOVEQ   R0,#3
        MOVNE   R0,#2
        SWI     OS_WriteC
        BL      subroutine_196
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_97                                           ; Address &14CC, referenced 5 times
        Push    "R14"
        SWI     OS_WriteI+23
        SWI     OS_WriteI+1
        BL      subroutine_196
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_98                                           ; Address &14E0, referenced twice
        Push    "R0-R4,R9,R14"
        LDR     R0,[R12,#428]
        CMP     R0,#1
        LDREQ   R0,[R12,#416]
        LDRNE   R0,[R12,#348]
        CMP     R0,#0
        BNE     skip_127
        LDR     R0,[R12,#300]
        MOV     R1,#VduExt_ModeFlags
        SWI     OS_ReadModeVariable
        MOV     R9,R2
        TST     R9,#4
        MOVEQ   R3,#7
        MOVNE   R3,#9
        MOV     R4,#7
        TST     R9,#2
        ADDNE   R3,R3,R3
        ADDNE   R3,R3,#1
        ADDNE   R4,R4,R4
        SWI     OS_WriteI+23
        SWI     OS_WriteI+0
        SWI     OS_WriteI+9
        MOV     R0,R3
        SWI     OS_WriteC
        BL      subroutine_196
        SWI     OS_WriteI+23
        SWI     OS_WriteI+0
        SWI     OS_WriteI+10
        MOV     R0,R4
        SWI     OS_WriteC
        BL      subroutine_196
        BL      subroutine_96
        B       skip_188
skip_127                                                ; Address &1564, referenced once
        BL      subroutine_38
skip_188                                                ; Address &1568, referenced once
        Pull    "R0-R4,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_99                                           ; Address &156C, referenced twice
        Push    "R0-R3,R14"
        ADD     R0,R12,#&0400                           ; =1024
        ADD     R1,R12,#&0A70                           ; =2672
        MOV     R2,#0
loop_41                                                 ; Address &157C, referenced once
        LDR     R3,[R0,R2]
        STR     R3,[R1,R2]
        ADD     R2,R2,#4
        CMP     R2,#&01D0                               ; =464
        BLT     loop_41
        LDR     R0,[R12,#396]
        STR     R0,[R12,#384]
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_102                                          ; Address &159C, referenced 6 times
        Push    "R0-R9,R14"
        MOV     R9,R0
        ADD     R0,R12,#&0400                           ; =1024
        MOV     R1,#&01D0                               ; =464
        BL      subroutine_112
        MOV     R0,R9
        MOV     R1,#4
        ADD     R2,R12,#&0400                           ; =1024
        MOV     R3,#0
        STR     R3,[R12,#396]
        MOV     R5,#0
        MOV     R6,#0
        MOV     R7,#0
        LDRB    R8,[R0,#1]
        CMP     R8,#&FF                                 ; ="ÿ"
        BEQ     skip_101
loop_133                                                ; Address &15DC, referenced 3 times
        LDRB    R8,[R0,#3]
        CMP     R1,R8
        BEQ     skip_101
        LDRB    R4,[R0,R1]
        CMP     R6,#0
        BNE     skip_104
        CMP     R4,#&20                                 ; =" "
        CMPNE   R4,#&2A                                 ; ="*"
        MOVNE   R7,#1
        CMP     R4,#&22                                 ; ="""
        EOREQ   R5,R5,#1
        BEQ     skip_104
        CMP     R5,#1
        BEQ     skip_104
        CMP     R4,#&3A                                 ; =":"
        MOVEQ   R7,#0
        BEQ     skip_104
        CMP     R4,#&2A                                 ; ="*"
        BNE     skip_198
        CMP     R7,#0
        MOVEQ   R6,#1
        BEQ     skip_104
skip_198                                                ; Address &1634, referenced once
        CMP     R4,#&7F                                 ; =127
        BCC     skip_104
        CMP     R4,#&8D                                 ; =""
        BNE     skip_103
        ADD     R8,R1,#3
        LDRB    R9,[R0,#3]
        CMP     R8,R9
        BCS     skip_104
        MOV     R9,R0
        BL      subroutine_104
        BL      subroutine_35
        MOV     R0,R9
        LDR     R8,[R12,#404]
        ADD     R8,R8,R3
        SUB     R8,R8,#1
        CMP     R8,#&0170                               ; =368
        BGT     skip_196
        ADD     R1,R1,#4
        ADD     R8,R12,#0
        LDR     R9,[R12,#404]
loop_113                                                ; Address &1684, referenced once
        SUBS    R9,R9,#1
        BMI     loop_133
        LDRB    R4,[R8,R9]
        STRB    R4,[R2,R3]
        ADD     R3,R3,#1
        B       loop_113
skip_103                                                ; Address &169C, referenced once
        BL      subroutine_105
        LDR     R8,[R12,#396]
        CMN     R8,#1
        BEQ     skip_196
        MOV     R6,R4
        B       loop_133
skip_104                                                ; Address &16B4, referenced 7 times
        MOV     R8,#&0170                               ; =368
        ADD     R8,R8,#1
        CMP     R3,R8
        STRNEB  R4,[R2,R3]
        ADDNE   R1,R1,#1
        ADDNE   R3,R3,#1
        BNE     loop_133
skip_196                                                ; Address &16D0, referenced twice
        MVN     R3,#0
skip_101                                                ; Address &16D4, referenced twice
        STR     R3,[R12,#396]
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_104                                          ; Address &16DC, referenced twice
        Push    "R1-R4,R14"
        ADD     R1,R1,#1
        LDRB    R2,[R0,R1]
        MOV     R3,R2,LSL #2
        AND     R4,R3,#&C0                              ; ="À"
        ADD     R1,R1,#1
        LDRB    R2,[R0,R1]
        EOR     R4,R4,R2
        ADD     R1,R1,#1
        LDRB    R2,[R0,R1]
        EOR     R3,R2,R3,LSL #2
        AND     R3,R3,#&FF                              ; ="ÿ"
        ORR     R0,R4,R3,LSL #8
        Pull    "R1-R4,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_105                                          ; Address &1714, referenced once
        Push    "R5,R6,R9,R14"
        Push    "R0-R3,R7-R12"
        MOV     R14,R13
        LDR     R13,[R12,#728]
        LDR     R5,[R12,#732]
        ADD     R12,R0,R1
        ADD     R12,R12,#1
        Push    "R12,R14"
        MOV     R0,R4
        ADR     R14,return_subroutine_106
        ADD     PC,R5,#&4C                              ; ="L"
return_subroutine_106
        MOV     R5,R12
        MOV     R4,R1
        Pull    "R12,R14"
        MOV     R6,R12
        MOV     R13,R14
        Pull    "R0-R3,R7-R12"
        ADD     R1,R1,#1
        CMP     R5,R6
        ADDNE   R1,R1,#1
        MOV     R9,#&0170                               ; =368
        ADD     R9,R9,#1
loop_51                                                 ; Address &176C, referenced once
        CMP     R3,R9
        MVNEQ   R4,#0
        STREQ   R4,[R12,#396]
        BEQ     skip_173
        LDRB    R5,[R4],#1
        CMP     R5,#&7F                                 ; =127
        STRCCB  R5,[R2,R3]
        ADDCC   R3,R3,#1
        BCC     loop_51
        LDRB    R4,[R4,#0]
        MOV     R4,R4,LSR #5
        AND     R4,R4,#1
skip_173                                                ; Address &179C, referenced once
        Pull    "R5,R6,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_107                                          ; Address &17A0, referenced once
        Push    "R0-R3,R8,R9,R14"
        MOV     R9,R0
        BL      subroutine_301
        MOV     R8,R0
        LDRB    R0,[R9,#3]
        ADD     R0,R9,R0
        MOV     R1,R9
        LDR     R2,[R12,#260]
        SUB     R2,R2,R0
        BL      subroutine_114
        LDR     R0,data_alt2_20202020
        MVN     R1,#0
        LDR     R2,[R12,#584]
        CMP     R2,R8
        STREQ   R1,[R12,#584]
        STREQ   R0,[R12,#516]
        BEQ     skip_76
        LDR     R2,[R12,#588]
        CMP     R2,R8
        STREQ   R1,[R12,#588]
        STREQ   R0,[R12,#520]
skip_76                                                 ; Address &17F4, referenced once
        LDR     R2,[R12,#592]
        CMP     R2,R8
        STREQ   R1,[R12,#592]
        STREQ   R0,[R12,#524]
        LDR     R2,[R12,#596]
        CMP     R2,R8
        STREQ   R1,[R12,#596]
        STREQ   R0,[R12,#528]
        ADD     R0,R12,#&0260                           ; =608
        MOV     R2,#3
loop_125                                                ; Address &181C, referenced once
        LDR     R3,[R0,R2,LSL #2]
        CMP     R3,R8
        STREQ   R1,[R0,R2,LSL #2]
        BEQ     skip_110
        SUBS    R2,R2,#1
        BPL     loop_125
skip_110                                                ; Address &1834, referenced once
        LDR     R0,[R12,#628]
        CMP     R0,R8
        BNE     skip_80
        LDRB    R0,[R9,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        LDREQ   R0,[R12,#624]
        MOVNE   R0,R9
        BLNE    subroutine_301
        STR     R0,[R12,#628]
skip_80                                                 ; Address &1858, referenced once
        LDR     R0,[R12,#604]
        CMP     R0,R8
        LDREQ   R0,[R12,#628]
        STREQ   R0,[R12,#604]
        MOVEQ   R0,#0
        STREQ   R0,[R12,#296]
        BL      subroutine_261
        BL      subroutine_119
        BL      subroutine_134
        Pull    "R0-R3,R8,R9,PC"

data_alt2_20202020
        DCD     &20202020
        
; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_110                                          ; Address &1880, referenced once
        Push    "R0-R4,R7-R9,R14"
        LDR     R9,[R12,#292]
        LDR     R8,[R12,#384]
        ADD     R7,R12,#&0A70                           ; =2672
        CMP     R9,R8
        BCS     skip_90
        ADD     R0,R7,R9
        SUB     R1,R8,R9
        BL      subroutine_112
        STR     R9,[R12,#384]
        LDR     R0,[R12,#356]
        MOV     R1,R11
        MOV     R2,R7
        MOV     R3,R8
        MOV     R4,R9
        BL      subroutine_149
        MOV     R0,#1
        BL      subroutine_157
        BL      subroutine_121
skip_90                                                 ; Address &18D0, referenced once
        Pull    "R0-R4,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_111                                          ; Address &18D4, referenced once
        Push    "R0-R4,R8,R9,R14"
        LDR     R9,[R12,#292]
        LDR     R8,[R12,#384]
        CMP     R9,R8
        BLE     skip_82
        BL      subroutine_138
        B       skip_89
skip_82                                                 ; Address &18F0, referenced once
        CMP     R9,#0
        BEQ     skip_89
        ADD     R0,R12,#&0A70                           ; =2672
        ADD     R0,R0,R9
        SUB     R1,R0,#1
        SUB     R2,R8,R9
        ADD     R2,R2,#1
        BL      subroutine_114
        SUB     R0,R8,#1
        STR     R0,[R12,#384]
        LDR     R0,[R12,#356]
        MOV     R1,R11
        ADD     R2,R12,#&0A70                           ; =2672
        MOV     R3,R8
        SUB     R4,R9,#1
        BL      subroutine_149
        MOV     R0,#1
        BL      subroutine_157
        STR     R4,[R12,#292]
        BL      subroutine_121
skip_89                                                 ; Address &1940, referenced twice
        Pull    "R0-R4,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_127                                          ; Address &1944, not referenced
        Push    "R0,R1,R14"
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#384]
        CMP     R0,R1
        BCS     skip_88
        ADD     R0,R0,#1
        STR     R0,[R12,#292]
        BL      subroutine_111
skip_88                                                 ; Address &1964, referenced once
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_113                                          ; Address &1968, not referenced
        Push    "R0-R9,R14"
        LDR     R9,[R12,#292]
        CMP     R9,#0
        BEQ     skip_87
        LDR     R8,[R12,#384]
        ADD     R7,R12,#&0A70                           ; =2672
        LDR     R6,[R12,#532]
        MOV     R0,R7
        MOV     R1,R9
        BL      subroutine_112
        CMP     R9,R6
        ADDGT   R1,R7,R6
        MOVGT   R3,R6
        MOVLE   R1,R7
        MOVLE   R3,#0
        ADD     R0,R7,R9
        SUBS    R2,R8,R9
        ADDPL   R5,R2,R3
        MOVMI   R5,R3
        BMI     skip_183
        BL      subroutine_114
        ADD     R0,R7,R5
        SUB     R1,R8,R5
        BL      subroutine_112
skip_183                                                ; Address &19C8, referenced once
        STR     R5,[R12,#384]
        MOV     R9,R3
        LDR     R0,[R12,#356]
        MOV     R1,R11
        MOV     R2,R7
        MOV     R3,R8
        MOV     R4,#0
        BL      subroutine_149
        MOV     R0,#1
        BL      subroutine_157
        STR     R9,[R12,#292]
        BL      subroutine_121
skip_87                                                 ; Address &19F8, referenced once
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_115                                          ; Address &19FC, not referenced
        Push    "R0-R4,R14"
        LDR     R1,[R12,#384]
        CMP     R1,#0
        BEQ     skip_84
        ADD     R0,R12,#&0A70                           ; =2672
        BL      subroutine_112
        MOV     R0,#0
        STR     R0,[R12,#384]
        LDR     R0,[R12,#356]
        MOV     R3,R1
        MOV     R1,R11
        ADD     R2,R12,#&0A70                           ; =2672
        MOV     R4,#0
        BL      subroutine_149
        MOV     R0,#1
        BL      subroutine_157
        BL      subroutine_121
skip_84                                                 ; Address &1A40, referenced once
        LDR     R0,[R12,#532]
        STR     R0,[R12,#292]
        Pull    "R0-R4,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_117                                          ; Address &1A4C, referenced once
        Push    "R0,R14"
        LDR     R0,[R12,#600]
        BL      subroutine_277
        MOV     R11,R0
        BL      subroutine_282
        BL      subroutine_224
        Pull    "R0,PC"
code_21                                                 ; Address &1A68, referenced 24 times
        MOV     R9,R1
        MOV     R8,R0
        LDR     R7,[R12,#408]
        MOV     R6,#0
        STR     R6,[R12,#412]
        BL      subroutine_178
        BL      subroutine_135
        CMP     R9,#0
        BEQ     skip_83
        STR     R6,[R12,#532]
        MOV     R11,R9
        BL      subroutine_282
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        MOV     R0,#0
        STR     R0,[R12,#292]
        BL      subroutine_141
        MOV     R6,#1
        MOV     R0,#&1C                                 ; =28
        B       skip_182
skip_83                                                 ; Address &1AB8, referenced once
        MOV     R0,#&0B                                 ; =11
        CMP     R7,#0
        BEQ     skip_182
        BL      subroutine_216
        BL      subroutine_141
        MOV     R6,#1
skip_182                                                ; Address &1AD0, referenced twice
        MOV     R1,R8
        BL      subroutine_294
        CMP     R9,#0
        BEQ     skip_181
        LDR     R0,[R12,#600]
        BL      subroutine_35
        LDR     R0,[R12,#404]
        MOV     R1,#&15                                 ; =21
        MOV     R2,#0
        BL      subroutine_131
skip_181                                                ; Address &1AF8, referenced once
        BL      subroutine_197
loop_39                                                 ; Address &1AFC, referenced once
        BL      subroutine_272
        CMP     R0,#&B300
        BNE     loop_39
        CMP     R6,#0
        BLEQ    subroutine_216
        MOV     R0,#1
        STR     R0,[R12,#408]
        MOV     R0,#0
        STR     R0,[R12,#304]
        B       code_16

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_120                                          ; Address &1B24, referenced once
        Push    "R0-R9,R14"
        MOV     R9,R0
        ADD     R8,R1,R2
        MOV     R0,R1
        LDR     R1,[R12,#320]
        ADD     R7,R1,#5
        BL      subroutine_153
        MOV     R6,R1
        ADD     R3,R1,#6
        MOV     R5,#1
        LDR     R4,[R12,#564]
        LDR     R4,[R4,R9,LSL #2]
        ADD     R4,R4,#6
loop_42                                                 ; Address &1B58, referenced once
        LDRB    R0,[R8],#1
        CMP     R0,#&20                                 ; =" "
        SUBNE   R6,R3,#5
        BNE     skip_86
        CMP     R3,R4
        MOVCS   R5,#1
        BCS     skip_93
skip_86                                                 ; Address &1B74, referenced once
        CMP     R5,#0
        MOVNE   R1,R3
        MOVNE   R2,R9
        BLNE    subroutine_140
        BL      subroutine_188
        MOV     R5,#0
skip_93                                                 ; Address &1B8C, referenced once
        CMP     R3,R7
        ADDNE   R3,R3,#1
        BNE     loop_42
        LDR     R0,[R12,#564]
        STR     R6,[R0,R9,LSL #2]
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_125                                          ; Address &1BA4, referenced 4 times
        Push    "R0-R2,R8,R9,R14"
        MOV     R9,R0
        MOV     R8,R1
        LDR     R0,[R12,#452]
        CMP     R0,#0
        BEQ     skip_73
        ADD     R0,R12,#&0248                           ; =584
        MOV     R1,#3
        MOV     R2,R8
        BL      subroutine_241
        CMN     R0,#1
        BNE     skip_78
        MOV     R0,R2
        BL      subroutine_35
        MOV     R1,#0
        MOV     R2,R9
        MOV     R0,#5
        BL      subroutine_131
        B       skip_71
skip_78                                                 ; Address &1BF0, referenced once
        MOV     R0,R8
        BL      subroutine_42
        MOV     R1,#0
        MOV     R2,R9
        BL      subroutine_140
        ADD     R0,R12,#8
        SWI     OS_Write0
skip_71                                                 ; Address &1C0C, referenced once
        ADD     R0,R12,#&0260                           ; =608
        MOV     R1,#3
        MOV     R2,R8
        BL      subroutine_241
        MOVEQ   R0,#&2E                                 ; ="."
        MOVNE   R0,#&20                                 ; =" "
        SWI     XOS_WriteC
skip_73                                                 ; Address &1C28, referenced once
        Pull    "R0-R2,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_126                                          ; Address &1C2C, referenced twice
        Push    "R0,R1,R6-R9,R14"
        MOV     R9,#0
        MOV     R8,#0
        LDR     R7,[R12,#560]
        LDR     R6,[R12,#324]
        ADD     R6,R6,#1
loop_46                                                 ; Address &1C44, referenced once
        CMP     R8,R6
        BEQ     skip_175
        LDR     R0,[R7,R8,LSL #2]
        CMP     R0,#0
        BEQ     skip_175
        CMP     R0,R9
        BEQ     skip_69
        MOV     R9,R0
        BL      subroutine_301
        CMN     R0,#1
        MOVEQ   R0,#&0A                                 ; =10
        MOV     R1,R0
        MOV     R0,R8
        BL      subroutine_125
skip_69                                                 ; Address &1C7C, referenced once
        ADD     R8,R8,#1
        B       loop_46
skip_175                                                ; Address &1C84, referenced twice
        Pull    "R0,R1,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_131                                          ; Address &1C88, referenced 4 times
        Push    "R0-R2,R14"
        BL      subroutine_140
        LDR     R1,[R12,#404]
        SUBS    R0,R0,R1
        BEQ     skip_70
loop_120                                                ; Address &1C9C, referenced once
        SWI     OS_WriteI+" "
        SUBS    R0,R0,#1
        BNE     loop_120
skip_70                                                 ; Address &1CA8, referenced once
        BL      subroutine_296
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_132                                          ; Address &1CB0, referenced 3 times
        Push    "R0-R9,R14"
        MVN     R9,#0
        MOV     R8,#0
        ADD     R0,R0,#1
loop_116                                                ; Address &1CC0, referenced once
        ADD     R9,R9,#1
        CMP     R9,R3
        MOVEQ   R7,R0
        LDRB    R4,[R0],#1
        CMP     R4,#0
        BEQ     skip_79
        MOV     R6,#1
loop_52                                                 ; Address &1CDC, referenced once
        LDRB    R4,[R0],#1
        CMP     R4,#0
        ADDNE   R6,R6,#1
        BNE     loop_52
        CMP     R6,R8
        MOVCS   R8,R6
        CMP     R9,R3
        MOVEQ   R5,R6
        B       loop_116
skip_79                                                 ; Address &1D00, referenced once
        BL      subroutine_140
        MOV     R0,R7
        SWI     OS_Write0
        MOV     R0,#0
        SUB     R1,R8,R5
        BL      message_print
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_135                                          ; Address &1D1C, referenced 5 times
        Push    "R0-R2,R14"
        LDR     R0,[R12,#556]
        CMP     R0,#1
        BEQ     skip_170
        BL      subroutine_258
        LDR     R0,[R12,#628]
        MOV     R1,#0
        MVN     R2,#0
        BL      subroutine_148
        BL      subroutine_1
skip_170                                                ; Address &1D44, referenced once
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_136                                          ; Address &1D48, referenced 4 times
        Push    "R0,R1,R6-R9,R14"
        LDR     R9,[R12,#264]
        LDR     R8,[R12,#260]
        SUB     R8,R8,#2
        LDR     R7,[R12,#480]
        LDR     R6,[R12,#484]
        CMP     R7,R9
        CMPEQ   R6,R8
        BEQ     skip_165
        MOV     R0,#&2E                                 ; ="."
        MOV     R1,#9
        BL      message_print
        CMP     R7,R9
        BNE     skip_63
        SWI     OS_WriteS
        DCB     "top", 0
        ALIGN
code_15                                                 ; Address &1D88, not referenced
        B       skip_99
skip_63                                                 ; Address &1D8C, referenced once
        MOV     R0,R7
        BL      subroutine_301
        BL      subroutine_35
        BL      subroutine_296
skip_99                                                 ; Address &1D9C, referenced once
        LDRB    R0,[R7,#3]
        ADD     R0,R7,R0
        CMP     R0,R6
        BNE     skip_215
        SWI     OS_WriteS
        DCB     " only", 0
        ALIGN
code                                                    ; Address &1DB8, not referenced
        B       skip_165
skip_215                                                ; Address &1DBC, referenced once
        SWI     OS_WriteS
        DCB     " to ", 0
        ALIGN
code_11                                                 ; Address &1DC8, not referenced
        LDRB    R0,[R6,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BNE     skip_166
        SWI     OS_WriteS
        DCB     "end", 0
        ALIGN
code_6                                                  ; Address &1DDC, not referenced
        B       skip_165
skip_166                                                ; Address &1DE0, referenced once
        MOV     R0,R6
        BL      subroutine_301
        BL      subroutine_192
        MOV     R0,R1
        BL      subroutine_301
        BL      subroutine_35
        BL      subroutine_296
skip_165                                                ; Address &1DFC, referenced 3 times
        Pull    "R0,R1,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_141                                          ; Address &1E00, referenced 7 times
        Push    "R0-R2,R14"
        MOV     R0,#0
        STR     R0,[R12,#428]
        LDR     R0,[R12,#624]
        MOV     R1,#0
        MVN     R2,#0
        BL      subroutine_148
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_143                                          ; Address &1E20, referenced 12 times
        Push    "R0-R3,R9,R14"
        BL      subroutine_134
        BL      subroutine_103
        BL      subroutine_123
        BL      subroutine_69
        BL      subroutine_91
        LDR     R0,[R12,#312]
        SUB     R1,R0,#&18                              ; =24
        LDR     R2,[R12,#400]
        SUBS    R3,R1,R2
        BLE     skip_164
        ADD     R0,R2,#&18                              ; =24
        BL      subroutine_202
        MOV     R9,R0
        MOV     R0,#0
        MOV     R1,R3
        BL      message_print
        SWI     OS_WriteI+13
        BL      subroutine_20
        MOV     R0,R9
        BL      subroutine_63
skip_164                                                ; Address &1E74, referenced once
        ADD     R0,R12,#&07D0                           ; =2000
        LDR     R1,[R12,#316]
        SUB     R1,R1,#1
        LDR     R2,[R12,#320]
        STR     R2,[R0,R1,LSL #2]
        Pull    "R0-R3,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_146                                          ; Address &1E8C, referenced once
        Push    "R0-R4,R8,R9,R14"
        MOV     R9,R1
        MOV     R8,R0
        LDR     R1,[R12,#632]
        BL      subroutine_125
        LDR     R0,[R12,#636]
        CMP     R0,R1
        ADDNE   R2,R12,#&0400                           ; =1024
        LDRNE   R3,[R12,#396]
        BNE     skip_163
        ADD     R2,R12,#&0A70                           ; =2672
        LDR     R0,[R12,#320]
        LDR     R1,[R12,#448]
        BL      subroutine_164
        MOV     R3,R0
        LDR     R0,[R12,#344]
        LDR     R1,[R12,#332]
        CMP     R0,R1
        STREQ   R8,[R12,#356]
skip_163                                                ; Address &1ED8, referenced once
        MOV     R4,#0
        MOV     R1,R9
        MOV     R0,R8
        BL      subroutine_149
        Pull    "R0-R4,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_148                                          ; Address &1EEC, referenced 18 times
        Push    "R0-R9,R14"
        MOV     R7,R0
        MOV     R8,R1
        MOV     R9,R2
        BL      subroutine_277
        MOV     R6,R0
loop_124                                                ; Address &1F04, referenced once
        MOV     R0,R6
        BL      subroutine_310
        LDR     R1,[R12,#632]
        LDR     R2,[R12,#636]
        CMP     R1,R2
        LDREQ   R0,[R12,#448]
        LDRNE   R0,[R12,#396]
        BLNE    subroutine_46
        MOV     R5,R0
        LDR     R1,[R12,#324]
        ADD     R1,R1,#1
        SUB     R1,R1,R8
        CMP     R5,R1
        BGT     skip_64
        MOV     R0,R8
        MOV     R1,R6
        BL      subroutine_146
        CMP     R9,#1
        BEQ     skip_107
        ADD     R8,R8,R5
        LDR     R0,[R12,#264]
        LDRB    R0,[R0,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BEQ     skip_64
        LDRB    R0,[R6,#3]
        ADD     R6,R6,R0
        LDRB    R0,[R6,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BNE     loop_124
skip_64                                                 ; Address &1F78, referenced twice
        MOV     R0,R8
        LDR     R3,[R12,#324]
        LDR     R1,[R12,#560]
        MOV     R2,#0
loop_71                                                 ; Address &1F88, referenced once
        CMP     R3,R0
        BLT     skip_107
        BL      subroutine_36
        STR     R2,[R1,R0,LSL #2]
        ADD     R0,R0,#1
        B       loop_71
skip_107                                                ; Address &1FA0, referenced twice
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_149                                          ; Address &1FA4, referenced 10 times
        Push    "R0-R9,R14"
        MOV     R9,R0
        MOV     R8,R1
        MOV     R7,R2
        MOV     R0,R3
        BL      subroutine_46
        SUB     R6,R0,#1
        LDR     R5,[R12,#452]
        MOV     R0,R4
        LDR     R1,[R12,#320]
        BL      subroutine_153
        MOV     R1,R4
        MOV     R4,R0
        LDR     R3,[R12,#560]
loop_111                                                ; Address &1FDC, referenced once
        ADD     R0,R9,R4
        MOV     R2,R7
        STR     R8,[R3,R0,LSL #2]
        CMP     R5,#0
        BLNE    subroutine_120
        CMP     R4,R6
        BEQ     skip_50
        ADD     R4,R4,#1
        CMP     R5,#0
        BEQ     code_23
        MOV     R1,#0
        ADD     R2,R9,R4
        BL      subroutine_140
        SWI     OS_WriteS
        DCB     "      ", 0
        ALIGN
code_23                                                 ; Address &201C, referenced once
        MOV     R0,R4
        LDR     R1,[R12,#320]
        BL      subroutine_164
        MOV     R1,R0
        B       loop_111
skip_50                                                 ; Address &2030, referenced once
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_153                                          ; Address &2034, referenced 23 times
        Push    "R2,R3,R14"
        MOV     R3,#1
loop_80                                                 ; Address &203C, referenced once
        CMP     R1,R0
        MOVCC   R1,R1,LSL #1
        MOVCC   R3,R3,LSL #1
        BCC     loop_80
        MOV     R2,#0
loop_70                                                 ; Address &2050, referenced once
        CMP     R0,R1
        SUBCS   R0,R0,R1
        ADDCS   R2,R2,R3
        MOVS    R3,R3,LSR #1
        MOVNE   R1,R1,LSR #1
        BNE     loop_70
        MOV     R1,R0
        MOV     R0,R2
        Pull    "R2,R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_156                                          ; Address &2074, referenced 4 times
        Push    "R0-R2,R9,R14"
        LDR     R0,[R12,#556]
        CMP     R0,#1
        BEQ     skip_41
        BL      subroutine_122
        MOV     R9,R0
        SWI     OS_WriteI+26
        LDR     R0,[R12,#332]
        CMP     R0,#0
        LDREQ   R0,[R12,#328]
        LDRNE   R0,[R12,#336]
        SUB     R2,R0,#1
        MOV     R1,#0
        BL      subroutine_140
        BL      subroutine_20
        LDR     R0,[R12,#312]
loop_109                                                ; Address &20B4, referenced once
        SWI     OS_WriteI+" "
        SUBS    R0,R0,#1
        BNE     loop_109
        BL      subroutine_20
        ADD     R1,R12,#&07D0                           ; =2000
        LDR     R0,[R12,#320]
        STR     R0,[R1,R2,LSL #2]
        MOV     R0,R9
        BL      subroutine_63
skip_41                                                 ; Address &20D8, referenced once
        Pull    "R0-R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_157                                          ; Address &20DC, referenced 9 times
        Push    "R0-R9,R14"
        LDR     R5,[R12,#556]
        CMP     R5,#1
        BEQ     skip_38
        MOV     R9,R2
        MOV     R8,R1
        MOV     R7,R0
        ADD     R6,R12,#&05D0                           ; =1488
        LDR     R5,[R12,#340]
        ADD     R6,R6,R5,LSL #2
        MOV     R0,R6
        LDR     R1,[R12,#336]
        SUB     R1,R1,#2
        MOV     R2,R11
        BL      subroutine_241
        CMN     R0,#1
        BEQ     skip_38
        BL      subroutine_258
        CMP     R7,#0
        BNE     skip_237
        MOV     R5,R0
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#320]
        ADD     R3,R12,#&0A70                           ; =2672
        LDRB    R3,[R3,R0]
        BL      subroutine_153
        ADD     R1,R1,#6
        ADD     R2,R5,R0
        BL      subroutine_140
        MOV     R0,R3
        BL      subroutine_188
        MOV     R0,R5
        BL      subroutine_290
        B       skip_239
skip_237                                                ; Address &2164, referenced once
        CMP     R7,#1
        BNE     skip_40
        MOV     R1,R8
        MOV     R2,R9
        BL      subroutine_149
        B       skip_239
skip_40                                                 ; Address &217C, referenced once
        MOV     R1,R0
        LDR     R0,[R12,#600]
        MVN     R2,#0
        BL      subroutine_148
skip_239                                                ; Address &218C, referenced twice
        BL      subroutine_1
skip_38                                                 ; Address &2190, referenced twice
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_159                                          ; Address &2194, referenced once
        Push    "R1,R2,R14"
        BL      subroutine_178
        MOV     R0,#&37                                 ; ="7"
        MOV     R1,#&38                                 ; ="8"
        BL      subroutine_294
        MOV     R1,#&12                                 ; =18
        MOV     R2,#2
        BL      subroutine_140
        LDR     R0,[R12,#360]
        BL      subroutine_35
        BL      subroutine_296
        MOV     R2,#3
        BL      subroutine_140
        LDR     R0,[R12,#536]
        CMP     R0,#0
        MOVEQ   R0,#&4E                                 ; ="N"
        MOVNE   R0,#&59                                 ; ="Y"
        SWI     OS_WriteC
        MOV     R2,#5
        BL      subroutine_140
        LDR     R0,[R12,#540]
        CMP     R0,#0
        MOVEQ   R0,#&4F                                 ; ="O"
        MOVNE   R0,#&49                                 ; ="I"
        SWI     OS_WriteC
loop_72                                                 ; Address &21F8, referenced once
        BL      subroutine_163
        BL      subroutine_190
        LDR     R1,[R12,#360]
        CMN     R1,#1
        BNE     skip_151
        MOV     R0,#&3D                                 ; ="="
loop_54                                                 ; Address &2210, referenced once
        BL      subroutine_52
        BL      subroutine_197
        B       loop_72
skip_151                                                ; Address &221C, referenced once
        CMP     R1,#&40                                 ; ="@"
        MOVCS   R0,#&3E                                 ; =">"
        BCS     loop_54
        Pull    "R1,R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_163                                          ; Address &222C, referenced once
        Push    "R1,R2,R8,R9,R14"
        MOV     R8,#1
loop_66                                                 ; Address &2234, referenced twice
        CMP     R8,#1
        BLEQ    subroutine_168
        CMP     R8,#2
        BLEQ    subroutine_169
        CMP     R8,#3
        BLEQ    subroutine_172
        CMP     R9,#&B800
        BNE     skip_37
        CMP     R8,#3
        BNE     skip_149
        B       skip_122
skip_37                                                 ; Address &2260, referenced once
        CMP     R9,#&8A00
        BNE     skip_121
skip_149                                                ; Address &2268, referenced once
        ADD     R8,R8,#1
        CMP     R8,#4
        MOVEQ   R8,#1
        B       loop_66
skip_121                                                ; Address &2278, referenced once
        CMP     R9,#&9A00
        BNE     skip_122
        SUBS    R8,R8,#1
        MOVEQ   R8,#3
        B       loop_66
skip_122                                                ; Address &228C, referenced twice
        MOV     R0,R9
        Pull    "R1,R2,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_168                                          ; Address &2294, referenced once
        Push    "R14"
        LDR     R0,[R12,#360]
        BL      subroutine_198
        MOV     R0,#2
        MOV     R1,#&12                                 ; =18
        MOV     R2,#2
        BL      subroutine_302
        STR     R0,[R12,#360]
        MOV     R9,R1
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_169                                          ; Address &22BC, referenced once
        Push    "R14"
loop_3                                                  ; Address &22C0, referenced once
        ADR     R0,string_yn
        MOV     R1,#&12                                 ; =18
        MOV     R2,#3
        BL      subroutine_305
        CMP     R1,#0
        MOVNE   R9,R1
        BNE     skip_30
        CMP     R0,#&59                                 ; ="Y"
        MOVEQ   R0,#1
        MOVNE   R0,#0
        STRNE   R0,[R12,#532]
        STR     R0,[R12,#536]
        B       loop_3
skip_30                                                 ; Address &22F4, referenced once
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_172                                          ; Address &22F8, referenced once
        Push    "R14"
loop_79                                                 ; Address &22FC, referenced once
        ADR     R0,string_io
        MOV     R1,#&12                                 ; =18
        MOV     R2,#5
        BL      subroutine_305
        CMP     R1,#0
        MOVNE   R9,R1
        BNE     skip_144
        CMP     R0,#&49                                 ; ="I"
        MOVEQ   R0,#1
        MOVNE   R0,#0
        STR     R0,[R12,#540]
        STR     R0,[R12,#348]
        STR     R0,[R12,#416]
        B       loop_79
skip_144                                                ; Address &2334, referenced once
        Pull    "PC"

string_yn                                               ; Address &2338, referenced once
        DCB     "YN", 0
string_io                                               ; Address &233B, referenced once
        DCB     "IO", 0
        ALIGN
        
        MACRO
        CallTableEntry $num, $fn
        DCD     $num                                    ; Flags maybe?
        LCLS    routine
      [ "$fn"="None"
routine SETS    "call_return"
      |
routine SETS    "$fn"      
      ]
        DCD     $routine - call_return - 4
        MEND
call_table
        CallTableEntry &00000000, None
        CallTableEntry &0000000E, subroutine_263
        CallTableEntry &0000003E, subroutine_240
        CallTableEntry &0000000E, subroutine_254
        CallTableEntry &0000001E, subroutine_210
        CallTableEntry &0000002E, subroutine_252
        CallTableEntry &00000000, subroutine_242
        CallTableEntry &0000000E, subroutine_199
        CallTableEntry &00000027, subroutine_250
        CallTableEntry &0000003E, subroutine_245
        CallTableEntry &00000000, subroutine_185
        CallTableEntry &00000000, subroutine_84
        CallTableEntry &00000004, subroutine_138
        CallTableEntry &00000004, subroutine_147
        CallTableEntry &00000004, subroutine_133
        CallTableEntry &00000004, subroutine_158
        CallTableEntry &00000000, None
        CallTableEntry &00000026, subroutine_257
        CallTableEntry &0000003E, subroutine_203
        CallTableEntry &0000000E, subroutine_246
        CallTableEntry &0000000A, subroutine_219
        CallTableEntry &0000000E, subroutine_209
        CallTableEntry &0000001E, subroutine_226
        CallTableEntry &00000014, subroutine_206
        CallTableEntry &00000026, subroutine_251
        CallTableEntry &0000003E, subroutine_243
        CallTableEntry &00000000, subroutine_31
        CallTableEntry &00000000, None
        CallTableEntry &00000004, subroutine_144
        CallTableEntry &00000004, subroutine_150
        CallTableEntry &0000001F, subroutine_205
        CallTableEntry &0000001F, subroutine_207
        CallTableEntry &00000000, None
        CallTableEntry &00000027, subroutine_236
        CallTableEntry &00000014, subroutine_268
        CallTableEntry &00000000, None
        CallTableEntry &00000016, subroutine_318
        CallTableEntry &0000002E, subroutine_227
        CallTableEntry &0000000E, subroutine_319
        CallTableEntry &00000014, subroutine_248
        CallTableEntry &00000000, subroutine_220
        CallTableEntry &0000001E, subroutine_233
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000004, subroutine_154
        CallTableEntry &00000004, subroutine_137
        CallTableEntry &0000001F, subroutine_214
        CallTableEntry &0000001F, subroutine_271
        CallTableEntry &00000000, subroutine_111
        CallTableEntry &00000000, subroutine_127
        CallTableEntry &00000007, subroutine_274
        CallTableEntry &00000004, None
        CallTableEntry &00000004, subroutine_264
        CallTableEntry &00000004, subroutine_170
        CallTableEntry &0000001D, subroutine_124
        CallTableEntry &0000001D, subroutine_155
        CallTableEntry &00000004, subroutine_67
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, subroutine_265
        CallTableEntry &00000000, subroutine_110
        CallTableEntry &00000014, subroutine_215
        CallTableEntry &00000000, subroutine_235
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000005, subroutine_275
        CallTableEntry &00000000, subroutine_113
        CallTableEntry &0000001E, subroutine_221
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &0000003E, subroutine_231
        CallTableEntry &00000000, subroutine_115
        CallTableEntry &0000001E, subroutine_222
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        CallTableEntry &00000000, None
        ASSERT  (. - call_table) = 128 * 8
        
; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_178                                          ; Address &2740, referenced 15 times
        Push    "R0,R1,R14"
        SWI     OS_WriteI+28
        SWI     OS_WriteI+0
        LDR     R0,[R12,#324]
        LDR     R1,[R12,#344]
        ADD     R0,R0,R1
        SWI     OS_WriteC
        LDR     R0,[R12,#320]
        ADD     R0,R0,#5
        SWI     OS_WriteC
        MOV     R0,R1
        SWI     OS_WriteC
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_179                                          ; Address &2774, referenced once
        Push    "R0-R3,R8,R9,R14"
        MOV     R9,R0
        CMP     R9,#&20                                 ; =" "
        BCC     skip_17
        CMP     R9,#&8000
        BCC     skip_140
        BL      subroutine_283
        MOV     R8,R0
        TST     R8,#4
        BLNE    subroutine_83
        TST     R8,#1
        BEQ     skip_258
        BL      subroutine_195
        CMP     R0,#0
        BNE     skip_258
        BL      subroutine_295
        BL      subroutine_281
        B       skip_10
skip_258                                                ; Address &27BC, referenced twice
        TST     R8,#2
        MOV     R1,#1
        STRNE   R1,[R12,#408]
        TST     R8,#&20
        LDRNE   R0,[R12,#556]
        CMPNE   R0,#1
        STRNE   R1,[R12,#412]
        ADR     R14,call_return
        SUB     R9,R9,#&8000
        MOV     R9,R9,LSR #8
        ADRL    R1,call_table
        ADD     R1,R1,R9,LSL #3                         ; Offset of routine
        LDR     R1,[R1,#4]
        ADD     PC,PC,R1
call_return
        TST     R8,#&10                                 ; =16
        BEQ     skip_10
        ADD     R0,R12,#&0A70                           ; =2672
        LDR     R1,[R12,#384]
        BL      subroutine_193
        CMN     R0,#1
        MOVEQ   R0,#0
        STREQ   R0,[R12,#532]
        B       skip_10
skip_17                                                 ; Address &281C, referenced once
        BL      subroutine_61
        B       skip_10
skip_140                                                ; Address &2824, referenced once
        BL      subroutine_15
skip_10                                                 ; Address &2828, referenced 4 times
        Pull    "R0-R3,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_186                                          ; Address &282C, referenced twice
        Push    "R0-R2,R9,R14"
        LDR     R0,[R12,#560]
        LDR     R1,[R12,#324]
        LDR     R0,[R0,R1,LSL #2]
        CMP     R0,R11
        BLEQ    subroutine_201
        LDR     R9,[R12,#384]
        LDR     R0,[R12,#448]
        ADD     R0,R0,#1
        STR     R0,[R12,#448]
        LDR     R1,[R12,#320]
        BL      subroutine_164
        STR     R0,[R12,#384]
        LDR     R0,[R12,#600]
        LDR     R1,[R12,#356]
        MVN     R2,#0
        BL      subroutine_148
        MOV     R0,#2
        BL      subroutine_157
        STR     R9,[R12,#384]
        Pull    "R0-R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_188                                          ; Address &2880, referenced 7 times
        Push    "R0,R1,R14"
        LDR     R1,[R12,#452]
        CMP     R1,#0
        BEQ     skip_132
        CMP     R0,#&20                                 ; =" "
        BLT     skip_138
        CMP     R0,#&7F                                 ; =127
        BEQ     skip_138
        LDR     R1,[R12,#300]
        CMP     R1,#7
        BNE     skip_14
        CMP     R0,#&8D                                 ; =""
        CMPNE   R0,#&FF                                 ; ="ÿ"
        BNE     skip_14
skip_138                                                ; Address &28B8, referenced twice
        MOV     R0,#&20                                 ; =" "
skip_14                                                 ; Address &28BC, referenced twice
        SWI     OS_WriteC
skip_132                                                ; Address &28C0, referenced once
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_191                                          ; Address &28C4, referenced once
        Push    "R0-R2,R14"
        BL      subroutine_180
        ADD     R0,R12,#&0A30                           ; =2608
        ADD     R1,R12,#&0C40                           ; =3136
        LDR     R2,[R12,#364]
        STR     R2,[R12,#284]
        BL      subroutine_114
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_192                                          ; Address &28E4, referenced 15 times
        Push    "R2,R9,R14"
        MOVS    R9,R0
        MOVMI   R9,#&FF00
        MOV     R1,#0
        LDR     R2,[R12,#264]
loop_83                                                 ; Address &28F8, referenced once
        MOV     R0,R2
        BL      subroutine_301
        CMN     R0,#1
        MOVEQ   R0,#0
        BEQ     skip_136
        CMP     R0,R9
        MOVEQ   R0,R2
        MOVGT   R0,#0
        BGE     skip_136
        MOV     R1,R2
        LDRB    R0,[R2,#3]
        ADD     R2,R2,R0
        B       loop_83
skip_136                                                ; Address &292C, referenced twice
        Pull    "R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_194                                          ; Address &2930, referenced twice
        Push    "R1-R9,R14"
        MOV     R9,R0
        LDR     R8,[R12,#456]
        LDR     R7,[R12,#460]
        LDR     R6,[R12,#472]
        LDR     R5,[R12,#476]
        LDR     R4,[R12,#464]
        LDR     R3,[R12,#468]
        MOV     R2,R6
        CMP     R2,R5
        BEQ     skip_157
loop_22                                                 ; Address &295C, referenced once
        CMP     R2,R5
        BCS     skip_7
        MOV     R0,R2
        BL      subroutine_301
        CMP     R0,R9
        LDRNEB  R1,[R2,#3]
        ADDNE   R2,R2,R1
        ADDNE   R8,R8,R7
        BNE     loop_22
        MOV     R0,R8
        B       skip_157
skip_7                                                  ; Address &2988, referenced once
        CMP     R9,R0
        BLE     skip_23
        CMP     R5,R3
        MOVCC   R0,R9
        MVNCS   R0,#0
        B       skip_157
skip_23                                                 ; Address &29A0, referenced once
        MOV     R0,R6
        BL      subroutine_301
        CMP     R9,R0
        MVNCS   R0,#0
        BCS     skip_157
        CMP     R6,R4
        MOVGT   R0,R9
        MVNLE   R0,#0
skip_157                                                ; Address &29C0, referenced 4 times
        Pull    "R1-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_196                                          ; Address &29C4, referenced 14 times
        Push    "R0,R14"
        MOV     R0,#9
loop_104                                                ; Address &29CC, referenced once
        SWI     OS_WriteI+0
        SUBS    R0,R0,#1
        BNE     loop_104
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_197                                          ; Address &29DC, referenced 6 times
        Push    "R0-R2,R14"
        MOV     R0,#OsByte_FlushBuffer
        MOV     R1,#0
        STR     R1,[R12,#444]
        BL      do_osbyte_y0
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_199                                          ; Address &29F4, not referenced
        Push    "R0-R2,R6-R9,R14"
        MOV     R9,R11
        LDR     R8,[R12,#448]
        LDR     R0,[R12,#376]
        BL      subroutine_75
        MOV     R1,R8
        BL      subroutine_68
        BL      subroutine_269
        LDR     R6,[R12,#480]
        BL      subroutine_28
        MOV     R7,#0
        MOV     R0,#&16                                 ; =22
        MOV     R1,#&14                                 ; =20
        BL      subroutine_294
        BL      subroutine_136
loop_119                                                ; Address &2A30, referenced twice
        MOV     R0,#&1F                                 ; =31
        MOV     R1,#0
        MOV     R2,#4
        BL      subroutine_312
        CMP     R0,#&8A00
        CMPNE   R0,#&9A00
        BEQ     loop_119
        CMP     R0,#&CC00
        CMPNE   R0,#&B800
        BNE     skip_5
        LDR     R0,[R12,#284]
        CMP     R0,#0
        MOVEQ   R0,#&17                                 ; =23
        BEQ     skip_27
        BL      subroutine_190
        BL      subroutine_16
        BL      subroutine_18
loop_82                                                 ; Address &2A74, referenced once
        MOV     R0,R6
        BL      subroutine_9
        ORRS    R7,R7,R0
        BNE     skip_3
        MOV     R0,#&15                                 ; =21
skip_27                                                 ; Address &2A88, referenced once
        BL      subroutine_52
        B       loop_119
skip_3                                                  ; Address &2A90, referenced once
        BL      subroutine_10
        CMP     R0,#&9700
        BNE     skip_5
        BL      subroutine_24
        MOV     R6,R1
        B       loop_82
skip_5                                                  ; Address &2AA8, referenced twice
        CMP     R11,R9
        BNE     skip_28
        LDR     R0,[R12,#448]
        CMP     R0,R8
        BLGT    subroutine_216
skip_28                                                 ; Address &2ABC, referenced once
        Pull    "R0-R2,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_203                                          ; Address &2AC0, not referenced
        Push    "R0-R3,R14"
        LDR     R0,[R12,#376]
        LDR     R1,[R12,#448]
        BL      subroutine_75
        BL      subroutine_68
        BL      subroutine_180
        MOV     R0,#8
        MOV     R1,#9
        BL      subroutine_294
loop_99                                                 ; Address &2AE4, referenced once
        BL      subroutine_79
        CMP     R0,#&CC00
        CMPNE   R0,#&B800
        BNE     skip_6
        LDR     R0,[R12,#264]
        LDRB    R0,[R0,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BEQ     skip_191
        MOV     R0,R1
        BL      subroutine_21
        B       skip_2
skip_191                                                ; Address &2B10, referenced once
        MOV     R0,#&41                                 ; ="A"
        BL      subroutine_74
skip_2                                                  ; Address &2B18, referenced once
        LDR     R0,[R12,#304]
        CMP     R0,#0
        BNE     loop_99
        BL      subroutine_143
skip_6                                                  ; Address &2B28, referenced once
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_206                                          ; Address &2B2C, not referenced
        Push    "R0,R1,R4-R9,R14"
        LDR     R0,[R12,#508]
        CMP     R0,#0
        MOVEQ   R0,#&28                                 ; ="("
        MOVEQ   R1,#0
        BEQ     code_21
        BL      subroutine_28
        BL      subroutine_16
        LDR     R9,[R12,#376]
        LDR     R5,[R12,#448]
        BL      subroutine_75
        MOV     R8,R11
        LDR     R7,[R12,#292]
        ADD     R7,R7,#1
        LDR     R6,[R12,#260]
        SUB     R6,R6,#2
        LDR     R4,[R12,#448]
loop_33                                                 ; Address &2B70, referenced once
        CMP     R8,R6
        BNE     skip_111
        CMP     R4,R5
        CMPEQ   R9,#0
        MOVNE   R0,#1
        STRNE   R0,[R12,#408]
        BLNE    subroutine_216
        SWI     OS_WriteI+7
        MOV     R0,R9
        MOV     R1,R5
        BL      subroutine_68
        B       skip_112
skip_111                                                ; Address &2BA0, referenced once
        MOV     R0,R8
        BL      subroutine_310
        MOV     R0,R7
        BL      subroutine_223
        CMN     R0,#1
        MOVEQ   R7,#0
        LDREQB  R1,[R8,#3]
        ADDEQ   R8,R8,R1
        BEQ     loop_33
        STR     R0,[R12,#292]
        MOV     R0,R9
        MOV     R1,R5
        BL      subroutine_68
        LDR     R0,[R12,#356]
        LDR     R1,[R12,#560]
        LDR     R1,[R1,#0]
        CMP     R0,#0
        CMPEQ   R8,R1
        CMPEQ   R9,#0
        CMPEQ   R4,R5
        BEQ     skip_112
        MOV     R11,R8
        BL      subroutine_282
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        MOV     R0,#1
        STR     R0,[R12,#408]
skip_112                                                ; Address &2C0C, referenced twice
        Pull    "R0,R1,R4-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_209                                          ; Address &2C10, not referenced
        Push    "R0,R14"
        MOV     R0,#&53                                 ; ="S"
        STR     R0,[R12,#512]
        BL      subroutine_311
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_210                                          ; Address &2C24, not referenced
        Push    "R0-R2,R7,R14"
        LDR     R0,[R12,#376]
        LDR     R7,[R12,#448]
        BL      subroutine_75
        MOV     R1,R7
        BL      subroutine_68
        BL      subroutine_269
        MOV     R0,#&13                                 ; =19
        MOV     R1,#&14                                 ; =20
        BL      subroutine_294
        BL      subroutine_136
        BL      subroutine_28
loop_110                                                ; Address &2C54, referenced twice
        MOV     R0,#&1F                                 ; =31
        MOV     R1,#0
        MOV     R2,#4
        BL      subroutine_312
        CMP     R0,#&8A00
        CMPNE   R0,#&9A00
        BEQ     loop_110
        CMP     R0,#&CC00
        CMPNE   R0,#&B800
        BNE     skip_209
        LDR     R0,[R12,#284]
        CMP     R0,#0
        MOVEQ   R0,#&17                                 ; =23
        BEQ     skip_51
        BL      subroutine_190
        BL      subroutine_16
        BL      subroutine_18
        BL      subroutine_232
        CMP     R0,#0
        BNE     skip_208
        MOV     R0,#&15                                 ; =21
skip_51                                                 ; Address &2CA8, referenced once
        BL      subroutine_52
        B       loop_110
skip_208                                                ; Address &2CB0, referenced once
        STR     R1,[R12,#292]
        MOV     R11,R0
        BL      subroutine_282
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        B       skip_462
skip_209                                                ; Address &2CC8, referenced once
        LDR     R0,[R12,#448]
        CMP     R0,R7
        BLGT    subroutine_216
skip_462                                                ; Address &2CD4, referenced once
        Pull    "R0-R2,R7,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_214                                          ; Address &2CD8, not referenced
        Push    "R0,R1,R14"
        LDR     R0,[R12,#376]
        LDR     R1,[R12,#448]
        BL      subroutine_75
        BL      subroutine_68
        BL      subroutine_253
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_215                                          ; Address &2CF4, not referenced
        Push    "R0,R1,R6-R9,R14"
        LDR     R8,[R12,#376]
        LDR     R7,[R12,#448]
        LDR     R1,data_alt3_20202020
        BL      subroutine_195
        CMP     R0,#0
        BNE     skip_212
        LDR     R0,[R12,#516]
        CMP     R0,R1
        LDREQ   R0,[R12,#520]
        CMPEQ   R0,R1
        BEQ     skip_459
        BL      subroutine_121
skip_212                                                ; Address &2D28, referenced once
        BL      subroutine_75
skip_459                                                ; Address &2D2C, referenced once
        LDR     R6,[R12,#448]
        BL      subroutine_244
        LDR     R9,[R12,#516]
        CMP     R9,R1
        CMPNE   R9,#&6C                                 ; ="l"
        CMPNE   R9,#&4C                                 ; ="L"
        BNE     skip_214
        MOV     R0,R8
        MOV     R1,R7
        BL      subroutine_68
        CMP     R8,#0
        CMPEQ   R6,R7
        MOVNE   R0,#1
        STRNE   R0,[R12,#408]
        BLNE    subroutine_216
        B       skip_455
skip_214                                                ; Address &2D6C, referenced once
        MOV     R0,#1
        STR     R0,[R12,#408]
        LDR     R1,[R12,#556]
        CMP     R1,#1
        STRNE   R0,[R12,#412]
        AND     R9,R9,#&DF                              ; ="ß"
        CMP     R9,#&4D                                 ; ="M"
        CMPNE   R9,#&43                                 ; ="C"
        BNE     skip_216
        BL      subroutine_50
        B       skip_455
skip_216                                                ; Address &2D98, referenced once
        CMP     R9,#&44                                 ; ="D"
        BNE     skip_218
        BL      subroutine_29
        B       skip_455
skip_218                                                ; Address &2DA8, referenced once
        BL      subroutine_40
skip_455                                                ; Address &2DAC, referenced 3 times
        Pull    "R0,R1,R6-R9,PC"

data_alt3_20202020
        DCD     &20202020

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_219                                          ; Address &2DB0, referenced once
        BL      subroutine_75
        MOV     R0,#0
        B       loop_47

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_220                                          ; Address &2DC0, not referenced
        Push    "R0,R1,R14"
        MOV     R0,#&0170                               ; =368
        ADD     R0,R0,#1
        BL      subroutine_46
        LDR     R1,[R12,#448]
        CMP     R1,R0
        BEQ     skip_452
        BL      subroutine_186
        B       skip_222
skip_452                                                ; Address &2DE4, referenced once
        SWI     OS_WriteI+7
skip_222                                                ; Address &2DE8, referenced once
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_221                                          ; Address &2DEC, not referenced
        Push    "R0,R1,R14"
        ADD     R1,R12,#&0248                           ; =584
        MOV     R0,#2
        BL      subroutine_314
        CMP     R0,#0
        MOVNE   R0,#&30                                 ; ="0"
        MOVNE   R1,#0
        BNE     code_21
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_222                                          ; Address &2E10, not referenced
        Push    "R0-R2,R14"
        LDR     R0,[R12,#376]
        LDR     R1,[R12,#448]
        BL      subroutine_75
        BL      subroutine_68
        MOV     R0,#&3B                                 ; =";"
        MOV     R1,#&3C                                 ; ="<"
        BL      subroutine_294
        BL      subroutine_180
loop_155                                                ; Address &2E34, referenced twice
        MOV     R0,#5
        MOV     R1,#&0E                                 ; =14
        MOV     R2,#3
        BL      subroutine_302
        CMP     R1,#&8A00
        CMPNE   R1,#&9A00
        BEQ     loop_155
        CMP     R1,#&CC00
        CMPNE   R1,#&B800
        BNE     skip_445
        BL      subroutine_190
        CMN     R0,#1
        BNE     skip_446
        MOV     R0,#&40                                 ; ="@"
loop_85                                                 ; Address &2E6C, referenced once
        BL      subroutine_52
        B       loop_155
skip_446                                                ; Address &2E74, referenced once
        CMP     R0,#&FF00
        MOVCS   R0,#&41                                 ; ="A"
        BCS     loop_85
        BL      subroutine_260
        B       skip_228
skip_445                                                ; Address &2E88, referenced once
        BL      subroutine_216
skip_228                                                ; Address &2E8C, referenced once
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_226                                          ; Address &2E90, not referenced
        Push    "R0,R1,R14"
        ADD     R1,R12,#&0260                           ; =608
        MOV     R0,#3
        BL      subroutine_314
        CMP     R0,#0
        MOVNE   R0,#&29                                 ; =")"
        MOVNE   R1,#0
        BNE     code_21
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_227                                          ; Address &2EB4, not referenced
        Push    "R0-R2,R9,R14"
        LDR     R9,[R12,#300]
        BL      subroutine_75
        SWI     OS_WriteI+22
        SWI     OS_WriteI+28
        MOV     R0,#&1C                                 ; =28
        STR     R0,[R12,#300]
        BL      subroutine_97
        BL      subroutine_249
loop_58                                                 ; Address &2ED8, referenced once
        ADRL    R1,data_3
        LDR     R2,sizeof_data_3
loop_154                                                ; Address &2EE4, referenced once
        LDRB    R0,[R1],#1
        SWI     OS_WriteC
        SUBS    R2,R2,#1
        BNE     loop_154
loop_156                                                ; Address &2EF4, referenced once
        BL      subroutine_272
        CMP     R0,#&B300
        BEQ     skip_436
        CMP     R0,#&20                                 ; =" "
        BNE     loop_156
        ADRL    R1,unknowndata
        LDR     R2,sizeof_unknowndata
loop_162                                                ; Address &2F14, referenced once
        LDRB    R0,[R1],#1
        SWI     OS_WriteC
        SUBS    R2,R2,#1
        BNE     loop_162
loop_12                                                 ; Address &2F24, referenced once
        BL      subroutine_272
        CMP     R0,#&20                                 ; =" "
        BEQ     loop_58
        CMP     R0,#&B300
        BNE     loop_12
skip_436                                                ; Address &2F38, referenced once
        STR     R9,[R12,#300]
        BL      subroutine_267
        BL      subroutine_143
        BL      subroutine_156
        BL      subroutine_216
        Pull    "R0-R2,R9,PC"
sizeof_data_3                                           ; Address &2F50, referenced once
        DCD     data_3_end - data_3
sizeof_unknowndata                                      ; Address &2F54, referenced once
        DCD     unknowndata_end - unknowndata

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_319
        Push    "R0,R1,R8,R9,R14"
        LDR     R9,[R12,#376]
        LDR     R1,[R12,#448]
        BL      subroutine_75
        MOV     R0,R9
        BL      subroutine_68
        MOV     R8,#1
loop_91                                                 ; Address &2F74, referenced once
        CMP     R8,#3
        MOVCS   R8,#1
        CMP     R8,#1
        BNE     skip_431
        BL      subroutine_317
        B       code_9
skip_431                                                ; Address &2F8C, referenced once
        BL      subroutine_3
code_9                                                  ; Address &2F90, referenced twice
        BL      subroutine_272
        CMP     R0,#&B300
        BEQ     skip_429
        CMP     R0,#&9F00
        CMPNE   R0,#&9E00
        ADDEQ   R8,R8,#1
        BEQ     loop_91
        MOV     R1,R0
        BL      subroutine_228
        CMP     R0,#0
        BEQ     code_9
        STR     R1,[R12,#440]
        MOV     R0,#1
        STR     R0,[R12,#444]
skip_429                                                ; Address &2FC8, referenced once
        CMP     R9,#0
        BLNE    subroutine_216
        Pull    "R0,R1,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_231                                          ; Address &2FD4, not referenced
        Push    "R0,R1,R14"
        BL      subroutine_195
        CMP     R0,#0
        BLEQ    subroutine_121
        BL      subroutine_75
        MOV     R0,#&FF00
        BL      subroutine_192
        MOV     R0,R1
        BL      subroutine_55
        LDR     R0,[R12,#260]
        SUB     R0,R0,#2
        BL      subroutine_7
        BL      subroutine_216
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_233                                          ; Address &300C, not referenced
        Push    "R0,R1,R6-R9,R14"
        LDR     R9,[R12,#288]
        MOV     R8,#1
        LDR     R7,[R12,#264]
        MOV     R6,#0
        CMP     R9,#&FF00
        MOVEQ   R0,#&10                                 ; =16
        MOVEQ   R1,#0
        BEQ     code_21
        BL      subroutine_195
        CMP     R0,#0
        BLEQ    subroutine_121
        BL      subroutine_75
        MOV     R0,R7
        BL      subroutine_301
        CMP     R0,#2
        BCS     skip_424
        MOV     R6,#1
        MOV     R0,#&FF00
        SUB     R0,R0,#&0A                              ; =10
        CMP     R9,R0
        BCC     skip_247
        MOV     R0,#1
        STR     R0,[R12,#456]
        STR     R0,[R12,#460]
        STR     R7,[R12,#464]
        LDR     R0,[R12,#260]
        SUB     R0,R0,#2
        STR     R0,[R12,#468]
        STR     R7,[R12,#472]
        STR     R0,[R12,#476]
        BL      subroutine_300
        CMP     R0,#0
        MOVNE   R1,#0
        BNE     code_21
        MOV     R8,#0
        B       skip_425
skip_247                                                ; Address &30A0, referenced once
        BL      subroutine_291
skip_425                                                ; Address &30A4, referenced once
        LDR     R0,[R12,#556]
        CMP     R0,#1
        MOVNE   R0,#1
        STRNE   R0,[R12,#412]
skip_424                                                ; Address &30B4, referenced once
        MOV     R0,R7
        MOV     R1,R8
        BL      subroutine_7
        STR     R8,[R12,#624]
        CMP     R6,#0
        BLEQ    subroutine_49
        Pull    "R0,R1,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_235                                          ; Address &30D0, not referenced
        Push    "R0,R14"
        LDR     R0,[R12,#348]
        EOR     R0,R0,#1
        STR     R0,[R12,#348]
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_236                                          ; Address &30E4, not referenced
        Push    "R0-R3,R5-R9,R14"
        LDRB    R0,[R11,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BNE     skip_253
loop_93                                                 ; Address &30F4, referenced once
        SWI     OS_WriteI+7
        B       skip_262
skip_253                                                ; Address &30FC, referenced once
        LDRB    R0,[R11,#3]
        ADD     R0,R11,R0
        LDRB    R0,[R0,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BEQ     loop_93
        BL      subroutine_75
        ADD     R0,R12,#&0A70                           ; =2672
        LDR     R1,[R12,#384]
        BL      subroutine_151
        MOV     R9,R0
        LDRB    R0,[R11,#3]
        ADD     R0,R11,R0
        BL      subroutine_310
        ADD     R0,R12,#&0400                           ; =1024
        LDR     R1,[R12,#396]
        BL      subroutine_151
        MOVS    R8,R0
        BEQ     skip_257
        ADD     R0,R12,#&0400                           ; =1024
        MOV     R1,R8
        BL      subroutine_193
        MOV     R7,R0
        SUB     R8,R8,R7
        ADD     R6,R9,R8
        CMP     R9,#0
        ADDNE   R6,R6,#1
        MOV     R0,#&0170                               ; =368
        ADD     R0,R0,#1
        CMP     R6,R0
        BLE     skip_256
loop_148                                                ; Address &3174, referenced once
        MOV     R0,#&2A                                 ; ="*"
loop_56                                                 ; Address &3178, referenced once
        MOV     R1,#0
        B       code_21
skip_256                                                ; Address &3180, referenced once
        ADD     R5,R12,#&0A70                           ; =2672
        CMP     R9,#0
        MOVNE   R0,#&3A                                 ; =":"
        STRNEB  R0,[R5,R9]
        ADDNE   R9,R9,#1
        ADD     R0,R12,#&0400                           ; =1024
        ADD     R0,R0,R7
        ADD     R1,R5,R9
        MOV     R2,R8
        BL      subroutine_114
        STR     R6,[R12,#384]
        ADD     R0,R12,#&0A70                           ; =2672
        MOV     R1,R6
        LDR     R2,[R12,#600]
        MOV     R3,R11
        BL      subroutine_306
        CMP     R0,#0
        BEQ     skip_257
        BL      subroutine_282
        CMP     R0,#&0D                                 ; =13
        BEQ     loop_148
        B       loop_56
skip_257                                                ; Address &31D8, referenced twice
        LDRB    R0,[R11,#3]
        ADD     R0,R11,R0
        BL      subroutine_107
        BL      subroutine_282
skip_262                                                ; Address &31E8, referenced once
        Pull    "R0-R3,R5-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_240                                          ; Address &31EC, not referenced
        Push    "R0-R3,R14"
        BL      subroutine_180
        MOV     R0,#7
        MOV     R1,#9
        BL      subroutine_294
        BL      subroutine_87
loop_147                                                ; Address &3204, referenced once
        BL      subroutine_79
        CMP     R0,#&CC00
        CMPNE   R0,#&B800
        BNE     skip_412
        MOV     R0,#&4C                                 ; ="L"
        BL      subroutine_74
        LDR     R0,[R12,#304]
        CMP     R0,#0
        BNE     loop_147
        BL      subroutine_143
skip_412                                                ; Address &322C, referenced once
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_242                                          ; Address &3230, not referenced
        Push    "R0,R1,R14"
        LDR     R0,[R12,#600]
        LDR     R1,[R12,#356]
        BL      subroutine_238
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_243                                          ; Address &3244, not referenced
        Push    "R0,R1,R14"
        LDR     R0,[R12,#380]
        LDR     R1,[R12,#376]
        ORRS    R0,R0,R1
        BEQ     skip_266
        MOV     R0,#&0E                                 ; =14
        MOV     R1,#&0F                                 ; =15
        BL      subroutine_294
loop_163                                                ; Address &3264, referenced once
        BL      subroutine_272
        CMP     R0,#&9900
        BEQ     skip_266
        CMP     R0,#&B300
        BNE     loop_163
        B       skip_407
skip_266                                                ; Address &327C, referenced twice
        BL      subroutine_166
        BL      subroutine_143
skip_407                                                ; Address &3284, referenced once
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_245                                          ; Address &3288, not referenced
        Push    "R0-R2,R14"
        LDR     R0,[R12,#264]
        LDRB    R0,[R0,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BNE     skip_405
        MOV     R0,#0
        LDR     R1,[R12,#264]
        STRB    R0,[R1,#1]
        BL      subroutine_41
        LDR     R0,[R12,#304]
        CMP     R0,#0
        MOVNE   R2,#&FF                                 ; ="ÿ"
        STRNEB  R2,[R1,#1]
        MOVNE   R1,#0
        BNE     code_21
        MOV     R0,#1
        STR     R0,[R12,#548]
        BL      subroutine_281
        BL      subroutine_287
        BL      subroutine_143
        LDR     R0,[R12,#308]
        CMP     R0,#0
        BLNE    subroutine_291
skip_405                                                ; Address &32E4, referenced once
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_246                                          ; Address &32E8, not referenced
        Push    "R0,R1,R8,R9,R14"
        LDR     R9,[R12,#300]
        MOV     R8,#1
loop_11                                                 ; Address &32F4, referenced once
        CMP     R8,#1
        BLEQ    subroutine_159
        CMP     R8,#2
        BLEQ    subroutine_176
        CMP     R8,#3
        BNE     skip_402
        MOV     R0,R9
        BL      subroutine_129
        MOV     R9,R1
skip_402                                                ; Address &3318, referenced once
        CMP     R8,#4
        BLEQ    subroutine_90
        CMP     R0,#&B800
        BNE     skip_401
        CMP     R8,#4
        BEQ     skip_398
        ADD     R8,R8,#1
        B       skip_399
skip_401                                                ; Address &3338, referenced once
        CMP     R0,#&9F00
        SUBEQ   R8,R8,#1
        BEQ     skip_276
        CMP     R0,#&9E00
        BNE     skip_398
        ADD     R8,R8,#1
skip_276                                                ; Address &3350, referenced once
        BL      subroutine_279
skip_399                                                ; Address &3354, referenced once
        CMP     R8,#0
        MOVEQ   R8,#4
        CMP     R8,#5
        MOVEQ   R8,#1
        B       loop_11
skip_398                                                ; Address &3368, referenced twice
        LDR     R0,[R12,#300]
        CMP     R9,R0
        BEQ     skip_397
        STR     R9,[R12,#300]
        BL      subroutine_267
        BL      subroutine_143
        BL      subroutine_156
        LDR     R0,[R12,#384]
        BL      subroutine_46
        STR     R0,[R12,#448]
        BL      subroutine_216
skip_397                                                ; Address &3394, referenced once
        BL      subroutine_92
        Pull    "R0,R1,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_248                                          ; Address &339C, not referenced
        Push    "R0,R1,R5-R9,R14"
        LDR     R0,[R12,#508]
        CMP     R0,#0
        MOVEQ   R0,#&28                                 ; ="("
        MOVEQ   R1,#0
        BEQ     code_21
        BL      subroutine_28
        BL      subroutine_16
        LDR     R9,[R12,#376]
        LDR     R6,[R12,#448]
        BL      subroutine_75
        LDR     R5,[R12,#448]
        MOV     R0,R9
        MOV     R1,R6
        BL      subroutine_68
        MOV     R8,R11
        LDR     R7,[R12,#292]
        SUBS    R7,R7,#1
        BMI     code_20
        MOV     R0,R8
        BL      subroutine_310
loop_143                                                ; Address &33F0, referenced once
        MOV     R0,R7
        BL      subroutine_218
        CMN     R0,#1
        BNE     skip_392
code_20                                                 ; Address &3400, referenced twice
        MOV     R0,R8
        BL      subroutine_301
        BL      subroutine_192
        CMP     R1,#0
        BNE     skip_393
        LDR     R0,[R12,#448]
        CMP     R0,R6
        CMPEQ   R9,#0
        MOVNE   R0,#1
        STRNE   R0,[R12,#408]
        BLNE    subroutine_216
        SWI     OS_WriteI+7
        B       skip_391
skip_393                                                ; Address &3434, referenced once
        MOV     R8,R1
        MOV     R0,R1
        BL      subroutine_310
        LDR     R7,[R12,#396]
        SUBS    R7,R7,#1
        BMI     code_20
        B       loop_143
skip_392                                                ; Address &3450, referenced once
        STR     R0,[R12,#292]
        LDR     R0,[R12,#356]
        LDR     R1,[R12,#560]
        LDR     R1,[R1,#0]
        CMP     R0,#0
        CMPEQ   R8,R1
        CMPEQ   R9,#0
        CMPEQ   R5,R6
        BEQ     skip_391
        MOV     R11,R8
        BL      subroutine_282
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        MOV     R0,#1
        STR     R0,[R12,#408]
skip_391                                                ; Address &348C, referenced twice
        Pull    "R0,R1,R5-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_250                                          ; Address &3490, not referenced
        Push    "R14"
        BL      subroutine_75
        BL      subroutine_291
        BL      subroutine_216
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_251                                          ; Address &34A4, not referenced
        Push    "R0-R3,R14"
        BL      subroutine_195
        CMP     R0,#0
        BLEQ    subroutine_121
        BL      subroutine_75
        MOV     R0,R11
        BL      subroutine_55
        ADD     R0,R12,#&0A70                           ; =2672
        MOV     R2,R1
        LDR     R1,[R12,#384]
        LDRB    R3,[R11,#3]
        ADD     R3,R11,R3
        BL      subroutine_306
        CMP     R0,#0
        MOVNE   R1,#0
        BNE     code_21
        MOV     R11,R3
        BL      subroutine_282
        BL      subroutine_216
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_252                                          ; Address &34F4, not referenced
        Push    "R0,R14"
        MOV     R0,#&41                                 ; ="A"
        STR     R0,[R12,#512]
        BL      subroutine_311
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_254                                          ; Address &3508, not referenced
        Push    "R0-R9,R14"
        LDR     R9,[R12,#376]
        LDR     R1,[R12,#448]
        BL      subroutine_75
        MOV     R0,R9
        BL      subroutine_68
        BL      subroutine_269
        LDR     R8,[R12,#480]
        LDR     R7,[R12,#484]
        BL      subroutine_237
        MOV     R6,R0
        MOV     R0,#&2B                                 ; ="+"
        MOV     R1,#&2C                                 ; =","
        BL      subroutine_294
        BL      subroutine_136
        CMP     R6,#0
        MOVNE   R0,#&2D                                 ; ="-"
        BLNE    subroutine_52
loop_142                                                ; Address &3550, referenced once
        BL      subroutine_109
        CMP     R0,#&CC00
        CMPNE   R0,#&B800
        BNE     skip_384
        BL      subroutine_190
        LDRB    R6,[R7,#1]
        MOV     R0,#&FF                                 ; ="ÿ"
        STRB    R0,[R7,#1]
        MOV     R0,#&0D                                 ; =13
        ADD     R1,R12,#&0C40                           ; =3136
        LDR     R2,[R12,#284]
        STRB    R0,[R1,R2]
        MOV     R0,#OSFile_SaveStamp                    ; =10
        ADD     R1,R12,#&0C40                           ; =3136
        LDR     R2,indirect_data
        MOV     R3,#0
        MOV     R4,R8
        ADD     R5,R7,#2
        SWI     XOS_File
        ADDVS   R1,R12,#&0C40                           ; =3136
        LDRVS   R2,[R12,#284]
        MOVVS   R3,#&20                                 ; =" "
        STRVSB  R3,[R1,R2]
        STRB    R6,[R7,#1]
        BVC     skip_385
        BL      subroutine_70
        B       loop_142
skip_385                                                ; Address &35BC, referenced once
        LDR     R0,[R12,#264]
        LDR     R1,[R12,#260]
        SUB     R1,R1,#2
        CMP     R8,R0
        CMPEQ   R7,R1
        BNE     skip_384
        MOV     R0,#OSFile_ReadInfo
        ADD     R1,R12,#&0C40                           ; =3136
        SWI     XOS_File
        MVNVS   R0,#0
        MOVVC   R0,R2
        MOVVC   R1,R3
        BL      subroutine_116
        ADD     R0,R12,#&0C40                           ; =3136
        LDR     R1,[R12,#284]
        MOV     R2,#&20                                 ; =" "
        STRB    R2,[R0,R1]
        ADD     R1,R12,#&09D0                           ; =2512
        MOV     R2,#&1F                                 ; =31
        BL      subroutine_114
        LDR     R0,[R12,#284]
        STR     R0,[R12,#400]
        MOV     R0,#0
        STR     R0,[R12,#380]
        BL      subroutine_143
skip_384                                                ; Address &3620, referenced twice
        CMP     R9,#0
        BLNE    subroutine_216
        Pull    "R0-R9,PC"
indirect_data                                           ; Address &362C, referenced once
        DCD     &FFB

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_318
        Push    "R0,R14"
        BL      subroutine_75
        LDR     R0,[R12,#556]
        CMP     R0,#1
        BNE     skip_381
        BL      subroutine_27
        B       skip_301
skip_381                                                ; Address &364C, referenced once
        BL      subroutine_22
skip_301                                                ; Address &3650, referenced once
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_257                                          ; Address &3654, not referenced
        Push    "R0-R3,R6-R9,R14"
        BL      subroutine_247
        MOV     R6,#0
        ADD     R0,R12,#&0A70                           ; =2672
        LDR     R1,[R12,#384]
        BL      subroutine_151
        MOV     R9,R0
        LDR     R8,[R12,#292]
        CMP     R8,#0
        BNE     skip_303
loop_28                                                 ; Address &367C, referenced once
        SWI     OS_WriteI+7
        B       skip_367
skip_303                                                ; Address &3684, referenced once
        CMP     R8,R9
        BCS     loop_28
        LDR     R0,[R12,#288]
        CMP     R0,#&FF00
        BNE     skip_375
        MOV     R0,#&10                                 ; =16
loop_19                                                 ; Address &369C, referenced twice
        MOV     R1,#0
        B       code_21
skip_375                                                ; Address &36A4, referenced once
        MOV     R0,R11
        BL      subroutine_53
        MOV     R7,R1
        ORR     R6,R6,R0
        MOV     R0,R7
        TST     R6,#1
        BEQ     skip_374
        BL      subroutine_62
        B       skip_373
skip_374                                                ; Address &36C8, referenced once
        BL      subroutine_65
skip_373                                                ; Address &36CC, referenced once
        ORR     R6,R6,R1
        LDRB    R1,[R11,#1]
        CMP     R1,#&FF                                 ; ="ÿ"
        MOVEQ   R1,#0
        LDRNEB  R1,[R11,#3]
        SUB     R0,R0,R1
        LDR     R1,[R12,#272]
        CMP     R0,R1
        MOVGT   R0,#&0C                                 ; =12
        BGT     loop_19
        MOV     R0,R6
        MOV     R1,R7
        TST     R6,#1
        BEQ     skip_306
        BL      subroutine_32
        ORR     R6,R6,R0
skip_306                                                ; Address &370C, referenced once
        BL      subroutine_37
        LDRB    R3,[R11,#3]
        ADD     R3,R11,R3
        TST     R6,#4
        BEQ     skip_370
        MOV     R0,#1
        STR     R0,[R12,#376]
        TST     R6,#8
        BNE     skip_371
        ADD     R0,R12,#&0A70                           ; =2672
        ADD     R0,R0,R8
        SUB     R1,R9,R8
        BL      subroutine_112
        STR     R8,[R12,#384]
        MOV     R0,R8
        BL      subroutine_46
        STR     R0,[R12,#448]
        B       skip_310
skip_371                                                ; Address &3754, referenced once
        BL      subroutine_23
        BL      subroutine_99
        LDR     R0,[R12,#384]
        BL      subroutine_46
        STR     R0,[R12,#448]
        MOV     R11,R3
        STR     R7,[R12,#600]
        STR     R7,[R12,#636]
        B       skip_309
skip_370                                                ; Address &3778, referenced once
        MOV     R11,R3
        BL      subroutine_282
skip_309                                                ; Address &3780, referenced once
        LDR     R0,[R12,#532]
        STR     R0,[R12,#292]
skip_310                                                ; Address &3788, referenced once
        TST     R6,#2
        MOVNE   R0,#&11                                 ; =17
        BNE     loop_19
        BL      subroutine_216
skip_367                                                ; Address &3798, referenced once
        Pull    "R0-R3,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_263                                          ; Address &379C, not referenced
        BL      subroutine_75
        LDR     R0,[R12,#268]
        STR     R0,[R12,#552]
        BL      subroutine_57
        SWI     OS_WriteI+12
loop_140                                                ; Address &37B0, referenced once
        SWI     OS_WriteI+"*"
        ADD     R0,R12,#&1000                           ; =4096
        MOV     R1,#&FF                                 ; ="ÿ"
        MOV     R2,#&20                                 ; =" "
        MOV     R3,#&FF                                 ; ="ÿ"
        SWI     OS_ReadLine
        BCS     skip_363
        BL      subroutine_193
        CMN     R0,#1
        BEQ     skip_363
        ADD     R0,R12,#&1000                           ; =4096
        ADD     R13,R12,#&1400                          ; =5120
        ADD     R13,R13,#&0400                          ; =1024
        Push    "R0-R12"
        SWI     XOS_CLI
        BVC     skip_314
        SWI     OS_NewLine
        ADD     R0,R0,#4
        SWI     OS_Write0
        SWI     OS_NewLine
skip_314                                                ; Address &3800, referenced once
        Pull    "R0-R12"
        ADD     R13,R12,#&1400                          ; =5120
        B       loop_140
skip_363                                                ; Address &380C, referenced twice
        MOV     R0,#OsByte_AcknowledgeEscape
        SWI     OS_Byte
        BL      subroutine_161
        LDR     R9,[R12,#268]
        MOV     R0,#0
        STR     R0,[R12,#304]
        BL      subroutine_41
        LDR     R0,[R12,#304]
        CMP     R0,#0
        BEQ     skip_362
        BL      subroutine_166
        MOV     R0,#0
        STR     R0,[R12,#532]
        B       skip_317
skip_362                                                ; Address &3844, referenced once
        LDR     R0,[R12,#268]
        CMP     R0,R9
        BEQ     skip_317
        BL      subroutine_182
        BL      subroutine_187
        BL      subroutine_177
        MOV     R0,#0
        STR     R0,[R12,#380]
        STR     R0,[R12,#532]
        MOV     R0,#1
        STR     R0,[R12,#548]
        BL      subroutine_281
        BL      subroutine_287
skip_317                                                ; Address &3878, referenced twice
        BL      subroutine_143
        BL      subroutine_156
        LDR     R0,[R12,#308]
        CMP     R0,#0
        BLNE    subroutine_291
        BL      subroutine_216
        B       code_16

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_265                                          ; Address &3894, not referenced
        Push    "R0,R7-R9,R14"
        LDR     R9,[R12,#292]
        LDR     R8,[R12,#384]
        CMP     R9,R8
        BCS     skip_358
        ADD     R7,R12,#&0A70                           ; =2672
        LDRB    R0,[R7,R9]
        CMP     R0,#&41                                 ; ="A"
        BCC     skip_358
        CMP     R0,#&5A                                 ; ="Z"
        ORRLE   R0,R0,#&20                              ; =" "
        BLE     skip_359
        CMP     R0,#&61                                 ; ="a"
        BCC     skip_358
        CMP     R0,#&7A                                 ; ="z"
        BGT     skip_358
        AND     R0,R0,#&DF                              ; ="ß"
skip_359                                                ; Address &38D8, referenced once
        STRB    R0,[R7,R9]
        BL      subroutine_188
        LDR     R0,[R12,#356]
        BL      subroutine_290
        MOV     R0,#0
        BL      subroutine_157
        BL      subroutine_121
skip_358                                                ; Address &38F4, referenced 4 times
        BL      subroutine_147
        Pull    "R0,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_268                                          ; Address &38FC, not referenced
        Push    "R0-R2,R6-R9,R14"
        LDR     R0,[R12,#556]
        CMP     R0,#1
        BEQ     skip_324
        LDR     R9,[R12,#376]
        LDR     R8,[R12,#448]
        LDR     R7,[R12,#624]
        BL      subroutine_75
        LDR     R6,[R12,#448]
        BL      subroutine_216
        LDR     R1,[R12,#624]
        CMP     R1,R7
        BNE     skip_355
        LDR     R0,[R12,#600]
        LDR     R1,[R12,#356]
        CMP     R6,R8
        MVNNE   R2,#0
        BNE     skip_322
        CMP     R9,#0
        BEQ     skip_354
        MOV     R2,#1
skip_322                                                ; Address &3950, referenced once
        BL      subroutine_148
        B       skip_354
skip_355                                                ; Address &3958, referenced once
        BL      subroutine_141
skip_354                                                ; Address &395C, referenced twice
        MOV     R0,R9
        MOV     R1,R8
        BL      subroutine_68
        BL      subroutine_175
        BL      subroutine_1
        BL      subroutine_167
        LDR     R0,[R12,#600]
        BL      subroutine_277
        MOV     R11,R0
        LDR     R0,[R12,#560]
        MOV     R9,R0
        LDR     R1,[R12,#324]
        MOV     R2,R11
        BL      subroutine_241
        CMN     R0,#1
        MOVEQ   R0,#0
        STR     R0,[R12,#356]
        STREQ   R0,[R12,#292]
        LDREQ   R11,[R9]
        BL      subroutine_282
        LDR     R0,[R9]
        BL      subroutine_301
        CMN     R0,#1
        MOVEQ   R0,#&0A                                 ; =10
        STR     R0,[R12,#624]
skip_324                                                ; Address &39C0, referenced once
        Pull    "R0-R2,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_271                                          ; Address &39C4, not referenced
        Push    "R0,R1,R14"
        LDR     R0,[R12,#376]
        LDR     R1,[R12,#448]
        BL      subroutine_75
        BL      subroutine_68
        BL      subroutine_281
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_274                                          ; Address &39E0, not referenced
        Push    "R0,R14"
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_275                                          ; Address &39F0, not referenced
        Push    "R0-R2,R14"
        LDR     R0,[R12,#376]
        CMP     R0,#0
        BNE     skip_349
        LDR     R0,[R12,#384]
        BL      subroutine_46
        LDR     R1,[R12,#448]
        CMP     R0,R1
        BEQ     skip_347
        STR     R0,[R12,#448]
        B       skip_330
skip_349                                                ; Address &3A1C, referenced once
        BL      subroutine_295
        BL      subroutine_282
skip_330                                                ; Address &3A24, referenced once
        LDR     R0,[R12,#600]
        LDR     R1,[R12,#356]
        MVN     R2,#0
        BL      subroutine_148
        MOV     R0,#2
        BL      subroutine_157
skip_347                                                ; Address &3A3C, referenced once
        LDR     R0,[R12,#532]
        STR     R0,[R12,#292]
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_277                                          ; Address &3A48, referenced 15 times
        Push    "R8,R9,R14"
        MOV     R9,R0
        LDR     R8,[R12,#264]
        LDRB    R0,[R8,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BEQ     skip_344
loop_53                                                 ; Address &3A60, referenced once
        MOV     R0,R8
        BL      subroutine_301
        CMP     R0,R9
        LDRNEB  R0,[R8,#3]
        ADDNE   R8,R0,R8
        BNE     loop_53
skip_344                                                ; Address &3A78, referenced once
        MOV     R0,R8
        Pull    "R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_279                                          ; Address &3A80, referenced 6 times
        Push    "R1,R14"
        LDR     R1,[R12,#444]
        CMP     R1,#0
        MOVNE   R0,#0
        STRNE   R0,[R12,#444]
        LDRNE   R0,[R12,#440]
        BNE     skip_340
        CMP     R0,#0
        BNE     skip_337
        BL      subroutine_98
        B       skip_339
skip_337                                                ; Address &3AAC, referenced once
        BL      subroutine_38
skip_339                                                ; Address &3AB0, referenced once
        LDR     R1,[R12,#352]
        CMP     R1,#0
        BLNE    subroutine_234
        BL      subroutine_272
        CMP     R1,#0
        BEQ     skip_340
        BL      subroutine_178
        BL      subroutine_128
skip_340                                                ; Address &3AD0, referenced twice
        BL      subroutine_97
        Pull    "R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_282                                          ; Address &3AD8, referenced 34 times
        Push    "R0,R14"
        MOV     R0,R11
        BL      subroutine_310
        LDR     R0,[R12,#632]
        STR     R0,[R12,#600]
        STR     R0,[R12,#636]
        BL      subroutine_99
        LDR     R0,[R12,#384]
        BL      subroutine_46
        STR     R0,[R12,#448]
        MOV     R0,#0
        STR     R0,[R12,#376]
        BL      subroutine_247
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_283                                          ; Address &3B10, referenced 3 times
        Push    "R1,R14"
        SUB     R0,R0,#&8000
        MOV     R0,R0,LSR #8
        ADRL    R1,call_table
        LDR     R0,[R1,R0,LSL #3]
        Pull    "R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_285                                          ; Address &3B2C, referenced twice
        Push    "R1-R9,R14"
        MOV     R5,R0
        MOV     R6,R1
        MOV     R7,R2
        MOV     R8,#1
        MOV     R9,#0
loop_135                                                ; Address &3B44, referenced 15 times
        CMP     R8,#1
        BNE     skip_357
        ADD     R1,R6,R9
        MOV     R2,R7
        BL      subroutine_140
        LDR     R1,[R12,#284]
        MOV     R2,R9
        ADD     R4,R12,#&0C40                           ; =3136
loop_129                                                ; Address &3B64, referenced once
        CMP     R2,R5
        BGT     skip_356
        CMP     R2,R1
        MOVEQ   R0,#&3C                                 ; ="<"
        LDRNEB  R0,[R4,R2]
        BL      subroutine_188
        ADD     R2,R2,#1
        B       loop_129
skip_356                                                ; Address &3B84, referenced once
        MOV     R8,#0
skip_357                                                ; Address &3B88, referenced once
        ADD     R1,R6,R9
        MOV     R2,R7
        BL      subroutine_140
        MOV     R0,#0
        BL      subroutine_279
        MOV     R1,R0
        BL      subroutine_228
        CMP     R0,#1
        MOV     R0,R1
        STREQ   R0,[R12,#440]
        MOVEQ   R1,#1
        STREQ   R1,[R12,#444]
        BEQ     skip_415
        CMP     R0,#&8E00
        MOVEQ   R0,#&8A00
        CMP     R0,#&8F00
        MOVEQ   R0,#&9A00
        CMP     R0,#&B300
        CMPNE   R0,#&CC00
        CMPNE   R0,#&8A00
        CMPNE   R0,#&9A00
        CMPNE   R0,#&B800
        BEQ     skip_415
        LDR     R4,[R12,#284]
        CMP     R0,#&8D00
        BNE     skip_360
        BL      subroutine_298
        B       loop_135
skip_360                                                ; Address &3BF8, referenced once
        CMP     R0,#&8C00
        BNE     skip_361
        BL      subroutine_299
        B       loop_135
skip_361                                                ; Address &3C08, referenced once
        CMP     R0,#&AC00
        BNE     skip_364
        MOV     R9,#0
        B       loop_135
skip_364                                                ; Address &3C18, referenced once
        CMP     R0,#&AD00
        BNE     skip_366
        MOV     R9,R4
        B       loop_135
skip_366                                                ; Address &3C28, referenced once
        CMP     R0,#&9D00
        BNE     skip_368
        BL      subroutine_298
        BL      subroutine_298
        B       loop_135
skip_368                                                ; Address &3C3C, referenced once
        CMP     R0,#&9C00
        BNE     skip_377
        BL      subroutine_299
        BL      subroutine_299
        B       loop_135
skip_377                                                ; Address &3C50, referenced once
        CMP     R0,#&CD00
        BNE     skip_378
        LDR     R1,[R12,#416]
        EOR     R1,R1,#1
        STR     R1,[R12,#416]
        B       loop_135
skip_378                                                ; Address &3C68, referenced once
        CMP     R0,#&EB00
        MOVEQ   R9,#0
        BEQ     skip_379
        CMP     R0,#&CB00
        BNE     skip_380
skip_379                                                ; Address &3C7C, referenced once
        ADD     R0,R12,#&0C40                           ; =3136
        ADD     R0,R0,R9
        SUB     R1,R5,R9
        BL      subroutine_112
        STR     R9,[R12,#284]
        MOV     R8,#1
        B       loop_135
skip_380                                                ; Address &3C98, referenced once
        CMP     R0,#&DB00
        BNE     skip_383
        CMP     R9,R4
        MOVCS   R1,R4
        MOVCS   R4,#0
        BCS     skip_382
        ADD     R1,R12,#&0C40                           ; =3136
        ADD     R0,R1,R9
        SUB     R2,R4,R9
        BL      subroutine_114
        MOV     R1,R9
        MOV     R4,R2
skip_382                                                ; Address &3CC8, referenced once
        ADD     R0,R12,#&0C40                           ; =3136
        ADD     R0,R0,R4
        BL      subroutine_112
        MOV     R9,#0
        MOV     R8,#1
        STR     R4,[R12,#284]
        B       loop_135
skip_383                                                ; Address &3CE4, referenced once
        CMP     R0,#&B000
        BNE     skip_388
        CMP     R9,#0
        BEQ     loop_135
loop_144                                                ; Address &3CF4, referenced once
        ADD     R0,R12,#&0C40                           ; =3136
        ADD     R0,R0,R9
        SUB     R1,R0,#1
        SUB     R2,R5,R9
        ADD     R2,R2,#1
        BL      subroutine_114
        SUB     R9,R9,#1
        MOV     R8,#1
        SUB     R4,R4,#1
        STR     R4,[R12,#284]
        B       loop_135
skip_388                                                ; Address &3D20, referenced once
        CMP     R0,#&B100
        BNE     skip_403
        CMP     R9,R4
        BEQ     loop_135
        BL      subroutine_298
        B       loop_144
skip_403                                                ; Address &3D38, referenced once
        CMP     R3,#1
        MOVEQ   R1,#&30                                 ; ="0"
        MOVEQ   R2,#&39                                 ; ="9"
        MOVNE   R1,#&20                                 ; =" "
        MOVNE   R2,#&8000
        SUBNE   R2,R2,#1
        CMP     R0,R1
        BCS     skip_408
loop_98                                                 ; Address &3D58, referenced 3 times
        SWI     OS_WriteI+7
        B       loop_135
skip_408                                                ; Address &3D60, referenced once
        CMP     R0,R2
        BGT     loop_98
        CMP     R9,R5
        BEQ     loop_98
        LDR     R1,[R12,#416]
        CMP     R1,#1
        BNE     skip_409
        ADD     R1,R12,#&0C40                           ; =3136
        SUB     R2,R5,#1
        LDRB    R2,[R1,R2]
        CMP     R2,#&20                                 ; =" "
        BNE     loop_98
        BL      subroutine_188
        MOV     R4,R0
        ADD     R0,R1,R9
        ADD     R1,R0,#1
        SUB     R2,R5,R9
        SUB     R2,R2,#1
        BL      subroutine_114
        STRB    R4,[R0,#0]
        MOV     R8,#1
        ADD     R9,R9,#1
        LDR     R4,[R12,#284]
        CMP     R4,R5
        ADDNE   R4,R4,#1
        STRNE   R4,[R12,#284]
        B       loop_135
skip_409                                                ; Address &3DCC, referenced once
        ADD     R1,R12,#&0C40                           ; =3136
        STRB    R0,[R1,R9]
        BL      subroutine_188
        CMP     R9,R4
        ADDEQ   R4,R4,#1
        STREQ   R4,[R12,#284]
        SWIEQ   OS_WriteI+"<"
        ADD     R9,R9,#1
        B       loop_135

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_298                                          ; Address &3DF0, referenced 4 times
        CMP     R9,R4
        ADDCC   R9,R9,#1
        MOV     PC,R14

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_299                                          ; Address &3DFC, referenced 3 times
        CMP     R9,#0
        SUBNE   R9,R9,#1
        MOV     PC,R14
skip_415                                                ; Address &3E08, referenced twice
        Pull    "R1-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_301                                          ; Address &3E0C, referenced 40 times
        Push    "R1,R14"
        LDRB    R1,[R0,#1]
        LDRB    R0,[R0,#2]
        CMP     R1,#&FF                                 ; ="ÿ"
        ADDNE   R0,R0,R1,LSL #8
        MVNEQ   R0,#0
        Pull    "R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_302                                          ; Address &3E28, referenced 3 times
        Push    "R2,R3,R14"
        MOV     R3,#1
        BL      subroutine_285
        MOV     R1,R0
        BL      subroutine_270
        Pull    "R2,R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_303                                          ; Address &3E40, referenced twice
        Push    "R2-R5,R8,R9,R14"
        MOV     R9,R0
        BL      subroutine_140
loop_89                                                 ; Address &3E4C, referenced twice
        MOV     R0,#0
        BL      subroutine_279
        MOV     R8,R0
        BL      subroutine_228
        CMP     R0,#1
        STREQ   R8,[R12,#440]
        MOVEQ   R0,#1
        STREQ   R0,[R12,#444]
        BEQ     skip_421
        CMP     R8,#&8E00
        MOVEQ   R8,#&8A00
        CMP     R8,#&8F00
        MOVEQ   R8,#&9A00
        CMP     R8,#&B300
        CMPNE   R8,#&CC00
        CMPNE   R8,#&8A00
        CMPNE   R8,#&9A00
        CMPNE   R8,#&B800
        BEQ     skip_421
        CMP     R8,#&CD00
        LDREQ   R0,[R12,#416]
        EOREQ   R0,R0,#1
        STREQ   R0,[R12,#416]
        BEQ     loop_89
        CMP     R8,#&20                                 ; =" "
        BEQ     skip_419
        SWI     OS_WriteI+7
        B       loop_89
skip_419                                                ; Address &3EBC, referenced once
        MVN     R4,#0
        ADD     R5,R3,#1
loop_88                                                 ; Address &3EC4, referenced twice
        LDRB    R0,[R5],#1
        CMP     R0,#0
        BNE     loop_88
        ADD     R4,R4,#1
        CMP     R4,R9
        BNE     loop_88
        MOV     R0,R3
        LDRB    R3,[R5]
        CMP     R3,#0
        ADDNE   R3,R9,#1
        BL      subroutine_132
        MOV     R0,R3
skip_421                                                ; Address &3EF4, referenced twice
        MOV     R1,R8
        Pull    "R2-R5,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_305                                          ; Address &3EFC, referenced 7 times
        Push    "R2,R7-R9,R14"
        MOV     R9,R0
        BL      subroutine_140
loop_67                                                 ; Address &3F08, referenced twice
        MOV     R0,#0
        BL      subroutine_279
        MOV     R8,R0
        BL      subroutine_228
        CMP     R0,#1
        MOV     R0,R8
        STREQ   R0,[R12,#440]
        MOVEQ   R1,#1
        STREQ   R1,[R12,#444]
        BEQ     skip_439
        CMP     R0,#&8E00
        MOVEQ   R0,#&8A00
        CMP     R0,#&8F00
        MOVEQ   R0,#&9A00
        CMP     R0,#&B300
        CMPNE   R0,#&CC00
        CMPNE   R0,#&8A00
        CMPNE   R0,#&9A00
        CMPNE   R0,#&B800
        BEQ     skip_439
        CMP     R0,#&CD00
        LDREQ   R0,[R12,#416]
        EOREQ   R0,R0,#1
        STREQ   R0,[R12,#416]
        BEQ     loop_67
        CMP     R0,#&CB00
        CMPNE   R0,#&B100
        CMPNE   R0,#&EB00
        MOVEQ   R0,#&20                                 ; =" "
        MOVS    R7,R9
        BPL     skip_433
        CMP     R0,#&20                                 ; =" "
        BCC     skip_434
        CMP     R0,#&0100                               ; =256
        BCS     skip_434
        B       skip_438
skip_433                                                ; Address &3F98, referenced once
        CMP     R0,#&61                                 ; ="a"
        BCC     code_3
        CMP     R0,#&7A                                 ; ="z"
        ANDLE   R0,R0,#&DF                              ; ="ß"
code_3                                                  ; Address &3FA8, referenced twice
        LDRB    R1,[R7],#1
        CMP     R1,#0
        BNE     skip_435
skip_434                                                ; Address &3FB4, referenced twice
        SWI     OS_WriteI+7
        B       loop_67
skip_435                                                ; Address &3FBC, referenced once
        CMP     R0,R1
        BNE     code_3
skip_438                                                ; Address &3FC4, referenced once
        SWI     OS_WriteC
        MOV     R1,#0
        B       skip_440
skip_439                                                ; Address &3FD0, referenced twice
        MOV     R1,R0
        MOV     R0,#0
skip_440                                                ; Address &3FD8, referenced once
        Pull    "R2,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_310                                          ; Address &3FDC, referenced 17 times
        Push    "R0,R9,R14"
        MOV     R9,R0
        BL      subroutine_301
        CMN     R0,#1
        MOVEQ   R0,#&0A                                 ; =10
        STR     R0,[R12,#632]
        MOV     R0,R9
        BL      subroutine_102
        LDR     R0,[R12,#396]
        CMN     R0,#1
        MOVEQ   R0,#1
        BEQ     loop_47
        Pull    "R0,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_312                                          ; Address &4010, referenced 6 times
        Push    "R1-R3,R14"
        MOV     R3,#0
        BL      subroutine_285
        Pull    "R1-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_313                                          ; Address &4020, referenced 4 times
        Push    "R0,R14"
        MOV     R2,R1
        LDR     R1,[R12,#320]
        BL      subroutine_153
        ADD     R2,R0,R2
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_314                                          ; Address &4038, referenced twice
        Push    "R1,R6-R9,R14"
        MOV     R9,R1
        MOV     R8,#&FF00
        MOV     R7,#&FF00
        LDR     R6,[R12,#600]
loop_64                                                 ; Address &404C, referenced once
        LDR     R1,[R9,R0,LSL #2]
        CMN     R1,#1
        BEQ     skip_449
        CMP     R1,R8
        MOVCC   R8,R1
        CMP     R1,R7
        BCS     skip_449
        CMP     R1,R6
        MOVGT   R7,R1
skip_449                                                ; Address &4070, referenced twice
        SUBS    R0,R0,#1
        BPL     loop_64
        CMP     R7,#&FF00
        BNE     skip_450
        CMP     R8,#&FF00
        MOVNE   R7,R8
        MOVEQ   R0,#1
        BEQ     skip_456
skip_450                                                ; Address &4090, referenced once
        LDR     R0,[R12,#376]
        LDR     R1,[R12,#448]
        BL      subroutine_75
        BL      subroutine_68
        MOV     R0,R7
        STR     R0,[R12,#624]
        BL      subroutine_277
        MOV     R11,R0
        BL      subroutine_282
        ADD     R0,R12,#&0A70                           ; =2672
        LDR     R1,[R12,#384]
        BL      subroutine_193
        CMN     R0,#1
        MOVEQ   R0,#0
        STR     R0,[R12,#292]
        MOV     R0,#0
skip_456                                                ; Address &40D0, referenced once
        Pull    "R1,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_317                                          ; Address &40D4, referenced once
        Push    "R0-R3,R14"
        BL      subroutine_178
        MOV     R0,#&44                                 ; ="D"
        MOV     R1,#&45                                 ; ="E"
        BL      subroutine_294
        LDR     R3,[R12,#400]
        CMP     R3,#0
        ADDNE   R0,R12,#&09D0                           ; =2512
        BNE     skip_287
        BL      subroutine_237
        LDR     R3,[R12,#284]
        CMP     R3,#0
        BEQ     skip_286
        ADD     R0,R12,#&0C40                           ; =3136
skip_287                                                ; Address &410C, referenced once
        MOV     R1,#0
        STRB    R1,[R0,R3]
        CMP     R3,#&11                                 ; =17
        MOVGT   R1,#0
        MOVGT   R2,#3
        MOVLE   R1,#&0F                                 ; =15
        MOVLE   R2,#2
        BL      subroutine_140
        SWI     OS_Write0
        MOV     R1,#&20                                 ; =" "
        STRB    R1,[R0,R3]
skip_286                                                ; Address &4138, referenced once
        LDR     R0,[R12,#272]
        BL      subroutine_35
        LDR     R0,[R12,#404]
        MOV     R1,#0
        MOV     R2,#4
        BL      subroutine_131
        SWI     OS_WriteS
        DCB     " bytes free, ", 0
        ALIGN
code_7                                                  ; Address &4164, not referenced
        LDR     R0,[R12,#288]
        MOV     R3,R0
        BL      subroutine_35
        BL      subroutine_296
        SWI     OS_WriteS
        DCB     " line", 0
        ALIGN
code_17                                                 ; Address &4180, not referenced
        CMP     R3,#1
        SWINE   OS_WriteI+"s"
        LDR     R0,[R12,#580]
        CMN     R0,#1
        BNE     skip_29
        MOV     R1,#0
        MOV     R2,#6
        BL      subroutine_140
        SWI     OS_WriteS
        DCB     "No timestamp", 0
        ALIGN
code_5                                                  ; Address &41B4, not referenced
        B       skip_444
skip_29                                                 ; Address &41B8, referenced once
        MOV     R0,#&47                                 ; ="G"
        MVN     R1,#0
        BL      message_print
        MOV     R1,#&0E                                 ; =14
        MOV     R2,#6
        BL      subroutine_140
        ADD     R0,R12,#&0240                           ; =576
        ADD     R1,R12,#&09F0                           ; =2544
        MOV     R2,#&20                                 ; =" "
        ADRL    R3,string_24mise
        SWI     OS_ConvertDateAndTime
        SWI     OS_Write0
        MOV     R1,#0
        MOV     R2,#7
        BL      subroutine_140
        ADD     R0,R12,#&0240                           ; =576
        ADD     R1,R12,#&09F0                           ; =2544
        MOV     R2,#&20                                 ; =" "
        ADRL    R3,string_we_dyst_mo_ceyr
        SWI     OS_ConvertDateAndTime
        SWI     OS_Write0
skip_444                                                ; Address &4214, referenced once
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_3                                            ; Address &4218, referenced once
        Push    "R0-R9,R14"
        BL      subroutine_178
        MOV     R0,#&44                                 ; ="D"
        MOV     R1,#&46                                 ; ="F"
        BL      subroutine_294
        LDR     R3,[R12,#508]
        CMP     R3,#0
        BNE     skip_457
        MOV     R2,#2
        BL      subroutine_11
        B       skip_432
skip_457                                                ; Address &4244, referenced once
        CMP     R3,#&0B                                 ; =11
        MOVGT   R1,#0
        MOVGT   R2,#3
        BGT     skip_278
        MOV     R1,#&13                                 ; =19
        MOV     R2,#2
        BL      subroutine_140
        SWI     OS_WriteI+":"
        MOV     R1,#&15                                 ; =21
skip_278                                                ; Address &4268, referenced once
        BL      subroutine_140
        ADD     R0,R12,#&0A50                           ; =2640
        MOV     R1,#0
        STRB    R1,[R0,R3]
        SWI     OS_Write0
        MOV     R1,#&20                                 ; =" "
        STRB    R1,[R0,R3]
skip_432                                                ; Address &4284, referenced once
        LDR     R9,[R12,#584]
        LDR     R8,[R12,#588]
        CMP     R9,R8
        STRGT   R9,[R12,#588]
        STRGT   R8,[R12,#584]
        MOVGT   R0,R9
        MOVGT   R9,R8
        MOVGT   R8,R0
        LDR     R7,[R12,#516]
        LDR     R6,[R12,#520]
        STRGT   R7,[R12,#520]
        STRGT   R6,[R12,#516]
        MOVGT   R0,R7
        MOVGT   R7,R6
        MOVGT   R6,R0
        MOV     R5,#0
        MOV     R1,#0
        MOV     R2,#5
        BL      subroutine_140
        LDR     R4,data_alt4_20202020
        CMP     R7,R4
        BEQ     skip_26
        MOV     R0,R9
        BL      subroutine_13
        SWI     OS_WriteI+" "
skip_26                                                 ; Address &42E8, referenced once
        CMP     R6,R4
        BEQ     skip_275
        MOV     R0,R8
        BL      subroutine_13
        SWI     OS_WriteI+" "
skip_275                                                ; Address &42FC, referenced once
        LDR     R0,[R12,#524]
        CMP     R0,R4
        LDRNE   R0,[R12,#592]
        CMPNE   R0,R9
        CMPNE   R0,R8
        BLNE    subroutine_13
        CMP     R5,#0
        MOVEQ   R2,#4
        BLEQ    subroutine_11
        MOV     R5,#0
        MOV     R1,#0
        MOV     R2,#7
        BL      subroutine_140
        ADD     R0,R12,#&0260                           ; =608
        MOV     R1,#4
        BL      subroutine_315
        ADD     R2,R12,#&0260                           ; =608
loop_4                                                  ; Address &4340, referenced once
        LDR     R0,[R2],#4
        CMN     R0,#1
        BEQ     skip_273
        BL      subroutine_35
        BL      subroutine_296
        SWI     OS_WriteI+" "
        MOV     R5,#1
skip_273                                                ; Address &435C, referenced once
        SUBS    R1,R1,#1
        BNE     loop_4
        CMP     R5,#0
        MOVEQ   R2,#6
        BLEQ    subroutine_11
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_11                                           ; Address &4374, referenced 3 times
        Push    "R14"
        MOV     R1,#&13                                 ; =19
        BL      subroutine_140
        SWI     OS_WriteS
        DCB     ": None", 0
        ALIGN
code_18                                                 ; Address &438C, not referenced
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_13                                           ; Address &4390, referenced 3 times
        Push    "R9,R14"
        MOV     R9,R0
        BL      subroutine_42
        ADD     R0,R12,#8
        SWI     OS_Write0
        MOV     R0,R9
        BL      subroutine_35
        BL      subroutine_296
        MOV     R5,#1
        Pull    "R9,PC"

data_alt4_20202020
        DCD     &20202020

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_16                                           ; Address &43BC, referenced 6 times
        Push    "R0-R2,R14"
        ADD     R0,R12,#&0C40                           ; =3136
        ADD     R1,R12,#&0A30                           ; =2608
        MOV     R2,#&20                                 ; =" "
        BL      subroutine_114
        LDR     R0,[R12,#284]
        STR     R0,[R12,#364]
        BL      subroutine_229
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_18                                           ; Address &43E0, referenced twice
        Push    "R0-R2,R14"
        ADD     R0,R12,#&0C40                           ; =3136
        ADD     R1,R12,#&0A50                           ; =2640
        LDR     R2,[R12,#284]
        STR     R2,[R12,#508]
        BL      subroutine_114
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_19                                           ; Address &43FC, referenced once
        Push    "R0-R2,R14"
        ADD     R0,R12,#&0C40                           ; =3136
        ADD     R1,R12,#&0A10                           ; =2576
        LDR     R2,[R12,#284]
        STR     R2,[R12,#368]
        BL      subroutine_114
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_20                                           ; Address &4418, referenced 12 times
        Push    "R14"
        SWI     OS_WriteI+23
        SWI     OS_WriteI+17
        SWI     OS_WriteI+5
        BL      subroutine_196
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_22                                           ; Address &4430, referenced once
        Push    "R0,R1,R7-R9,R14"
        LDR     R9,[R12,#344]
        LDR     R7,[R12,#332]
        ADD     R0,R12,#&05D0                           ; =1488
        STR     R0,[R12,#560]
        ADD     R0,R12,#&07D0                           ; =2000
        STR     R0,[R12,#564]
        MOV     R0,#0
        STR     R0,[R12,#332]
        STR     R0,[R12,#344]
        LDR     R0,[R12,#316]
        STR     R0,[R12,#328]
        SUB     R8,R0,#2
        STR     R8,[R12,#324]
        CMP     R9,#0
        BEQ     skip_19
        LDR     R0,[R12,#356]
        ADD     R1,R7,R0
        LDR     R0,[R12,#448]
        ADD     R1,R1,R0
        SUB     R1,R1,#1
        CMP     R1,R8
        MOVGT   R1,R8
        MOV     R0,R11
        BL      subroutine_51
skip_19                                                 ; Address &4494, referenced once
        BL      subroutine_178
        BL      subroutine_143
        MOV     R0,#0
        STR     R0,[R12,#412]
        MOV     R0,#1
        STR     R0,[R12,#556]
        Pull    "R0,R1,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_24                                           ; Address &44B0, referenced 10 times
        Push    "R2,R14"
        LDR     R0,[R12,#324]
        LDR     R2,[R12,#560]
loop_15                                                 ; Address &44BC, referenced once
        LDR     R1,[R2,R0,LSL #2]
        CMP     R1,#0
        BNE     skip_18
        SUBS    R0,R0,#1
        BPL     loop_15
        MVN     R0,#0
skip_18                                                 ; Address &44D4, referenced once
        Pull    "R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_28                                           ; Address &44D8, referenced 5 times
        Push    "R0-R2,R14"
        BL      subroutine_180
        ADD     R0,R12,#&0A50                           ; =2640
        ADD     R1,R12,#&0C40                           ; =3136
        LDR     R2,[R12,#508]
        STR     R2,[R12,#284]
        BL      subroutine_114
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_29                                           ; Address &44F8, referenced once
        Push    "R0-R9,R14"
        LDR     R9,[R12,#480]
        LDR     R8,[R12,#484]
        LDR     R7,[R12,#264]
        LDR     R6,[R12,#260]
        LDR     R0,[R12,#604]
        BL      subroutine_277
        MOV     R5,R0
        LDR     R0,[R12,#628]
        BL      subroutine_277
        MOV     R4,R0
        ADD     R1,R12,#&0260                           ; =608
        MVN     R2,#0
        MOV     R3,#3
loop_136                                                ; Address &4530, referenced once
        LDR     R0,[R1,R3,LSL #2]
        CMP     R0,R2
        BEQ     skip_13
        BL      subroutine_277
        CMP     R0,R9
        BCC     skip_13
        CMP     R0,R8
        STRCC   R2,[R1,R3,LSL #2]
skip_13                                                 ; Address &4550, referenced twice
        SUBS    R3,R3,#1
        BPL     loop_136
        CMP     R9,R7
        BNE     skip_255
        SUB     R0,R6,#2
        CMP     R8,R0
        BNE     skip_255
        MOV     R0,#&FF                                 ; ="ÿ"
        STRB    R0,[R7,#1]
        BL      subroutine_281
        BL      subroutine_287
        B       skip_272
skip_255                                                ; Address &4580, referenced twice
        MOV     R0,R8
        MOV     R1,R9
        SUB     R2,R6,R8
        BL      subroutine_114
        LDR     R0,[R12,#560]
        LDR     R0,[R0,#0]
        CMP     R0,R9
        BCC     skip_312
        CMP     R0,R8
        BCS     skip_312
        LDRB    R0,[R9,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BEQ     code_19
        MOV     R11,R9
        BL      subroutine_282
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        B       skip_251
code_19                                                 ; Address &45C8, referenced twice
        BL      subroutine_253
        B       skip_251
skip_312                                                ; Address &45D0, referenced twice
        LDRB    R0,[R9,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        MOVNE   R11,R9
        BNE     skip_293
        MOV     R0,#&FF00
        BL      subroutine_192
        MOV     R11,R1
skip_293                                                ; Address &45EC, referenced once
        BL      subroutine_282
        BL      subroutine_48
        LDR     R0,[R12,#560]
        LDR     R1,[R12,#324]
        MOV     R2,R11
        BL      subroutine_241
        CMN     R0,#1
        BNE     skip_251
        LDRB    R0,[R11,#3]
        ADD     R0,R11,R0
        LDRB    R0,[R0,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BEQ     code_19
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
skip_251                                                ; Address &4628, referenced 3 times
        CMP     R4,R9
        BCC     skip_284
        CMP     R4,R8
        BCS     skip_284
        LDRB    R0,[R9,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        LDREQ   R0,[R12,#624]
        MOVNE   R0,R9
        BLNE    subroutine_301
        STR     R0,[R12,#628]
skip_284                                                ; Address &4650, referenced twice
        CMP     R5,R9
        BCC     skip_272
        CMP     R5,R8
        LDRCC   R0,[R12,#628]
        STRCC   R0,[R12,#604]
        MOVCC   R0,#0
        STRCC   R0,[R12,#296]
skip_272                                                ; Address &466C, referenced twice
        MOV     R0,#0
        STR     R0,[R12,#292]
        BL      subroutine_261
        BL      subroutine_119
        BL      subroutine_134
        BL      subroutine_182
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_40                                           ; Address &4688, referenced once
        Push    "R0-R9,R14"
        LDR     R9,[R12,#480]
        LDR     R0,[R12,#484]
        BL      subroutine_301
        MOV     R8,R0
        ADD     R7,R12,#&0400                           ; =1024
        LDR     R1,[R12,#524]
        CMP     R1,#&54                                 ; ="T"
        MOVNE   R1,R9
        BLEQ    subroutine_192
        MOV     R0,R1
        BL      subroutine_310
        LDR     R4,[R12,#396]
        MOV     R0,R7
        MOV     R1,R4
        BL      subroutine_193
        CMN     R0,#1
        MOVEQ   R0,#&27                                 ; ="'"
        BEQ     code_8
        MOV     R6,R0
loop_94                                                 ; Address &46D8, referenced once
        MOV     R0,R9
        BL      subroutine_301
        CMP     R0,R8
        BEQ     skip_254
        MOV     R0,R9
        BL      subroutine_310
        LDR     R4,[R12,#396]
        MOV     R0,R7
        MOV     R1,R4
        BL      subroutine_193
        MOV     R5,R0
        CMN     R0,#1
        BEQ     skip_460
        SUB     R3,R4,R5
        ADD     R3,R3,R6
        MOV     R2,#&0170                               ; =368
        ADD     R2,R2,#1
        CMP     R3,R2
        BLE     skip_299
        MOV     R0,#&1B                                 ; =27
code_8                                                  ; Address &4728, referenced twice
        MOV     R1,R9
        B       code_21
skip_299                                                ; Address &4730, referenced once
        CMP     R3,R4
        BEQ     skip_460
        ADD     R0,R7,R5
        ADD     R1,R7,R6
        SUB     R2,R4,R5
        BL      subroutine_114
        CMP     R5,R6
        ADDGT   R0,R7,R3
        SUBGT   R1,R4,R3
        ADDLE   R0,R7,R5
        SUBLE   R1,R3,R4
        BL      subroutine_112
        MOV     R0,R7
        MOV     R1,R3
        LDR     R2,[R12,#632]
        MOV     R3,R9
        BL      subroutine_306
        CMP     R0,#0
        BNE     code_8
skip_460                                                ; Address &477C, referenced twice
        LDRB    R0,[R9,#3]
        ADD     R9,R9,R0
        B       loop_94
skip_254                                                ; Address &4788, referenced once
        BL      subroutine_182
        LDR     R0,[R12,#600]
        BL      subroutine_277
        MOV     R11,R0
        BL      subroutine_282
        BL      subroutine_216
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_50                                           ; Address &47A4, referenced once
        Push    "R0-R9,R14"
        LDR     R9,[R12,#480]
        LDR     R8,[R12,#484]
        LDR     R7,[R12,#260]
        LDR     R6,[R12,#488]
        SUB     R5,R8,R9
        LDR     R4,[R12,#516]
        AND     R4,R4,#&DF                              ; ="ß"
        MOV     R3,R11
        CMP     R4,#&43                                 ; ="C"
        BNE     skip_232
        MOV     R0,R9
        MOV     R1,#0
loop_76                                                 ; Address &47D8, referenced once
        CMP     R0,R8
        BCS     skip_35
        ADD     R1,R1,#1
        LDRB    R2,[R0,#3]
        ADD     R0,R0,R2
        B       loop_76
skip_35                                                 ; Address &47F0, referenced once
        LDR     R0,[R12,#288]
        ADD     R0,R0,R1
        CMP     R0,#&FF00
        MOVCS   R0,#&10                                 ; =16
        MOVCS   R1,#0
        BCS     code_21
skip_232                                                ; Address &4808, referenced once
        LDR     R0,[R12,#272]
        CMP     R5,R0
        MOVGT   R0,#&0C                                 ; =12
        MOVGT   R1,#0
        BGT     code_21
        BL      subroutine_8
        MOV     R0,R6
        ADD     R1,R6,R5
        SUB     R2,R7,R6
        BL      subroutine_114
        CMP     R11,R0
        ADDCS   R3,R3,R5
        CMP     R6,R9
        ADDCC   R0,R9,R5
        MOVCS   R0,R9
        MOV     R1,R6
        MOV     R2,R5
        BL      subroutine_114
        CMP     R4,#&4D                                 ; ="M"
        BNE     skip_224
        CMP     R11,R9
        BCC     skip_238
        CMP     R11,R8
        ADDCC   R3,R3,R1
        SUBCC   R3,R3,R0
skip_238                                                ; Address &486C, referenced once
        SUB     R2,R7,R8
        CMP     R6,R9
        ADDCC   R0,R8,R5
        ADDCC   R1,R9,R5
        MOVCS   R0,R8
        MOVCS   R1,R9
        ADDCS   R2,R2,R5
        BL      subroutine_114
        CMP     R3,R0
        SUBCS   R3,R3,R5
skip_224                                                ; Address &4894, referenced once
        MOV     R11,R3
        MOV     R0,#0
        STR     R0,[R12,#292]
        BL      subroutine_261
        CMP     R4,#&4D                                 ; ="M"
        BLNE    subroutine_134
        BL      subroutine_119
        BL      subroutine_289
        BL      subroutine_300
        BL      subroutine_273
        BL      subroutine_182
        CMP     R0,#0
        BNE     code_24
        CMP     R4,#&4D                                 ; ="M"
        BNE     skip_221
        CMP     R9,R6
        SUBCC   R6,R6,R5
skip_221                                                ; Address &48D8, referenced once
        MOV     R0,R6
        BL      subroutine_301
        BL      subroutine_192
        CMP     R1,#0
        MOVEQ   R11,R0
        MOVNE   R11,R1
        BL      subroutine_282
        BL      subroutine_224
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_59                                           ; Address &48FC, referenced twice
        Push    "R0-R2,R8,R9,R14"
        ADD     R0,R12,#&0C40                           ; =3136
        MOV     R1,#&1F                                 ; =31
        BL      subroutine_193
        CMN     R0,#1
        MOVEQ   R0,#0
        STREQ   R0,[R12,#284]
        BEQ     skip_234
        MOV     R9,R0
        ADD     R8,R12,#&0C40                           ; =3136
        ADD     R8,R8,R9
        MOV     R0,R8
        RSB     R1,R9,#&1F                              ; =31
        BL      subroutine_151
        MOV     R2,R0
        STR     R2,[R12,#284]
        MOV     R0,R8
        ADD     R1,R12,#&0C40                           ; =3136
        BL      subroutine_114
        ADD     R0,R1,R2
        RSB     R1,R2,#&1F                              ; =31
        BL      subroutine_112
skip_234                                                ; Address &4954, referenced once
        Pull    "R0-R2,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_61                                           ; Address &4958, referenced once
        Push    "R0,R9,R14"
        LDR     R9,[R12,#372]
        MOVS    R0,#&00,2
        LDR     R0,data
        MOVS    R0,R0,LSL R9
        BCC     skip_46
        ADD     R9,R9,#&60                              ; ="`"
        CMP     R9,#&72                                 ; ="r"
        BNE     skip_42
        BL      subroutine_284
        B       skip_45
skip_42                                                 ; Address &4984, referenced once
        CMP     R9,#&61                                 ; ="a"
        CMPNE   R9,#&62                                 ; ="b"
        CMPNE   R9,#&65                                 ; ="e"
        CMPNE   R9,#&74                                 ; ="t"
        BNE     skip_204
        AND     R9,R9,#&DF                              ; ="ß"
        STR     R9,[R12,#524]
        LDR     R0,[R12,#600]
        STR     R0,[R12,#592]
        B       skip_45
skip_204                                                ; Address &49AC, referenced once
        MOV     R0,R9
        BL      subroutine_2
        CMP     R0,#0
        BNE     skip_45
        SWI     OS_WriteI+7
        B       skip_46
skip_45                                                 ; Address &49C4, referenced 3 times
        BL      subroutine_126
        LDR     R0,[R12,#556]
        CMP     R0,#1
        BEQ     skip_46
        BL      subroutine_258
        BL      subroutine_126
        BL      subroutine_1
skip_46                                                 ; Address &49E0, referenced 3 times
        Pull    "R0,R9,PC"
data                                                    ; Address &49E4, referenced once
        DCD     &F8585000
bar_char_defns
        DCB     23,&96, &00,&FF,&00,&FF,&00,&00,&00,&00 ; Double horizontal bar, top justified
        DCB     23,&97, &00,&00,&00,&00,&FF,&00,&FF,&00 ; Double horizontal bar, bottom justified
        DCB     23,&98, &66,&66,&66,&66,&66,&66,&66,&66 ; Double vertical bar
        DCB     23,&99, &00,&7F,&60,&67,&66,&66,&66,&66 ; Double bar, top left corner
        DCB     23,&9A, &00,&FE,&06,&E6,&66,&66,&66,&66 ; Double bar, top right corner
        DCB     23,&9B, &66,&66,&66,&66,&67,&60,&7F,&00 ; Double bar, bottom left corner
        DCB     23,&9C, &66,&66,&66,&66,&E6,&06,&FE,&00 ; Double bar, bottom right corner
        DCB     23,&9D, &66,&66,&66,&67,&66,&66,&66,&66 ; Double vertical bar, intersecting single bar (left)
        DCB     23,&9E, &66,&66,&66,&E6,&66,&66,&66,&66 ; Double vertical bar, intersecting single bar (right)
        DCB     23,&9F, &00,&00,&00,&FF,&00,&00,&00,&00 ; Single horizontal bar
bar_char_defns_end
        ALIGN
data_3                                                  ; Address &4A4C, referenced once
        DCD     &19050C04
        DCD     &70000604
        DCD     &F8051903
        DCD     &19037004
        DCD     &30000604
        DCD     &F8051903
        DCD     &19033004
        DCD     &90000604
        DCD     &F8051902
        DCD     &19029004
        DCD     &F0000604
        DCD     &F8051901
        DCD     &1901F004
        DCD     &50000604
        DCD     &F8051901
        DCD     &19015004
        DCD     &70000604
        DCD     &6051903
        DCD     &19015000
        DCD     &70000804
        DCD     &8051903
        DCD     &19015000
        DCD     &70006604
        DCD     &66051903
        DCD     &19015000
        DCD     &70006804
        DCD     &68051903
        DCD     &19015000
        DCD     &7001B604
        DCD     &B6051903
        DCD     &19015001
        DCD     &7001B804
        DCD     &B8051903
        DCD     &19015001
        DCD     &70032604
        DCD     &26051903
        DCD     &19015003
        DCD     &70032804
        DCD     &28051903
        DCD     &19015003
        DCD     &70049604
        DCD     &96051903
        DCD     &19015004
        DCD     &70049804
        DCD     &98051903
        DCD     &19015004
        DCD     &7004F604
        DCD     &F6051903
        DCD     &19015004
        DCD     &7004F804
        DCD     &F8051903
        DCD     &19015004
        DCB     4, &10, 2
        DCB     "¿"
        DCB     3
        DCB     "Function Keys"
        DCB     &19, 4
        DCB     " ", 0
        DCB     &5F, 3
        DCD     &1979654B
        DCD     &5F024004
        DCD     &69685303
        DCD     &4197466
        DCD     &35F03A0
        DCD     &746E6F43
        DCD     &196C6F72
        DCD     &5F04B004
        DCD     &79654B03
        DCD     &200419
        DCD     &3166031F
        DCD     &800419
        DCD     &202A031F
        DCD     &6D6D6F43
        DCD     &19646E61
        DCD     &1F01D004
        DCD     &6C705303
        DCD     &4C207469
        DCD     &19656E69
        DCD     &1F034004
        DCD     &696F4A03
        DCD     &694C206E
        DCD     &1973656E
        DCD     &1F04B004
        DCD     &19316603
        DCD     &FF002004
        DCD     &19326602
        DCB     4, &80, 0
        DCB     "ÿ"
        DCB     2
        DCB     "Load Program"
        DCB     &19, 4
        DCB     "Ð"
        DCB     1
        DCB     "ÿ"
        DCB     2
        DCB     "Append Program"
        DCB     &19, 4
        DCB     "@"
        DCB     3
        DCB     "ÿ"
        DCB     2
        DCB     "Swap Window"
        DCB     &19, 4
        DCB     "°"
        DCB     4
        DCB     "ÿ"
        DCB     2
        DCB     "f2"
        DCB     &19, 4
        DCB     " ", 0
        DCB     &DF, 2
        DCD     &4193366
        DCD     &2DF0080
        DCD     &65766153
        DCD     &6F725020
        DCD     &6D617267
        DCD     &1D00419
        DCD     &704F02DF
        DCD     &6E6F6974
        DCD     &40041973
        DCD     &2002DF03
        DCD     &4B00419
        DCD     &336602DF
        DCD     &200419
        DCD     &346602BF
        DCD     &800419
        DCB     "¿"
        DCB     2
        DCB     "Search & Edit"
        DCB     &19
        DCB     4
        DCB     "Ð"
        DCB     1
        DCB     "¿"
        DCB     2
        DCB     "Return to Basic"
        DCB     &19, 4
        DCB     "@"
        DCB     3
        DCB     "¿"
        DCB     2
        DCB     "Split/Join Window"
        DCB     &19
        DCB     4
        DCB     "°"
        DCB     4
        DCB     "¿"
        DCB     2
        DCB     "f4"
        DCB     &19
        DCB     4
        DCB     " ", 0
        DCB     &7F
        DCD     &19356602
        DCD     &7F008004
        DCD     &61655302
        DCD     &20686372
        DCD     &65522026
        DCD     &63616C70
        DCD     &D0041965
        DCD     &43027F01
        DCD     &69646E6F
        DCD     &6E6F6974
        DCD     &52206C61
        DCD     &616C7065
        DCD     &4196563
        DCD     &27F0340
        DCD     &706C6548
        DCD     &4B00419
        DCD     &3566027F
        DCD     &200419
        DCD     &3666025F
        DCD     &800419
        DCB     "_"
        DCB     2
        DCB     "Toggle Marker"
        DCB     &19
        DCB     4
        DCB     "Ð"
        DCB     1
        DCB     "_"
        DCB     2
        DCB     "Go to Marker"
        DCB     &19, 4
        DCB     "@"
        DCB     3
        DCB     "_"
        DCB     2
        DCB     "Program Information"
        DCB     &19, 4
        DCB     "°"
        DCB     4
        DCB     "_"
        DCB     2
        DCB     "f6"
        DCB     &19, 4
        DCB     " ", 0
        DCB     &3F, 2
        DCD     &4193766
        DCB     &80, 0
        DCB     "?"
        DCB     2
        DCB     "Search"
        DCB     &19, 4
        DCB     "Ð"
        DCB     1
        DCB     "?"
        DCB     2
        DCB     "Go to Next Match"
        DCB     &19, 4
        DCB     "@"
        DCB     3
        DCB     "?"
        DCB     2
        DCB     "Go to Previous Match"
        DCB     &19, 4
        DCB     "°"
        DCB     4
        DCB     "?"
        DCB     2
        DCB     "f7"
        DCB     &19, 4
        DCB     " ", 0
        DCB     &1F, 2
        DCD     &4193866
        DCD     &21F0080
        DCD     &756E6552
        DCD     &7265626D
        DCD     &1D00419
        DCD     &6552021F
        DCD     &74616570
        DCD     &6E694C20
        DCD     &40041965
        DCD     &45021F03
        DCD     &6E657478
        DCD     &694C2064
        DCD     &419656E
        DCD     &21F04B0
        DCD     &4193866
        DCD     &1DF0020
        DCD     &4193966
        DCD     &1DF0080
        DCD     &19646C4F
        DCD     &DF01D004
        DCD     &77654E01
        DCD     &3400419
        DCD     &6E4901DF
        DCD     &74726573
        DCD     &20746120
        DCD     &19706F54
        DCD     &DF04B004
        DCD     &19396601
        DCD     &BF002004
        DCD     &30316601
        DCD     &800419
        DCB     &BF, 1
        DCB     "Swap Case"
        DCB     &19
        DCB     4
        DCB     "Ð"
        DCB     1
        DCB     "¿"
        DCB     1
        DCB     "Undo Changes"
        DCB     &19, 4
        DCB     "@"
        DCB     3
        DCB     "¿"
        DCB     1
        DCB     "Insert at End"
        DCB     &19, 4
        DCB     "°"
        DCB     4
        DCB     "¿"
        DCB     1
        DCB     "f10"
        DCB     &19, 4
        DCB     " ", 0
        DCB     &9F, 1, &66
        DCD     &4193131
        DCB     &80, 0
        DCB     ""
        DCB     1
        DCB     "Delete End of Line"
        DCB     &19, 4
        DCB     "Ð"
        DCB     1
        DCB     ""
        DCB     1
        DCB     "Delete Start of Line"
        DCB     &19, 4
        DCB     "@"
        DCB     3
        DCB     ""
        DCB     1
        DCB     "Delete Line"
        DCB     &19, 4
        DCB     "°"
        DCB     4
        DCB     ""
        DCB     1
        DCB     "f11"
        DCB     &19, 4
        DCB     " ", 0
        DCB     &7F, 1
        DCD     &19323166
        DCD     &7F008004
        DCD     &65784501
        DCD     &65747563
        DCD     &1D00419
        DCD     &6F47017F
        DCD     &206F7420
        DCD     &656E694C
        DCD     &6D6F4320
        DCD     &646E616D
        DCD     &3400419
        DCD     &6F47017F
        DCD     &206F7420
        DCD     &656E694C
        DCD     &4B00419
        DCD     &3166017F
        DCD     &20041932
        DCB     0, &FF, 0
        DCB     "Shift-Control keys may be programmed using *KEY"
        DCB     &19, 4
        DCB     " ", 0
        DCB     &7F, 0
        DCB     "Press the Space Bar for next Help Screen"
        DCB     &19, 4
        DCB     " ", 0
        DCB     &5F, 0
        DCB     "Escape to Edit"
data_3_end
unknowndata                                             ; Address &4F14, referenced twice
        DCD     &19050C04
        DCD     &70001604
        DCD     &E8051903
        DCD     &19037004
        DCD     &30001604
        DCD     &E8051903
        DCD     &19033004
        DCD     &90001604
        DCD     &E8051902
        DCD     &19029004
        DCD     &70001604
        DCD     &16051903
        DCD     &19029000
        DCD     &70001804
        DCD     &18051903
        DCD     &19029000
        DCD     &70009604
        DCD     &96051903
        DCD     &19029000
        DCD     &70009804
        DCD     &98051903
        DCD     &19029000
        DCD     &7001A604
        DCD     &A6051903
        DCD     &19029001
        DCD     &7001A804
        DCD     &A8051903
        DCD     &19029001
        DCD     &7002C604
        DCD     &C6051903
        DCD     &19029002
        DCD     &7002C804
        DCD     &C8051903
        DCD     &19029002
        DCD     &7003D604
        DCD     &D6051903
        DCD     &19029003
        DCD     &7003D804
        DCD     &D8051903
        DCD     &19029003
        DCD     &7004E604
        DCD     &E6051903
        DCD     &19029004
        DCD     &7004E804
        DCD     &E8051903
        DCD     &19029004
        DCB     4
        DCB     " "
        DCB     2
        DCB     "¿"
        DCB     3
        DCB     "Cursor Keys"
        DCB     &19, 4
        DCB     "@", 0
        DCD     &654B035F
        DCD     &10041979
        DCD     &53035F02
        DCD     &74666968
        DCD     &3100419
        DCD     &6F43035F
        DCD     &6F72746E
        DCD     &4004196C
        DCD     &41035F04
        DCD     &419746C
        DCD     &31F0030
        DCD     &4197055
        DCD     &31F00B0
        DCD     &6F207055
        DCD     &4C20656E
        DCD     &19656E69
        DCD     &1F01C004
        DCD     &67615003
        DCD     &70552065
        DCD     &2E00419
        DCB     &1F, 3
        DCB     "Top of Program"
        DCB     &19, 4
        DCB     "ð"
        DCB     3
        DCB     &1F, 3
        DCB     "Top of Screen"
        DCB     &19
        DCB     4
        DCB     "0", 0
        DCB     &FF
        DCD     &776F4402
        DCD     &B004196E
        DCB     0
        DCB     "ÿ"
        DCB     2
        DCB     "Down one Line"
        DCB     &19, 4
        DCB     "À"
        DCB     1
        DCB     "ÿ"
        DCB     2
        DCB     "Page Down"
        DCB     &19
        DCB     4
        DCB     "à"
        DCB     2
        DCB     "ÿ"
        DCB     2
        DCB     "End of Program"
        DCB     &19
        DCB     4
        DCB     "ð"
        DCB     3
        DCB     "ÿ"
        DCB     2
        DCB     "End of Screen"
        DCB     &19, 4
        DCB     "0", 0
        DCB     &DF, 2
        DCD     &7466654C
        DCD     &B00419
        DCB     "ß"
        DCB     2
        DCB     "Left one Char"
        DCB     &19
        DCB     4
        DCB     "À"
        DCB     1
        DCB     "ß"
        DCB     2
        DCB     "Left two Chars"
        DCB     &19
        DCB     4
        DCB     "à"
        DCB     2
        DCB     "ß"
        DCB     2
        DCB     "Start of Line"
        DCB     &19, 4
        DCB     "ð"
        DCB     3
        DCB     "ß"
        DCB     2
        DCB     "Previous Line"
        DCB     &19, 4
        DCB     "0", 0
        DCB     &BF, 2, &52
        DCD     &74686769
        DCD     &B00419
        DCB     "¿"
        DCB     2
        DCB     "Right one Char"
        DCB     &19, 4
        DCB     "À"
        DCB     1
        DCB     "¿"
        DCB     2
        DCB     "Right two Chars"
        DCB     &19, 4
        DCB     "à"
        DCB     2
        DCB     "¿"
        DCB     2
        DCB     "End of Line"
        DCB     &19, 4
        DCB     "ð"
        DCB     3
        DCB     "¿"
        DCB     2
        DCB     "Next Line"
        DCB     &19, 4
        DCB     "æ", 0
        DCB     &F0, 1, &19
        DCD     &F0040805
        DCD     &E6041901
        DCD     &19019000
        DCD     &90040805
        DCD     &E6041901
        DCD     &19013000
        DCD     &30040805
        DCD     &E6041901
        DCD     &1900D000
        DCD     &D0040805
        DCD     &E6041900
        DCD     &1901F000
        DCD     &D000E605
        DCD     &E8041900
        DCD     &1901F000
        DCD     &D000E805
        DCD     &D6041900
        DCD     &1901F001
        DCD     &3001D605
        DCD     &D8041901
        DCD     &1901F001
        DCD     &3001D805
        DCD     &E6041901
        DCD     &1901F002
        DCD     &3002E605
        DCD     &E8041901
        DCD     &1901F002
        DCD     &3002E805
        DCD     &6041901
        DCD     &1901F004
        DCD     &D0040605
        DCD     &8041900
        DCD     &1901F004
        DCD     &D0040805
        DCD     &10041900
        DCB     2
        DCB     "?"
        DCB     2
        DCB     "Line Commands", &19
        DCB     4, 0, 1
        DCD     &634101DF
        DCD     &6E6F6974
        DCD     &41973
        DCB     2, &DF, 1
        DCB     "M/MM  Move"
        DCB     &19, 4, &10
        DCB     3
        DCB     "ß"
        DCB     1
        DCB     "D/DD  Delete", &19
        DCD     &BF020004
        DCB     1
        DCB     "C/CC  Copy"
        DCB     &19
        DCB     4, &10, 3
        DCB     "¿"
        DCB     1
        DCB     "JJ    Justify", &19
        DCB     4
        DCD     &17F0100
        DCB     "Destinations", &19
        DCB     4, 0, 2
        DCD     &2041017F
        DCD     &20202020
        DCD     &65746641
        DCD     &10041972
        DCB     3, &7F, 1
        DCB     "T     Top", &19
        DCB     4, 0, 2
        DCB     "_"
        DCB     1
        DCB     "B     Before"
        DCB     &19, 4
        DCB     &10, 3
        DCB     "_"
        DCB     1
        DCB     "E     End"
        DCB     &19, 4
        DCB     " "
        DCB     1, &1F, 1
        DCB     "Use the Control Key to enter Line Commands"
        DCB     &19, 4
        DCB     "P"
        DCB     1
        DCB     "ÿ", 0
        DCB     "Use Control-R to remove Line Commands"
        DCB     &19, 4
        DCB     " ", 0
        DCB     &7F, 0
        DCB     "Press the Space Bar for previous Help Screen"
        DCB     &19, 4
        DCB     " ", 0
        DCB     &5F, 0
        DCB     "Escape to Edit"
unknowndata_end
string_24mise                                           ; Address &533A, referenced once
        DCB     "%24:%mi:%se", 0
string_we_dyst_mo_ceyr                                  ; Address &5346, referenced once
        DCB     "%we, %dy%st %mo %ce%yr", 0
        ALIGN

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_74                                           ; Address &5360, referenced twice
        Push    "R0-R5,R7-R9,R14"
        MOV     R9,R0
        MOV     R8,R2
        MOV     R7,R3
        LDR     R0,[R12,#256]
        LDR     R2,[R12,#264]
        SUB     R0,R0,R2
        CMP     R0,R1
        MOVCC   R0,#6
        STRCC   R0,[R12,#304]
        BCC     skip_135
        MOV     R0,#OSFile_Load                         ; ="ÿ"
        ADD     R1,R12,#&0C40                           ; =3136
        MOV     R3,#0
        SWI     XOS_File
        BVC     skip_134
        BL      subroutine_70
        MVN     R0,#0
        STR     R0,[R12,#304]
        B       skip_135
skip_134                                                ; Address &53B0, referenced once
        BL      subroutine_178
        BL      subroutine_41
        LDR     R0,[R12,#304]
        CMP     R0,#0
        BEQ     skip_139
        BL      subroutine_34
        BL      subroutine_166
        BL      subroutine_143
        BL      subroutine_141
        BL      subroutine_135
        CMP     R9,#&4C                                 ; ="L"
        MOVEQ   R0,#7
        MOVNE   R0,#8
        MOV     R1,#9
        BL      subroutine_294
        B       skip_135
skip_139                                                ; Address &53F0, referenced once
        ADD     R0,R12,#&0C40                           ; =3136
        ADD     R1,R12,#&09D0                           ; =2512
        LDR     R2,[R12,#284]
        STR     R2,[R12,#400]
        MOV     R3,#&20                                 ; =" "
        STRB    R3,[R0,R2]
        MOV     R2,#&1F                                 ; =31
        BL      subroutine_114
        MOV     R0,R8
        MOV     R1,R7
        BL      subroutine_116
        BL      subroutine_182
        BL      subroutine_187
        MOV     R0,#0
        STR     R0,[R12,#380]
        MOV     R0,#1
        STR     R0,[R12,#548]
        BL      subroutine_281
        BL      subroutine_287
        LDR     R0,[R12,#308]
        CMP     R0,#0
        BLNE    subroutine_291
skip_135                                                ; Address &5448, referenced 3 times
        Pull    "R0-R5,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_79                                           ; Address &544C, referenced twice
        Push    "R4,R5,R14"
loop_141                                                ; Address &5450, referenced twice
        LDR     R0,[R12,#304]
        CMP     R0,#0
        BLNE    subroutine_52
        MOV     R0,#0
        STR     R0,[R12,#304]
        BL      subroutine_82
        CMP     R0,#&CC00
        CMPNE   R0,#&B800
        BNE     skip_128
        BL      subroutine_190
        ADD     R1,R12,#&0C40                           ; =3136
        LDR     R0,[R12,#284]
        MOV     R2,#&0D                                 ; =13
        STRB    R2,[R1,R0]
        MOV     R0,#OSFile_ReadInfo
        SWI     XOS_File
        BVC     skip_56
        BL      subroutine_70
        B       loop_141
skip_56                                                 ; Address &549C, referenced once
        CMP     R0,#1
        MOVEQ   R0,#&CC00
        MOVEQ   R1,R4
        BEQ     skip_128
        CMP     R0,#2
        MOVEQ   R0,#&12                                 ; =18
        MOVNE   R0,#&0A                                 ; =10
        STR     R0,[R12,#304]
        B       loop_141
skip_128                                                ; Address &54C0, referenced twice
        Pull    "R4,R5,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_82                                           ; Address &54C4, referenced once
        Push    "R1,R2,R14"
        LDR     R0,[R12,#284]
        ADD     R1,R12,#&0C40                           ; =3136
        MOV     R2,#&20                                 ; =" "
        STRB    R2,[R1,R0]
loop_40                                                 ; Address &54D8, referenced twice
        MOV     R0,#&1F                                 ; =31
        MOV     R1,#0
        MOV     R2,#4
        BL      subroutine_312
        CMP     R0,#&CC00
        CMPNE   R0,#&B800
        BEQ     skip_32
        CMP     R0,#&8A00
        CMPNE   R0,#&9A00
        BEQ     loop_40
        B       skip_61
skip_32                                                 ; Address &5504, referenced once
        BL      subroutine_59
        LDR     R0,[R12,#284]
        CMP     R0,#0
        MOVNE   R0,#&CC00
        BNE     skip_61
        MOV     R0,#5
        BL      subroutine_52
        B       loop_40
skip_61                                                 ; Address &5524, referenced twice
        Pull    "R1,R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_87                                           ; Address &5528, referenced once
        Push    "R0,R1,R14"
        LDR     R0,[R12,#380]
        LDR     R1,[R12,#376]
        ORRS    R0,R0,R1
        MOVNE   R0,#4
        BLNE    subroutine_52
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_88                                           ; Address &5544, referenced 3 times
        Push    "R0-R2,R7-R9,R14"
        LDR     R9,[R12,#376]
        LDR     R8,[R12,#448]
        BL      subroutine_75
        MOV     R0,R9
        MOV     R1,R8
        BL      subroutine_68
        LDR     R7,[R12,#448]
        CMP     R9,#0
        BEQ     skip_206
        CMP     R7,R8
        BEQ     skip_120
loop_108                                                ; Address &5574, referenced once
        LDR     R0,[R12,#600]
        LDR     R1,[R12,#356]
        MVN     R2,#0
        BL      subroutine_148
        B       skip_66
skip_120                                                ; Address &5588, referenced once
        LDR     R0,[R12,#356]
        MOV     R1,R11
        ADD     R2,R12,#&0400                           ; =1024
        LDR     R3,[R12,#396]
        MOV     R4,#0
        BL      subroutine_149
        B       skip_66
skip_206                                                ; Address &55A4, referenced once
        CMP     R7,R8
        BNE     loop_108
skip_66                                                 ; Address &55AC, referenced twice
        Pull    "R0-R2,R7-R9,PC"
code_16                                                 ; Address &55B0, referenced 4 times
        ADD     R13,R12,#&1400                          ; =5120
        LDR     R0,[R12,#408]
        CMP     R0,#0
        BEQ     skip_115
        BL      subroutine_178
        LDR     R0,[R12,#444]
        CMP     R0,#0
        BLEQ    subroutine_259
        LDR     R0,[R12,#444]
        CMP     R0,#0
        BEQ     skip_159
        LDR     R0,[R12,#440]
        CMP     R0,#&8000
        BCC     skip_159
        BL      subroutine_283
        ANDS    R0,R0,#2
        BEQ     skip_159
        BL      subroutine_48
        LDR     R0,[R12,#412]
        CMP     R0,#0
        BLNE    subroutine_49
        B       skip_119
skip_159                                                ; Address &5608, referenced 3 times
        BL      subroutine_141
        MOV     R0,#0
        STR     R0,[R12,#408]
        LDR     R1,[R12,#412]
        CMP     R1,#0
        STRNE   R0,[R12,#412]
        BLNE    subroutine_135
skip_115                                                ; Address &5624, referenced once
        BL      subroutine_128
skip_119                                                ; Address &5628, referenced once
        MOV     R0,#0
        BL      subroutine_279
        STR     R0,[R12,#372]
        BL      subroutine_179
        B       code_16

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_100                                          ; Address &563C, referenced twice
        Push    "R1,R8,R9,R14"
        LDR     R1,[R12,#496]
        LDRB    R9,[R12,#2608]
        ADD     R8,R12,#&0400                           ; =1024
        LDRB    R8,[R8,R0]
        CMP     R1,#0
        BNE     skip_199
        CMP     R9,R8
        MVNNE   R0,#0
        Pull    "R1,R8,R9,PC",NE
skip_199                                                ; Address &5664, referenced once
        Push    "R2-R6"
        MVN     R4,#0
        MOV     R2,R0
        MOV     R3,#0
        CMP     R1,#0
        BEQ     code_22
loop_63                                                 ; Address &567C, referenced twice
        CMP     R9,#&20                                 ; =" "
        BEQ     skip_197
        LDR     R6,[R12,#708]
        CMP     R9,R6
        ORREQ   R1,R1,#2
        BEQ     skip_75
        LDR     R6,[R12,#704]
        CMP     R9,R6
        ANDEQ   R1,R1,#5
        BEQ     skip_75
        LDR     R6,[R12,#696]
        CMP     R9,R6
        ADDEQ   R2,R2,#1
        ADDEQ   R8,R12,#&0400                           ; =1024
        LDREQB  R8,[R8,R2]
        BEQ     skip_75
        LDR     R6,[R12,#700]
        CMP     R9,R6
        ORREQ   R1,R1,#4
        ADDEQ   R5,R3,#1
        MVNEQ   R4,#0
        BEQ     skip_75
skip_197                                                ; Address &56D4, referenced once
        TST     R1,#2
        BEQ     code_22
        CMP     R8,#&61                                 ; ="a"
        BCC     skip_72
        CMP     R8,#&7A                                 ; ="z"
        ANDLE   R8,R8,#&DF                              ; ="ß"
skip_72                                                 ; Address &56EC, referenced once
        CMP     R9,#&61                                 ; ="a"
        BCC     code_22
        CMP     R9,#&7A                                 ; ="z"
        ANDLE   R9,R9,#&DF                              ; ="ß"
code_22                                                 ; Address &56FC, referenced 4 times
        CMP     R8,R9
        ADD     R2,R2,#1
        ADD     R8,R12,#&0400                           ; =1024
        LDRB    R8,[R8,R2]
        BNE     skip_74
        CMN     R4,#1
        MOVEQ   R4,R2
        B       skip_75
skip_74                                                 ; Address &571C, referenced once
        TST     R1,#4
        MVNEQ   R0,#0
        BEQ     skip_92
        CMN     R4,#1
        BEQ     skip_96
        MOV     R2,R4
        ADD     R8,R12,#&0400                           ; =1024
        LDRB    R8,[R8,R2]
        MOV     R3,R5
        ADD     R9,R12,#&0A30                           ; =2608
        LDRB    R9,[R9,R3]
        MVN     R4,#0
        B       loop_63
skip_75                                                 ; Address &5750, referenced 5 times
        ADD     R3,R3,#1
        LDR     R9,[R12,#364]
        CMP     R3,R9
        BEQ     skip_179
skip_96                                                 ; Address &5760, referenced once
        LDR     R9,[R12,#396]
        CMP     R2,R9
        BCS     skip_97
        ADD     R9,R12,#&0A30                           ; =2608
        LDRB    R9,[R9,R3]
        TST     R1,#1
        BEQ     code_22
        BNE     loop_63
skip_97                                                 ; Address &5780, referenced once
        ADD     R8,R12,#&0A30                           ; =2608
loop_34                                                 ; Address &5784, referenced once
        LDRB    R9,[R8,R3]
        CMP     R9,#&20                                 ; =" "
        LDRNE   R6,[R12,#704]
        CMPNE   R9,R6
        LDRNE   R6,[R12,#708]
        CMPNE   R9,R6
        LDRNE   R6,[R12,#696]
        CMPNE   R9,R6
        LDRNE   R6,[R12,#700]
        CMPNE   R9,R6
        MVNNE   R0,#0
        BNE     skip_92
        ADD     R3,R3,#1
        LDR     R9,[R12,#364]
        CMP     R3,R9
        BCC     loop_34
skip_179                                                ; Address &57C4, referenced once
        SUB     R0,R2,R0
skip_92                                                 ; Address &57C8, referenced twice
        Pull    "R2-R6"
        Pull    "R1,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_112                                          ; Address &57D0, referenced 14 times
        Push    "R0-R2,R14"
        MOV     R2,#&20                                 ; =" "
loop_36                                                 ; Address &57D8, referenced once
        SUBS    R1,R1,#1
        STRPLB  R2,[R0],#1
        BPL     loop_36
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_114                                          ; Address &57E8, referenced 32 times
        Push    "R0-R4,R14"
        CMP     R2,#0
        BEQ     skip_85
        CMP     R0,R1
        BEQ     skip_85
        MOVCS   R3,#1
        ADDCC   R0,R0,R2
        SUBCC   R0,R0,#1
        ADDCC   R1,R1,R2
        SUBCC   R1,R1,#1
        MVNCC   R3,#0
loop_44                                                 ; Address &5814, referenced once
        LDRB    R4,[R0],R3
        STRB    R4,[R1],R3
        SUBS    R2,R2,#1
        BNE     loop_44
skip_85                                                 ; Address &5824, referenced twice
        Pull    "R0-R4,PC"

message_table
        DCB     255

        DCB     &1F, 1, 4, "This is not a valid program"
        DCB     255

        DCB     &1F, 1, 4, "The program contains too many"
        DCB     &1F, 1, 5, "statements"
        DCB     255

        DCB     "This is not a valid program"
        DCB     255
        
        DCB     7, "This program has not been saved"
        DCB     255

        DCB     "You must enter a program name"
        DCB     255

        DCB     "The named program is too big"
        DCB     255

        DCB     &1F, 9, 0, "Load a Program"
        DCB     255

        DCB     &1F, 8, 0, "Append a Program"
        DCB     255

        DCB     &1F, 0, 3, "Program name :"
        DCB     255

        DCB     "This program could not be found"
        DCB     255

        DCB     &1F, 13, 0, "Error"
        DCB     &1F, 1, 8, "Press ESCAPE to continue"
        DCB     255

        DCB     &1F, 1, 4, "There is not enough memory"
        DCB     &1F, 1, 5, "to update the program"
        DCB     255

        DCB     &1F, 1, 4, "This statement is too long"
        DCB     255

        DCB     &1F, 12, 0, "Warning"
        DCB     255

        DCB     &1F, 0, 3, "This program has not been saved"
        DCB     &1F, 2, 5, "Press NEW again to confirm"
        DCB     &1F, 2, 6, "Press ESCAPE to cancel"
        DCB     255

        DCB     &1F, 1, 3, "You have used the maximum"
        DCB     &1F, 1, 4, "number of statements. No more"
        DCB     &1F, 1, 5, "can be added"
        DCB     255

        DCB     &1F, 1, 3, "The renumber has failed."
        DCB     &1F, 1, 4, "Unmatched line numbers have"
        DCB     &1F, 1, 5, "been replaced by @@@@"
        DCB     255

        DCB     "You cannot load a directory"
        DCB     255

        DCB     &1F, 8, 0, "Search and Edit"
        DCB     255

        DCB     &1F, 0, 3, "Search for :"
        DCB     255

        DCB     "The string could not be found"
        DCB     255

        DCB     &1F, 13, 0, "Search"
        DCB     255

        DCB     "You must enter a search string"
        DCB     255

        DCB     &1F, 7, 0, "Search and Replace"
        DCB     255

        DCB     &1F, 6, 0, "Conditional Replace"
        DCB     255

        DCB     &1F, 0, 3, "Search for :"
        DCB     &1F, 0, 5, "Replace by :"
        DCB     &1F, 0, 6, "<"
        DCB     255

        DCB     &1F, 1, 4, "This statement is too long"
        DCB     &1F, 1, 5, "to be changed"
        DCB     255

        DCB     &1F, 7, 0, "Error at line"
        DCB     &1F, 1, 8, "Press ESCAPE to continue"
        DCB     255

        DCB     "The search string has no text"
        DCB     255

        DCB     &1F, 1, 4, "You have entered a destination"
        DCB     &1F, 1, 5, "but no command"
        DCB     255

        DCB     &1F, 1, 4, "You have entered too many"
        DCB     &1F, 1, 5, "commands"
        DCB     255

        DCB     &1F, 1, 4, "You do not need to enter a"
        DCB     &1F, 1, 5, "destination for this command"
        DCB     255

        DCB     &1F, 1, 4, "You need to specify both ends"
        DCB     &1F, 1, 5, "of the range for this command"
        DCB     255

        DCB     &1F, 1, 4, "You should not enter two"
        DCB     &1F, 1, 5, "different commands"
        DCB     255

        DCB     &1F, 1, 3, "You do not need to enter a"
        DCB     &1F, 1, 4, "repetition factor for this"
        DCB     &1F, 1, 5, "command"
        DCB     255

        DCB     &1F, 1, 4, "You must enter a destination"
        DCB     &1F, 1, 5, "for this command"
        DCB     255

        DCB     &1F, 1, 3, "You have entered a destination"
        DCB     &1F, 1, 4, "which is not valid for this"
        DCB     &1F, 1, 5, "command"
        DCB     255

        DCB     &1F, 1, 3, "The destination must be"
        DCB     &1F, 1, 4, "outside the block being moved"
        DCB     &1F, 1, 5, "or copied"
        DCB     255

        DCB     &1F, 1, 3, "The first statement in the"
        DCB     &1F, 1, 4, "block to be justified must not"
        DCB     &1F, 1, 5, "be blank"
        DCB     255

        DCB     &1F, 1, 4, "You have not yet entered a"
        DCB     &1F, 1, 5, "search string"
        DCB     255

        DCB     &1F, 1, 4, "You have not entered any"
        DCB     &1F, 1, 5, "markers"
        DCB     255

        DCB     &1F, 1, 4, "The combined length of these"
        DCB     &1F, 1, 5, "statements would be too big"
        DCB     255

        DCB     &1F, 9, 0, "Save a Program"
        DCB     255

        DCB     &1F, 0, 3, "Program name :"
        DCB     255

        DCB     "The name has been truncated"
        DCB     255

        DCB     &1F, 0, 7, 7, "Limit is "
        DCB     255

        DCB     &1F, 1, 4, "This statement is too long to"
        DCB     &1F, 1, 5, "be split"
        DCB     255

        DCB     &1F, 1, 4, "You have not entered any"
        DCB     &1F, 1, 5, "line commandsÿ Replace? (Y/N) "
        DCB     255

        DCB     &1F, 9, 0, "Screen Options"
        DCB     255

        DCB     &1F, 0, 2, "Mode              :"
        DCB     &1F, 0, 4, "Foreground colour :"
        DCB     &1F, 0, 5, "Background colour :"
        DCB     &1F, 0, 7, "(Space to choose a colour)"
        DCB     255

        DCB     "You must enter a mode"
        DCB     255

        DCB     "This is not a valid mode"
        DCB     255

        DCB     "Colours must not be the same"
        DCB     255

        DCB     &1F, 10, 0, "Edit Options"
        DCB     255

        DCB     &1F, 0, 2, "Tab length      :"
        DCB     &1F, 0, 3, "Auto-indent     :   (Y/N)"
        DCB     &1F, 0, 5, "Insert/Overtype :   (I/O)"
        DCB     &1F, 0, 7, "Page Up/Down for further options"
        DCB     255

        DCB     &1F, 11, 0, "Wildcards"
        DCB     255

        DCB     &1F, 0, 2, "Single character     :"
        DCB     &1F, 0, 3, "Multiple characters  :"
        DCB     &1F, 0, 5, "Case sensitivity off :"
        DCB     &1F, 0, 6, "Case sensitivity on  :"
        DCB     255

        DCB     &1F, 11, 0, "Go to Line"
        DCB     255

        DCB     &1F, 0, 3, "Line number :"
        DCB     255

        DCB     "You must enter a tab value"
        DCB     255

        DCB     "Tab must be between 0 and 63"
        DCB     255

        DCB     "Wildcards must not be the same"
        DCB     255

        DCB     "You must enter a line number"
        DCB     255

        DCB     "The maximum line is 65279"
        DCB     255

        DCB     "There are too many statements"
        DCB     255

        DCB     "Not enough memory for this mode"
        DCB     255

        DCB     &1F, 6, 0, "Program Information"
        DCB     255

        DCB     &1F, 0, 2, "Program name :"
        DCB     &1F, 0, 8, "Page Up/Down for next screen"
        DCB     255

        DCB     &1F, 0, 2, "Last search string"
        DCB     &1F, 0, 4, "Line commands"
        DCB     &1F, 0, 6, "Marked lines"
        DCB     &1F, 0, 8, "Page Up/Down for previous screen"
        DCB     255

        DCB     &1F, 0, 6, "Last saved at          on"
        DCB     255

        DCB     &1F, 9, 0, "Cursor Options"
        DCB     255

        DCB     &1F, 0, 3, "Flashing cursor :   (Y/N)"
        DCB     255

        ALIGN

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_119                                          ; Address &633C, referenced 5 times
        Push    "R0,R14"
        LDR     R0,[R12,#380]
        CMP     R0,#0
        MOVEQ   R0,#1
        STREQ   R0,[R12,#380]
        BLEQ    subroutine_103
        MOV     R0,#1
        STR     R0,[R12,#548]
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_121                                          ; Address &6360, referenced 11 times
        Push    "R0,R1,R14"
        LDR     R0,[R12,#376]
        MOV     R1,#1
        STR     R1,[R12,#376]
        LDR     R1,[R12,#380]
        ORRS    R0,R0,R1
        BLEQ    subroutine_103
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_124                                          ; Address &6380, not referenced
        Push    "R0-R2,R14"
        BL      subroutine_24
        CMP     R1,R11
        BNE     skip_94
        BL      subroutine_142
        STR     R0,[R12,#292]
        B       skip_177
skip_94                                                 ; Address &639C, referenced once
        BL      subroutine_88
        BL      subroutine_24
        MOV     R2,R0
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#320]
        BL      subroutine_153
        BL      subroutine_162
skip_177                                                ; Address &63B8, referenced once
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_128                                          ; Address &63BC, referenced 3 times
        Push    "R0-R3,R14"
loop_48                                                 ; Address &63C0, referenced once
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#356]
        BL      subroutine_313
        LDR     R0,[R12,#448]
        LDR     R3,[R12,#356]
        ADD     R3,R0,R3
        CMP     R2,R3
        BCC     skip_95
        MOV     R3,R1
        LDR     R1,[R12,#320]
        SUB     R0,R0,#1
        BL      subroutine_164
        ADD     R0,R0,R3
        STR     R0,[R12,#292]
        B       loop_48
skip_95                                                 ; Address &63FC, referenced once
        ADD     R1,R1,#6
        BL      subroutine_140
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_133                                          ; Address &6408, referenced once
        Push    "R0-R2,R14"
        BL      subroutine_142
        LDR     R1,[R12,#320]
        LDR     R2,[R12,#292]
        CMP     R0,R2
        ADDNE   R1,R1,R2
        BNE     skip_172
        MOV     R0,R11
        BL      subroutine_225
        CMP     R0,#0
        BNE     skip_171
        BL      subroutine_171
        MOV     R0,R2
        BL      subroutine_153
skip_172                                                ; Address &6440, referenced once
        STR     R1,[R12,#292]
skip_171                                                ; Address &6444, referenced once
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_137                                          ; Address &6448, not referenced
        Push    "R0,R1,R9,R14"
        ADD     R0,R12,#&0A70                           ; =2672
        LDR     R1,[R12,#384]
        BL      subroutine_151
        MOVS    R9,R0
        LDREQ   R0,[R12,#532]
        BEQ     skip_169
        LDR     R1,[R12,#320]
        LDR     R0,[R12,#448]
        BL      subroutine_164
        CMP     R9,R0
        SUBEQ   R9,R9,#1
        MOV     R0,R9
skip_169                                                ; Address &647C, referenced once
        STR     R0,[R12,#292]
        Pull    "R0,R1,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_138                                          ; Address &6484, referenced 4 times
        Push    "R0,R1,R14"
        LDR     R0,[R12,#292]
        CMP     R0,#0
        BNE     skip_167
        LDR     R0,[R12,#264]
        CMP     R0,R11
        BEQ     skip_102
        BL      subroutine_266
        LDR     R0,[R12,#448]
        LDR     R1,[R12,#320]
        BL      subroutine_164
skip_167                                                ; Address &64B0, referenced once
        SUB     R0,R0,#1
        STR     R0,[R12,#292]
skip_102                                                ; Address &64B8, referenced once
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_142                                          ; Address &64BC, referenced 3 times
        Push    "R1,R2,R14"
        LDR     R0,[R12,#448]
        SUB     R0,R0,#1
        LDR     R1,[R12,#320]
        BL      subroutine_164
        MOV     R2,R0
        LDR     R0,[R12,#292]
        BL      subroutine_153
        ADD     R0,R1,R2
        Pull    "R1,R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_144                                          ; Address &64E4, not referenced
        Push    "R14"
        BL      subroutine_138
        BL      subroutine_138
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_147                                          ; Address &64F4, referenced 4 times
        Push    "R0,R1,R14"
        LDR     R0,[R12,#448]
        LDR     R1,[R12,#320]
        BL      subroutine_164
        SUB     R1,R0,#1
        LDR     R0,[R12,#292]
        CMP     R0,R1
        ADDNE   R0,R0,#1
        BNE     skip_105
        MOV     R0,R11
        BL      subroutine_225
        CMP     R0,#0
        BNE     skip_106
        BL      subroutine_171
        MOV     R0,#0
skip_105                                                ; Address &6530, referenced once
        STR     R0,[R12,#292]
skip_106                                                ; Address &6534, referenced once
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_150                                          ; Address &6538, not referenced
        Push    "R14"
        BL      subroutine_147
        BL      subroutine_147
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_152                                          ; Address &6548, referenced twice
        Push    "R0,R1,R14"
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#320]
        BL      subroutine_153
        LDR     R1,[R12,#320]
        BL      subroutine_164
        STR     R0,[R12,#292]
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_154                                          ; Address &6568, not referenced
        Push    "R0,R1,R14"
        ADD     R0,R12,#&0A70                           ; =2672
        LDR     R1,[R12,#384]
        BL      subroutine_193
        CMN     R0,#1
        LDREQ   R0,[R12,#532]
        STR     R0,[R12,#292]
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_155                                          ; Address &6588, not referenced
        Push    "R0-R2,R14"
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#320]
        BL      subroutine_153
        LDR     R0,[R12,#356]
        CMP     R0,#0
        BNE     skip_156
        STR     R1,[R12,#292]
        B       skip_44
skip_156                                                ; Address &65AC, referenced once
        BL      subroutine_88
        MOV     R2,#0
        BL      subroutine_162
skip_44                                                 ; Address &65B8, referenced once
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_158                                          ; Address &65BC, referenced once
        Push    "R0,R1,R14"
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#320]
        CMP     R0,R1
        SUBCS   R0,R0,R1
        BCS     skip_153
        LDR     R0,[R12,#264]
        CMP     R11,R0
        BEQ     skip_152
        BL      subroutine_266
        BL      subroutine_142
skip_153                                                ; Address &65E8, referenced once
        STR     R0,[R12,#292]
skip_152                                                ; Address &65EC, referenced once
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_162                                          ; Address &65F0, referenced 5 times
        Push    "R0-R2,R8,R9,R14"
        MOV     R8,R1
        MOV     R9,R2
        LDR     R0,[R12,#560]
        LDR     R2,[R0,R9,LSL #2]
        MOV     R11,R2
        BL      subroutine_282
        LDR     R1,[R12,#324]
        BL      subroutine_241
        STR     R0,[R12,#356]
        SUB     R0,R9,R0
        LDR     R1,[R12,#320]
        BL      subroutine_164
        ADD     R0,R0,R8
        STR     R0,[R12,#292]
        Pull    "R0-R2,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_164                                          ; Address &6630, referenced 14 times
        Push    "R1,R2,R14"
        MOV     R2,#0
loop_107                                                ; Address &6638, referenced once
        MOVS    R0,R0,LSR #1
        ADDCS   R2,R2,R1
        ADD     R1,R1,R1
        BNE     loop_107
        MOV     R0,R2
        Pull    "R1,R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_166                                          ; Address &6650, referenced 4 times
        Push    "R0,R14"
        LDR     R11,[R12,#264]
        MOV     R0,#&0D                                 ; =13
        STRB    R0,[R11,#0]
        MOV     R0,#&FF                                 ; ="ÿ"
        STRB    R0,[R11,#1]
        BL      subroutine_261
        BL      subroutine_281
        BL      subroutine_287
        BL      subroutine_187
        BL      subroutine_182
        BL      subroutine_177
        MOV     R0,#0
        STR     R0,[R12,#380]
        STR     R0,[R12,#308]
        MOV     R0,#1
        STR     R0,[R12,#548]
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_170                                          ; Address &6698, not referenced
        Push    "R14"
        BL      subroutine_152
        BL      subroutine_133
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_171                                          ; Address &66A8, referenced twice
        Push    "R0-R9,R14"
        MVN     R9,#0
        LDR     R8,[R12,#376]
        LDR     R7,[R12,#448]
        MOV     R6,R11
        LDR     R4,[R12,#600]
        BL      subroutine_75
        MOV     R0,R8
        MOV     R1,R7
        BL      subroutine_68
        LDR     R5,[R12,#448]
        LDRB    R0,[R11,#3]
        ADD     R11,R11,R0
        BL      subroutine_282
        LDR     R0,[R12,#448]
        ADD     R0,R0,R5
        LDR     R1,[R12,#324]
        ADD     R1,R1,#1
        CMP     R0,R1
        BLE     skip_145
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        BL      subroutine_141
        B       skip_124
skip_145                                                ; Address &6708, referenced once
        CMP     R7,R5
        MOVEQ   R9,#1
        MOV     R0,R5
        LDR     R1,[R12,#448]
        MOV     R2,R6
        BL      subroutine_60
        CMP     R0,#0
        MVNNE   R9,#0
        CMP     R7,R5
        CMPEQ   R8,#0
        CMPEQ   R9,#1
        MOVNE   R0,R4
        LDR     R1,[R12,#356]
        MOVNE   R2,R9
        BLNE    subroutine_148
        ADD     R0,R1,R5
        STR     R0,[R12,#356]
skip_124                                                ; Address &674C, referenced once
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_177                                          ; Address &6750, referenced 3 times
        Push    "R0,R1,R14"
        ADD     R0,R12,#&09D0                           ; =2512
        MOV     R1,#&20                                 ; =" "
        BL      subroutine_112
        MOV     R0,#0
        STR     R0,[R12,#400]
        MVN     R0,#0
        STR     R0,[R12,#580]
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_180                                          ; Address &6774, referenced 8 times
        Push    "R0,R1,R14"
        ADD     R0,R12,#&0C40                           ; =3136
        MOV     R1,#&20                                 ; =" "
        BL      subroutine_112
        MOV     R0,#0
        STR     R0,[R12,#284]
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_182                                          ; Address &6790, referenced 8 times
        Push    "R0,R14"
        LDR     R0,data_alt5_20202020
        STR     R0,[R12,#516]
        STR     R0,[R12,#520]
        STR     R0,[R12,#524]
        STR     R0,[R12,#528]
        MVN     R0,#0
        STR     R0,[R12,#584]
        STR     R0,[R12,#588]
        STR     R0,[R12,#592]
        STR     R0,[R12,#596]
        Pull    "R0,PC"

data_alt5_20202020
        DCD     &20202020

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_187                                          ; Address &67C4, referenced 4 times
        Push    "R0-R2,R14"
        MVN     R0,#0
        ADD     R1,R12,#&0260                           ; =608
        MOV     R2,#4
loop_164                                                ; Address &67D4, referenced once
        STR     R0,[R1],#4
        SUBS    R2,R2,#1
        BNE     loop_164
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_190                                          ; Address &67E4, referenced 9 times
        Push    "R0,R14"
        MOV     R0,#0
        BL      subroutine_52
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_193                                          ; Address &67F4, referenced 11 times
        Push    "R1-R3,R14"
        MOV     R2,#0
loop_13                                                 ; Address &67FC, referenced once
        CMP     R2,R1
        MVNEQ   R2,#0
        BEQ     skip_137
        LDRB    R3,[R0,R2]
        CMP     R3,#&20                                 ; =" "
        ADDEQ   R2,R2,#1
        BEQ     loop_13
skip_137                                                ; Address &6818, referenced once
        MOV     R0,R2
        Pull    "R1-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_195                                          ; Address &6820, referenced 6 times
        Push    "R1,R14"
        LDR     R0,[R12,#264]
        LDRB    R0,[R0,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        MOVNE   R0,#1
        BNE     skip_160
        ADD     R0,R12,#&0A70                           ; =2672
        LDR     R1,[R12,#384]
        BL      subroutine_193
        CMN     R0,#1
        MOVEQ   R0,#0
        MOVNE   R0,#1
skip_160                                                ; Address &6850, referenced once
        Pull    "R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_198                                          ; Address &6854, referenced 3 times
        Push    "R0-R3,R14"
        BL      subroutine_180
        CMN     R0,#1
        BEQ     skip_174
        BL      subroutine_35
        LDR     R0,[R12,#404]
        STR     R0,[R12,#284]
        SUB     R0,R0,#1
        ADD     R1,R12,#0
        ADD     R2,R12,#&0C40                           ; =3136
loop_43                                                 ; Address &687C, referenced once
        LDRB    R3,[R1,R0]
        STRB    R3,[R2],#1
        SUBS    R0,R0,#1
        BPL     loop_43
skip_174                                                ; Address &688C, referenced once
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; do_osbyte_x0_y0
; => R0 = OS_Byte reason code
; <= Return values as though OS_Byte,R0,0,0 was performed
;
do_osbyte_x0_y0
        Push    "R14"
        MOV     R1,#0
        MOV     R2,#0
        SWI     OS_Byte
        Pull    "PC"

; ******************************************************************************
;
; do_osbyte_y0
; => R0 = OS_Byte reason code
;    R1 = OS_Byte parameter
; <= Return values as though OS_Byte,R0,R1,0 was performed
;
do_osbyte_y0
        Push    "R14"
        MOV     R2,#0
        SWI     OS_Byte
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_205                                          ; Address &68B4, not referenced
        Push    "R0-R4,R8,R9,R14"
        LDR     R0,[R12,#376]
        LDR     R1,[R12,#448]
        BL      subroutine_75
        BL      subroutine_68
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#356]
        BL      subroutine_313
        MOV     R8,R1
        MOV     R9,R2
        BL      subroutine_24
        LDR     R2,[R12,#560]
        LDR     R3,[R2,#0]
        CMP     R1,R3
        MOVNE   R0,R1
        BNE     skip_193
        LDRB    R3,[R1,#3]
        ADD     R3,R1,R3
        LDRB    R4,[R3,#1]
        CMP     R4,#&FF                                 ; ="ÿ"
        MOVNE   R0,R3
        MOVEQ   R0,R11
skip_193                                                ; Address &690C, referenced once
        BL      subroutine_301
        STR     R0,[R12,#624]
        BL      subroutine_48
        LDR     R3,[R2,R9,LSL #2]
        CMP     R3,#0
        MOVNE   R0,R9
        BLEQ    subroutine_24
        MOV     R2,R0
        MOV     R1,R8
        BL      subroutine_162
        Pull    "R0-R4,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_207                                          ; Address &6938, not referenced
        Push    "R0-R2,R6-R9,R14"
        LDR     R0,[R12,#376]
        LDR     R1,[R12,#448]
        BL      subroutine_75
        BL      subroutine_68
        LDR     R9,[R12,#560]
        LDR     R0,[R9]
        LDR     R1,[R12,#264]
        CMP     R0,R1
        BNE     skip_202
        LDR     R11,[R12,#264]
        BL      subroutine_282
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#320]
        BL      subroutine_153
        STR     R1,[R12,#292]
        B       skip_205
skip_202                                                ; Address &6984, referenced once
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#356]
        BL      subroutine_313
        MOV     R8,R2
        MOV     R7,R1
        LDR     R0,[R9]
        BL      subroutine_310
        LDR     R0,[R12,#396]
        BL      subroutine_46
        MOV     R6,R0
        LDR     R0,[R12,#632]
        BL      subroutine_192
        MOV     R0,R1
        BL      subroutine_310
        LDR     R0,[R12,#396]
        BL      subroutine_46
        ADD     R0,R0,R6
        LDR     R2,[R12,#324]
        ADD     R2,R2,#1
        CMP     R0,R2
        MOVGT   R0,R1
        LDRLE   R0,[R9]
        BL      subroutine_212
        BL      subroutine_48
        LDR     R0,[R9,R8,LSL #2]
        CMP     R0,#0
        BNE     skip_189
        BL      subroutine_24
        MOV     R8,R0
skip_189                                                ; Address &69F8, referenced once
        MOV     R1,R7
        MOV     R2,R8
        BL      subroutine_162
skip_205                                                ; Address &6A04, referenced once
        Pull    "R0-R2,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_211                                          ; Address &6A08, referenced twice
        Push    "R1,R9,R14"
        MOV     R9,#0
        MOV     R1,#&1B                                 ; =27
loop_60                                                 ; Address &6A14, referenced once
        MOVS    R0,R0,LSR #1
        ADDCS   R9,R9,#1
        SUBS    R1,R1,#1
        BNE     loop_60
        EOR     R9,R9,#&1F                              ; =31
        MOV     R0,R9,LSL #27
        Pull    "R1,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_217                                          ; Address &6A30, referenced once
        Push    "R0-R2,R4-R9,R14"
        LDR     R9,[R12,#724]
loop_157                                                ; Address &6A38, referenced once
        LDRB    R0,[R9],#1
        CMP     R0,#&20                                 ; =" "
        BEQ     loop_157
        CMP     R0,#&0D                                 ; =13
        BEQ     skip_231
        SUB     R9,R9,#1
        MOV     R8,#0
        MOV     R4,#0
        MOV     R5,#0
        MOV     R6,#1
        CMP     R0,#&2E                                 ; ="."
        MOVEQ   R7,#1
        BEQ     code_25
        MOV     R7,#0
loop_95                                                 ; Address &6A70, referenced once
        CMP     R0,#&30                                 ; ="0"
        BCC     skip_454
        CMP     R0,#&39                                 ; ="9"
        BLE     skip_453
skip_454                                                ; Address &6A80, referenced once
        CMP     R0,#&20                                 ; =" "
        MOVEQ   R5,#1
        MOVNE   R7,#0
        MOVNE   R6,#0
        B       code_25
skip_453                                                ; Address &6A94, referenced once
        MOV     R7,#0
        CMP     R5,#0
        MOVNE   R6,#0
        BNE     code_25
        SUB     R0,R0,#&30                              ; ="0"
        ADD     R1,R0,R4,LSL #3
        ADD     R4,R1,R4,LSL #1
        CMP     R4,#&FF00
        MOVCS   R6,#0
code_25                                                 ; Address &6AB8, referenced 4 times
        ADD     R8,R8,#1
        LDRB    R0,[R9,R8]
        CMP     R0,#&0D                                 ; =13
        BEQ     skip_223
        CMP     R6,#0
        BEQ     code_25
        B       loop_95
skip_223                                                ; Address &6AD4, referenced once
        CMP     R7,#0
        BEQ     skip_227
        LDR     R0,[R12,#268]
        LDR     R1,[R12,#552]
        CMP     R0,R1
        BNE     skip_231
        LDR     R0,[R12,#624]
        BL      subroutine_192
        CMP     R0,#0
        BEQ     skip_231
        LDR     R0,[R12,#600]
        BL      subroutine_192
        CMP     R0,#0
        BEQ     skip_231
        MOV     R11,R0
        BL      subroutine_282
        BL      subroutine_216
        B       skip_236
skip_227                                                ; Address &6B1C, referenced once
        CMP     R6,#0
        BEQ     skip_229
        MOV     R0,R4
        BL      subroutine_260
        B       skip_236
skip_229                                                ; Address &6B30, referenced once
        BL      subroutine_269
        CMP     R8,#&1F                                 ; =31
        MOVCS   R2,#&1F                                 ; =31
        MOVCC   R2,R8
        STR     R2,[R12,#508]
        MOV     R0,R9
        ADD     R1,R12,#&0A50                           ; =2640
        BL      subroutine_114
        BL      subroutine_28
        BL      subroutine_16
        BL      subroutine_229
        BL      subroutine_232
        CMP     R0,#0
        BEQ     skip_442
        MOV     R11,R0
        BL      subroutine_282
        STR     R1,[R12,#292]
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        B       skip_236
skip_442                                                ; Address &6B80, referenced once
        SWI     OS_WriteI+7
skip_231                                                ; Address &6B84, referenced 4 times
        BL      subroutine_281
skip_236                                                ; Address &6B88, referenced 3 times
        LDR     R0,[R12,#604]
        BL      subroutine_192
        CMP     R0,#0
        LDRNE   R0,[R12,#628]
        BLNE    subroutine_192
        CMP     R0,#0
        BLEQ    subroutine_287
        Pull    "R0-R2,R4-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_229                                          ; Address &6BA8, referenced twice
        Push    "R0-R9,R14"
        ADD     R0,R12,#&0A30                           ; =2608
        LDR     R1,[R12,#364]
        MOV     R2,#2
        MOV     R3,#0
        MOV     R9,#0
        SUBS    R1,R1,#1
        BMI     skip_248
        LDR     R4,[R12,#704]
        LDR     R5,[R12,#708]
        LDR     R6,[R12,#696]
        LDR     R7,[R12,#700]
loop_138                                                ; Address &6BD8, referenced once
        LDRB    R8,[R0,R1]
        CMP     R8,#&20                                 ; =" "
        BEQ     skip_242
        CMP     R8,R4
        CMPNE   R8,R5
        CMPNE   R8,R7
        ORREQ   R2,R2,#1
        BEQ     skip_427
        CMP     R8,R6
        ORREQ   R2,R2,#1
        BEQ     skip_244
skip_242                                                ; Address &6C04, referenced once
        AND     R2,R2,#1
        CMP     R8,#&20                                 ; =" "
        BNE     skip_245
skip_244                                                ; Address &6C10, referenced once
        MOV     R9,#1
        CMP     R3,#0
        BEQ     skip_427
skip_245                                                ; Address &6C1C, referenced once
        ADD     R3,R3,#1
skip_427                                                ; Address &6C20, referenced twice
        SUBS    R1,R1,#1
        BPL     loop_138
skip_248                                                ; Address &6C28, referenced once
        CMP     R3,#0
        STREQ   R9,[R12,#504]
        STRNE   R3,[R12,#504]
        MOV     R0,R2,LSR #1
        STR     R0,[R12,#500]
        AND     R2,R2,#1
        STR     R2,[R12,#496]
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_237                                          ; Address &6C48, referenced twice
        Push    "R1,R2,R6-R9,R14"
        BL      subroutine_180
        MOV     R9,#0
        LDR     R8,[R12,#264]
        LDRB    R0,[R8,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        BEQ     skip_265
        LDRB    R7,[R8,#3]
        ADD     R6,R8,#4
loop_5                                                  ; Address &6C6C, referenced once
        LDRB    R0,[R6],#1
        CMP     R0,#&20                                 ; =" "
        BEQ     loop_5
        CMP     R0,#&F4                                 ; ="ô"
        BNE     skip_265
loop_102                                                ; Address &6C80, referenced once
        LDRB    R0,[R6],#1
        CMP     R0,#&20                                 ; =" "
        BEQ     loop_102
        CMP     R0,#&3E                                 ; =">"
        BNE     skip_265
loop_77                                                 ; Address &6C94, referenced once
        LDRB    R0,[R6],#1
        CMP     R0,#&20                                 ; =" "
        BEQ     loop_77
        CMP     R0,#&0D                                 ; =13
        BEQ     skip_265
        ADD     R1,R12,#&0C40                           ; =3136
        MOV     R2,#0
loop_69                                                 ; Address &6CB0, referenced once
        CMP     R0,#&20                                 ; =" "
        CMPNE   R0,#&0D                                 ; =13
        BEQ     skip_263
        CMP     R2,#&1F                                 ; =31
        MOVEQ   R9,#1
        BEQ     skip_263
        STRB    R0,[R1],#1
        ADD     R2,R2,#1
        LDRB    R0,[R6],#1
        B       loop_69
skip_263                                                ; Address &6CD8, referenced twice
        STR     R2,[R12,#284]
skip_265                                                ; Address &6CDC, referenced 4 times
        MOV     R0,R9
        Pull    "R1,R2,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_244                                          ; Address &6CE4, referenced twice
        Push    "R0,R1,R3-R9,R14"
        LDR     R9,[R12,#516]
        LDR     R8,[R12,#520]
        LDR     R7,[R12,#524]
        LDR     R6,[R12,#528]
        LDR     R5,data_alt6_20202020
        CMP     R6,R5
        MOVEQ   R6,#1
        SUBNE   R6,R6,#&30                              ; ="0"
        LDR     R4,[R12,#584]
        LDR     R3,[R12,#588]
        CMP     R9,R5
        CMPEQ   R8,R5
        CMPEQ   R7,R5
        BEQ     skip_291
        CMP     R9,R5
        BNE     skip_404
        CMP     R8,R5
        BNE     skip_274
        MOV     R0,#&1E                                 ; =30
loop_145                                                ; Address &6D34, referenced 13 times
        MOV     R1,#0
        B       code_21
skip_404                                                ; Address &6D3C, referenced once
        CMP     R8,R5
        BEQ     skip_279
        CMP     R4,R3
        BLE     skip_279
skip_274                                                ; Address &6D4C, referenced once
        STR     R9,[R12,#520]
        STR     R8,[R12,#516]
        MOV     R0,R9
        MOV     R9,R8
        MOV     R8,R0
        STR     R4,[R12,#588]
        STR     R3,[R12,#584]
        MOV     R0,R4
        MOV     R4,R3
        MOV     R3,R0
skip_279                                                ; Address &6D74, referenced twice
        CMP     R9,#&64                                 ; ="d"
        CMPNE   R9,#&6A                                 ; ="j"
        CMPNE   R9,#&6C                                 ; ="l"
        BNE     skip_282
        CMP     R8,R5
        MOVNE   R0,#&1F                                 ; =31
        BNE     loop_145
        CMP     R7,R5
        MOVNE   R0,#&20                                 ; =" "
        BNE     loop_145
        B       skip_291
skip_282                                                ; Address &6DA0, referenced once
        CMP     R9,#&44                                 ; ="D"
        CMPNE   R9,#&4A                                 ; ="J"
        CMPNE   R9,#&4C                                 ; ="L"
        BNE     skip_285
        CMP     R6,#1
        MOVNE   R0,#&23                                 ; ="#"
        BNE     loop_145
        CMP     R8,R5
        BNE     skip_396
        CMP     R7,R5
        MOVEQ   R0,#&21                                 ; ="!"
        BEQ     loop_145
        CMP     R7,#&45                                 ; ="E"
        CMPNE   R7,#&54                                 ; ="T"
        MOVNE   R0,#&25                                 ; ="%"
        BNE     loop_145
        MOV     R0,R4
        BL      subroutine_277
        CMP     R7,#&54                                 ; ="T"
        MOV     R8,R9
        MOV     R7,R5
        MOVEQ   R1,R0
        LDREQ   R9,[R12,#264]
        BEQ     skip_292
        MOV     R9,R0
        LDR     R8,[R12,#260]
        SUB     R8,R8,#2
        B       skip_387
skip_396                                                ; Address &6E10, referenced once
        CMP     R9,R8
        MOVNE   R0,#&22                                 ; ="""
        BNE     loop_145
        CMP     R7,R5
        MOVNE   R0,#&20                                 ; =" "
        BNE     loop_145
        B       skip_291
skip_285                                                ; Address &6E2C, referenced once
        CMP     R9,#&63                                 ; ="c"
        CMPNE   R9,#&6D                                 ; ="m"
        BNE     skip_288
        CMP     R8,R5
        MOVNE   R0,#&1F                                 ; =31
        BNE     loop_145
        CMP     R7,R5
        MOVEQ   R0,#&24                                 ; ="$"
        BEQ     loop_145
        B       skip_291
skip_288                                                ; Address &6E54, referenced once
        CMP     R8,R5
        MOVEQ   R0,#&21                                 ; ="!"
        BEQ     loop_145
        CMP     R9,R8
        MOVNE   R0,#&22                                 ; ="""
        BNE     loop_145
        CMP     R7,R5
        MOVEQ   R0,#&24                                 ; ="$"
        BEQ     loop_145
skip_291                                                ; Address &6E78, referenced 4 times
        CMP     R9,R5
        LDREQ   R9,[R12,#264]
        LDREQ   R8,[R12,#260]
        SUBEQ   R8,R8,#2
        BEQ     skip_387
        MOV     R0,R4
        BL      subroutine_277
        MOV     R9,R0
        CMP     R8,R5
        MOVEQ   R0,R9
        MOVNE   R0,R3
        BLNE    subroutine_277
        MOV     R1,R0
skip_292                                                ; Address &6EAC, referenced once
        LDR     R0,[R12,#264]
        LDRB    R0,[R0,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        MOVEQ   R8,R9
        LDRNEB  R8,[R1,#3]
        ADDNE   R8,R1,R8
skip_387                                                ; Address &6EC4, referenced twice
        CMP     R7,R5
        MOVEQ   R0,#0
        BEQ     skip_300
        CMP     R7,#&54                                 ; ="T"
        LDREQ   R0,[R12,#264]
        BEQ     skip_300
        CMP     R7,#&45                                 ; ="E"
        LDREQ   R0,[R12,#260]
        SUBEQ   R0,R0,#2
        BEQ     skip_300
        LDR     R0,[R12,#592]
        BL      subroutine_277
        CMP     R7,#&41                                 ; ="A"
        BNE     skip_295
        LDR     R1,[R12,#264]
        LDRB    R1,[R1,#1]
        CMP     R1,#&FF                                 ; ="ÿ"
        LDRNEB  R1,[R0,#3]
        ADDNE   R0,R0,R1
skip_295                                                ; Address &6F10, referenced once
        CMP     R0,R9
        BLE     skip_300
        CMP     R0,R8
        MOVCC   R0,#&26                                 ; ="&"
        BCC     loop_145
skip_300                                                ; Address &6F24, referenced 4 times
        STR     R9,[R12,#480]
        STR     R8,[R12,#484]
        STR     R0,[R12,#488]
        STR     R6,[R12,#492]
        Pull    "R0,R1,R3-R9,PC"

data_alt6_20202020
        DCD     &20202020

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_258                                          ; Address &6F3C, referenced 8 times
        Push    "R0,R1,R14"
        LDR     R0,[R12,#340]
        ADD     R1,R12,#&05D0                           ; =1488
        ADD     R1,R1,R0,LSL #2
        STR     R1,[R12,#560]
        ADD     R1,R12,#&07D0                           ; =2000
        ADD     R1,R1,R0,LSL #2
        STR     R1,[R12,#564]
        STR     R0,[R12,#344]
        LDR     R0,[R12,#336]
        SUB     R0,R0,#2
        STR     R0,[R12,#324]
        BL      subroutine_178
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_259                                          ; Address &6F74, referenced once
        Push    "R0-R2,R9,R14"
        MOV     R0,#OsByte_INKEY
        MOV     R1,#0
        MOV     R2,#0
        SWI     OS_Byte
        CMP     R2,#&FF                                 ; ="ÿ"
        BEQ     skip_307
        CMP     R1,#0
        BNE     skip_305
        MOV     R2,#0
        SWI     OS_Byte
        CMP     R2,#&FF                                 ; ="ÿ"
        MOVEQ   R1,#0
        MOVNE   R1,R1,LSL #8
skip_305                                                ; Address &6FAC, referenced once
        MOV     R0,R1
        BL      subroutine_255
        MOV     R9,R0
        CMP     R9,#&B300
        MOVEQ   R0,#OsByte_AcknowledgeEscape
        SWIEQ   OS_Byte
        STR     R9,[R12,#440]
        MOV     R0,#1
        STR     R0,[R12,#444]
skip_307                                                ; Address &6FD0, referenced once
        Pull    "R0-R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_261                                          ; Address &6FD4, referenced 7 times
        Push    "R0-R2,R14"
        MOV     R0,#0
        LDR     R2,[R12,#264]
loop_17                                                 ; Address &6FE0, referenced once
        LDRB    R1,[R2,#1]
        CMP     R1,#&FF                                 ; ="ÿ"
        LDRNEB  R1,[R2,#3]
        ADDNE   R2,R2,R1
        ADDNE   R0,R0,#1
        BNE     loop_17
        ADD     R1,R2,#2
        STR     R1,[R12,#260]
        STR     R0,[R12,#288]
        LDR     R0,[R12,#264]
        SUB     R0,R1,R0
        STR     R0,[R12,#268]
        LDR     R0,[R12,#256]
        SUB     R0,R0,R1
        STR     R0,[R12,#272]
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_264                                          ; Address &7020, not referenced
        Push    "R0,R1,R14"
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#320]
        BL      subroutine_153
        CMP     R1,#0
        BNE     skip_315
        BL      subroutine_158
        B       skip_316
skip_315                                                ; Address &7040, referenced once
        BL      subroutine_152
skip_316                                                ; Address &7044, referenced once
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_266                                          ; Address &7048, referenced twice
        Push    "R0-R4,R7-R9,R14"
        LDR     R0,[R12,#600]
        BL      subroutine_192
        MOV     R9,R1
        LDR     R0,[R12,#356]
        CMP     R0,#0
        BNE     skip_321
        LDR     R8,[R12,#448]
        LDR     R7,[R12,#376]
        BL      subroutine_75
        MOV     R0,R7
        MOV     R1,R8
        BL      subroutine_68
        MOV     R0,R9
        BL      subroutine_310
        LDR     R0,[R12,#396]
        BL      subroutine_46
        MOV     R1,R0
        LDR     R0,[R12,#448]
        ADD     R1,R0,R1
        LDR     R2,[R12,#324]
        ADD     R2,R2,#1
        CMP     R1,R2
        BGT     skip_320
        CMP     R0,R8
        BNE     skip_320
        CMP     R7,#0
        LDRNE   R0,[R12,#356]
        MOVNE   R1,R11
        ADDNE   R2,R12,#&0A70                           ; =2672
        LDRNE   R3,[R12,#384]
        MOVNE   R4,#0
        BLNE    subroutine_149
        MOV     R11,R9
        BL      subroutine_282
        LDR     R0,[R12,#448]
        BL      subroutine_189
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        MOV     R1,#0
        MOV     R2,#1
        BL      subroutine_148
        B       skip_323
skip_320                                                ; Address &70F4, referenced twice
        MOV     R11,R9
        BL      subroutine_282
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        BL      subroutine_141
        B       skip_323
skip_321                                                ; Address &710C, referenced once
        BL      subroutine_88
        MOV     R11,R9
        BL      subroutine_282
        LDR     R0,[R12,#560]
        LDR     R1,[R12,#324]
        MOV     R2,R11
        BL      subroutine_241
        STR     R0,[R12,#356]
skip_323                                                ; Address &712C, referenced twice
        Pull    "R0-R4,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_272                                          ; Address &7130, referenced 7 times
        Push    "R1,R2,R9,R14"
        SWI     OS_ReadC
        CMP     R0,#0
        BNE     skip_350
        SWI     OS_ReadC
        MOV     R0,R0,LSL #8
skip_350                                                ; Address &7148, referenced once
        BL      subroutine_255
        MOV     R9,R0
        CMP     R9,#&B300
        MOVEQ   R0,#OsByte_AcknowledgeEscape
        SWIEQ   OS_Byte
        MOV     R0,R9
        Pull    "R1,R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_276                                          ; Address &7164, referenced once
        Push    "R0-R2,R9,R14"
        MOV     R9,#0

        BL      choices_openin
        BEQ     skip_346
        SWI     XOS_BGet
        MOV     R9,R0
        SWI     XOS_BGet
        ORR     R9,R0,R9,LSL #8
        SWI     XOS_BGet
        ORR     R9,R0,R9,LSL #8
        SWI     XOS_BGet
        ORR     R9,R0,R9,LSL #8
        BL      choices_close
skip_346                                                ; Address &719C, referenced once
        MOV     R0,R9
        BL      subroutine_211
        AND     R1,R9,#&F8000000
        CMP     R0,R1
        MOVEQ   R0,R9
        MOVEQ   R9,#0
        LDRNE   R0,data_c3cf
        MOVNE   R9,#1
        AND     R1,R0,#7
        STR     R1,[R12,#280]
        MOV     R0,R0,LSR #3
        AND     R1,R0,#1
        STR     R1,[R12,#536]
        MOV     R0,R0,LSR #1
        AND     R1,R0,#7
        STR     R1,[R12,#276]
        MOV     R0,R0,LSR #3
        AND     R1,R0,#1
        STR     R1,[R12,#540]
        STR     R1,[R12,#348]
        MOV     R0,R0,LSR #1
        AND     R1,R0,#&FF                              ; ="ÿ"
        STR     R1,[R12,#300]
        MOV     R0,R0,LSR #8
        AND     R1,R0,#&3F                              ; ="?"
        STR     R1,[R12,#360]
        MOV     R0,R0,LSR #6
        AND     R1,R0,#3
        STR     R1,[R12,#544]
        MOV     R0,R0,LSR #2
        AND     R1,R0,#1
        STR     R1,[R12,#568]
        LDR     R0,[R12,#300]
        BL      subroutine_4
        CMP     R0,#0
        MOVNE   R0,#0
        STRNE   R0,[R12,#300]
        MOVNE   R9,#1
        BL      choices_openin
        BEQ     skip_333

        MOV     R0,#OSArgs_SetPTR
        MOV     R2,#4
        SWI     XOS_Args
        SWI     XOS_BGet
        STR     R0,[R12,#696]
        SWI     XOS_BGet
        STR     R0,[R12,#700]
        SWI     XOS_BGet
        STR     R0,[R12,#708]
        SWI     XOS_BGet
        STR     R0,[R12,#704]
        BL      choices_close
skip_333                                                ; Address &7268, referenced once
        BL      subroutine_101
        CMP     R0,#0
        BEQ     skip_336
        MOV     R0,#&2E                                 ; ="."
        STR     R0,[R12,#696]
        MOV     R0,#&7C                                 ; ="|"
        STR     R0,[R12,#700]
        MOV     R0,#&7B                                 ; ="{"
        STR     R0,[R12,#708]
        MOV     R0,#&7D                                 ; ="}"
        STR     R0,[R12,#704]
        MOV     R9,#1
skip_336                                                ; Address &7298, referenced once
        CMP     R9,#0
        BLNE    subroutine_92
        Pull    "R0-R2,R9,PC"

data_c3cf
        DCD     &00C300CF

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_284                                          ; Address &72A8, referenced once
        Push    "R0,R6-R9,R14"
        MOV     R9,#0
        LDR     R8,data_alt7_20202020
        MVN     R7,#0
        LDR     R6,[R12,#600]
        LDR     R0,[R12,#584]
        CMP     R0,R6
        MOVEQ   R9,#1
        STREQ   R8,[R12,#516]
        STREQ   R7,[R12,#584]
        LDR     R0,[R12,#588]
        CMP     R0,R6
        MOVEQ   R9,#1
        STREQ   R8,[R12,#520]
        STREQ   R7,[R12,#588]
        LDR     R0,[R12,#592]
        CMP     R0,R6
        MOVEQ   R9,#1
        STREQ   R8,[R12,#524]
        STREQ   R7,[R12,#592]
        CMP     R9,#0
        BLEQ    subroutine_182
        Pull    "R0,R6-R9,PC"

data_alt7_20202020
        DCD     &20202020
        
code_24                                                 ; Address &7308, referenced twice
        MOV     R1,#1
        STR     R1,[R12,#408]
        LDR     R2,[R12,#556]
        CMP     R2,#1
        STRNE   R1,[R12,#412]
        MOV     R1,#0
        B       code_21

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_289                                          ; Address &7324, referenced twice
        Push    "R0,R1,R14"
        MOV     R0,#&0A                                 ; =10
        LDR     R1,[R12,#288]
        BL      subroutine_45
        CMN     R0,#1
        MOVEQ   R0,#1
        MOVEQ   R1,#0
        MOVNE   R1,#&0A                                 ; =10
        STR     R0,[R12,#460]
        STR     R1,[R12,#456]
        LDR     R0,[R12,#264]
        STR     R0,[R12,#464]
        STR     R0,[R12,#472]
        LDR     R0,[R12,#260]
        SUB     R0,R0,#2
        STR     R0,[R12,#468]
        STR     R0,[R12,#476]
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_291                                          ; Address &736C, referenced 6 times
        Push    "R0,R1,R14"
        BL      subroutine_289
        BL      subroutine_300
        MOV     R1,#0
        STR     R1,[R12,#308]
        BL      subroutine_282
        CMP     R0,#0
        BNE     code_24
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_292                                          ; Address &7390, referenced 4 times
        Push    "R3-R9,R14"
        MOV     R9,#0
        MOV     R8,R0
        MOV     R7,#4
        MOV     R6,#0
        LDRB    R4,[R8,#3]
        SUB     R4,R4,#3
        MOV     R3,#0
loop_115                                                ; Address &73B0, referenced once
        CMP     R7,R4
        BGE     skip_406
        LDRB    R5,[R8,R7]
        CMP     R5,#&22                                 ; ="""
        EOREQ   R6,R6,#1
        BEQ     skip_389
        CMP     R6,#0
        CMPEQ   R5,#&8D                                 ; =""
        BNE     skip_389
        MOV     R0,R8
        MOV     R1,R7
        BL      subroutine_104
        MOV     R1,R0
        BL      subroutine_194
        CMP     R0,R1
        BEQ     skip_386
        MOV     R3,#1
        CMN     R0,#1
        MOVEQ   R9,#1
        LDREQ   R0,data_40404040
        BLNE    subroutine_89
        ADD     R1,R7,#3
loop_55                                                 ; Address &7408, referenced once
        STRB    R0,[R8,R1]
        MOV     R0,R0,LSR #8
        SUB     R1,R1,#1
        CMP     R1,R7
        BCS     loop_55
skip_386                                                ; Address &741C, referenced once
        ADD     R7,R7,#3
skip_389                                                ; Address &7420, referenced twice
        ADD     R7,R7,#1
        B       loop_115
skip_406                                                ; Address &7428, referenced once
        MOV     R0,R9
        MOV     R1,R3
        Pull    "R3-R9,PC"

data_40404040
        DCD     &40404040

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_300                                          ; Address &7438, referenced 7 times
        Push    "R1,R3-R9,R14"
        MOV     R9,#0
        LDR     R8,[R12,#464]
        LDR     R4,[R12,#468]
        MOV     R3,#0
loop_20                                                 ; Address &744C, referenced once
        CMP     R8,R4
        BCS     skip_418
        MOV     R0,R8
        BL      subroutine_292
        ORR     R9,R9,R0
        ORR     R3,R3,R1
        LDRB    R0,[R8,#3]
        ADD     R8,R8,R0
        B       loop_20
skip_418                                                ; Address &7470, referenced once
        ADD     R8,R12,#&0248                           ; =584
        ADD     R7,R12,#&0280                           ; =640
        LDR     R6,[R12,#464]
        LDR     R0,[R12,#264]
        CMP     R0,R6
        BNE     skip_428
loop_10                                                 ; Address &7488, referenced once
        LDR     R0,[R8]
        CMN     R0,#1
        BEQ     skip_426
        BL      subroutine_194
        STR     R0,[R8]
skip_426                                                ; Address &749C, referenced once
        ADD     R8,R8,#4
        CMP     R8,R7
        BCC     loop_10
skip_428                                                ; Address &74A8, referenced once
        LDR     R8,[R12,#456]
        LDR     R7,[R12,#460]
        LDR     R6,[R12,#472]
        LDR     R5,[R12,#476]
loop_127                                                ; Address &74B8, referenced once
        CMP     R6,R5
        BCS     skip_437
        MOV     R0,R6
        BL      subroutine_301
        CMP     R0,R8
        MOVNE   R3,#1
        STRNEB  R8,[R6,#2]
        MOVNE   R0,R8,LSR #8
        STRNEB  R0,[R6,#1]
        LDRB    R0,[R6,#3]
        ADD     R6,R6,R0
        ADD     R8,R8,R7
        B       loop_127
skip_437                                                ; Address &74EC, referenced once
        CMP     R3,#0
        BLNE    subroutine_119
        MOVS    R0,R9
        MOVNE   R0,#&11                                 ; =17
        Pull    "R1,R3-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_309                                          ; Address &7500, referenced once
        Push    "R0-R2,R14"
        BL      subroutine_180
        ADD     R0,R12,#&0A10                           ; =2576
        ADD     R1,R12,#&0C40                           ; =3136
        LDR     R2,[R12,#368]
        STR     R2,[R12,#284]
        BL      subroutine_114
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_311                                          ; Address &7520, referenced twice
        Push    "R0,R1,R9,R14"
        LDR     R9,[R12,#600]
        LDR     R0,[R12,#376]
        LDR     R1,[R12,#448]
        BL      subroutine_75
        BL      subroutine_68
        BL      subroutine_269
        LDR     R0,[R12,#512]
        CMP     R0,#&41                                 ; ="A"
        MOVEQ   R0,#&18                                 ; =24
        MOVNE   R0,#&19                                 ; =25
        MOV     R1,#&1A                                 ; =26
        BL      subroutine_294
        BL      subroutine_136
        MOV     R0,#0
        STR     R0,[R12,#364]
        STR     R0,[R12,#368]
loop_65                                                 ; Address &7564, referenced once
        BL      subroutine
        CMP     R0,#&CC00
        CMPNE   R0,#&B800
        BNE     skip_448
        BL      subroutine_190
        BL      subroutine_30
        CMP     R0,#0
        BNE     skip_448
        MOV     R0,#&15                                 ; =21
        BL      subroutine_52
        B       loop_65
skip_448                                                ; Address &7590, referenced twice
        LDR     R0,[R12,#600]
        CMP     R0,R9
        BLEQ    subroutine_216
        Pull    "R0,R1,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_316                                          ; Address &75A0, referenced once
        Push    "R1,R2,R8,R9,R14"
        BL      subroutine_178
        MOV     R9,R1
        MOV     R8,R0
        MOV     R0,#&31                                 ; ="1"
        MOV     R1,#&10                                 ; =16
        BL      subroutine_139
        MOV     R0,R8
        BL      subroutine_301
        MOV     R1,#0
        MVN     R2,#0
        BL      subroutine_148
        MOV     R0,R9
        LDR     R1,[R12,#320]
        BL      subroutine_153
        ADD     R1,R1,#6
        MOV     R2,R0
        BL      subroutine_140
        BL      subroutine_197
        BL      subroutine_38
loop_158                                                ; Address &75F0, referenced once
        BL      subroutine_272
        CMP     R0,#&B300
        BEQ     skip
        CMP     R0,#&B200
        BNE     skip_31
        LDR     R0,[R12,#560]
        LDR     R11,[R0]
        BL      subroutine_282
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        STR     R9,[R12,#292]
        MOV     R0,#&B200
        B       skip
skip_31                                                 ; Address &7624, referenced once
        AND     R0,R0,#&DF                              ; ="ß"
        CMP     R0,#&59                                 ; ="Y"
        CMPNE   R0,#&4E                                 ; ="N"
        BNE     loop_158
skip                                                    ; Address &7634, referenced twice
        BL      subroutine_97
        Pull    "R1,R2,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine                                              ; Address &763C, referenced once
        Push    "R1,R2,R9,R14"
loop_86                                                 ; Address &7640, referenced once
        MOV     R9,#1
loop_57                                                 ; Address &7644, referenced twice
        CMP     R9,#1
        BLEQ    subroutine_25
        CMP     R9,#2
        BLEQ    subroutine_26
        CMP     R0,#&CC00
        BEQ     skip_270
        CMP     R0,#&B800
        BNE     skip_420
        CMP     R9,#1
        BEQ     skip_25
        B       skip_270
skip_420                                                ; Address &7670, referenced once
        CMP     R0,#&8A00
        BNE     skip_372
skip_25                                                 ; Address &7678, referenced once
        ADD     R9,R9,#1
        CMP     R9,#3
        MOVEQ   R9,#1
        B       loop_57
skip_372                                                ; Address &7688, referenced once
        CMP     R0,#&9A00
        BNE     skip_329
        SUBS    R9,R9,#1
        MOVEQ   R9,#2
        B       loop_57
skip_270                                                ; Address &769C, referenced twice
        LDR     R1,[R12,#364]
        CMP     R1,#0
        BNE     skip_8
        MOV     R0,#&17                                 ; =23
loop_130                                                ; Address &76AC, referenced twice
        BL      subroutine_52
        B       loop_86
skip_8                                                  ; Address &76B4, referenced once
        LDR     R1,[R12,#504]
        CMP     R1,#0
        MOVEQ   R0,#&1D                                 ; =29
        BEQ     loop_130
        LDR     R1,[R12,#500]
        CMP     R1,#0
        MOVNE   R0,#&1D                                 ; =29
        BNE     loop_130
skip_329                                                ; Address &76D4, referenced once
        Pull    "R1,R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_25                                           ; Address &76D8, referenced once
        Push    "R14"
        BL      subroutine_191
        MOV     R0,#&1F                                 ; =31
        MOV     R1,#0
        MOV     R2,#4
        BL      subroutine_312
        BL      subroutine_16
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_26                                           ; Address &76F8, referenced once
        Push    "R14"
        BL      subroutine_309
        MOV     R0,#&1F                                 ; =31
        MOV     R1,#0
        MOV     R2,#6
        BL      subroutine_312
        BL      subroutine_19
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_30                                           ; Address &7718, referenced once
        Push    "R1-R9,R14"
        MOV     R9,#0
        LDR     R8,[R12,#480]
        LDR     R0,[R12,#484]
        BL      subroutine_301
        MOV     R7,R0
loop_134                                                ; Address &7730, referenced once
        MOV     R0,R8
        BL      subroutine_301
        CMP     R0,R7
        BEQ     skip_34
        MOV     R0,R8
        BL      subroutine_310
        AND     R9,R9,#1
        LDR     R6,[R12,#396]
        MOV     R5,#0
loop_75                                                 ; Address &7754, referenced twice
        CMP     R5,R6
        BCS     skip_246
        MOV     R0,R5
        BL      subroutine_223
        CMN     R0,#1
        BEQ     skip_246
        ORR     R9,R9,#1
        MOV     R5,R0
        MOV     R4,R1
        LDR     R0,[R12,#512]
        CMP     R0,#&53                                 ; ="S"
        BNE     skip_16
        MOV     R0,R8
        MOV     R1,R5
        BL      subroutine_316
        MOV     R3,R0
        MOV     R0,R8
        BL      subroutine_310
        CMP     R3,#&4E                                 ; ="N"
        ADDEQ   R5,R5,#1
        BEQ     loop_75
        CMP     R3,#&59                                 ; ="Y"
        BNE     skip_34
skip_16                                                 ; Address &77B0, referenced once
        LDR     R0,[R12,#368]
        ADD     R0,R0,R6
        SUB     R3,R0,R4
        MOV     R1,#&0170                               ; =368
        ADD     R1,R1,#1
        CMP     R3,R1
        MOVGT   R0,#&1B                                 ; =27
        MOVGT   R1,R8
        BGT     code_21
        ADD     R0,R12,#&0400                           ; =1024
        ADD     R0,R0,R5
        LDR     R1,[R12,#368]
        ADD     R1,R1,R0
        ADD     R0,R0,R4
        SUB     R2,R6,R5
        SUB     R2,R2,R4
        BL      subroutine_114
        ADD     R0,R12,#&0A10                           ; =2576
        ADD     R1,R12,#&0400                           ; =1024
        ADD     R1,R1,R5
        LDR     R2,[R12,#368]
        BL      subroutine_114
        STR     R3,[R12,#396]
        MOV     R6,R3
        LDR     R0,[R12,#512]
        CMP     R0,#&53                                 ; ="S"
        ORRNE   R9,R9,#2
        BNE     skip_267
        BL      subroutine_54
        LDR     R0,[R12,#556]
        CMP     R0,#1
        BEQ     skip_267
        ADD     R0,R12,#&05D0                           ; =1488
        LDR     R1,[R12,#340]
        ADD     R0,R0,R1,LSL #2
        LDR     R1,[R12,#336]
        SUB     R1,R1,#2
        MOV     R2,R8
        BL      subroutine_241
        CMN     R0,#1
        BNE     skip_20
        BL      subroutine_49
        B       skip_22
skip_20                                                 ; Address &785C, referenced once
        BL      subroutine_135
skip_22                                                 ; Address &7860, referenced once
        MOV     R0,R8
        BL      subroutine_310
skip_267                                                ; Address &7868, referenced twice
        LDR     R0,[R12,#600]
        LDR     R1,[R12,#632]
        CMP     R0,R1
        BNE     skip_33
        LDR     R0,[R12,#292]
        CMP     R5,R0
        MOVCC   R0,#0
        STRCC   R0,[R12,#292]
skip_33                                                 ; Address &7888, referenced once
        LDR     R0,[R12,#368]
        ADD     R5,R5,R0
        B       loop_75
skip_246                                                ; Address &7894, referenced twice
        TST     R9,#2
        BLNE    subroutine_54
        LDRB    R0,[R8,#3]
        ADD     R8,R8,R0
        B       loop_134
skip_34                                                 ; Address &78A8, referenced twice
        LDR     R0,[R12,#600]
        BL      subroutine_277
        MOV     R11,R0
        BL      subroutine_282
        AND     R0,R9,#1
        LDR     R1,[R12,#512]
        CMP     R1,#&53                                 ; ="S"
        BLEQ    subroutine_143
        Pull    "R1-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_54                                           ; Address &78CC, referenced twice
        Push    "R14"
        MOV     R3,R8
        LDR     R2,[R12,#632]
        LDR     R1,[R12,#396]
        ADD     R0,R12,#&0400                           ; =1024
        BL      subroutine_306
        LDR     R6,[R12,#396]
        CMP     R0,#0
        MOVNE   R1,R8
        BNE     code_21
        LDR     R1,[R12,#632]
        LDR     R0,[R12,#600]
        CMP     R0,R1
        MOVEQ   R11,R8
        BLEQ    subroutine_282
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_57                                           ; Address &790C, referenced twice
        Push    "R0-R3,R14"
        MOV     R0,#OsByte_CursorKeyStatus
        BL      do_osbyte_x0_y0
        MOV     R0,#OsByte_RW_UseOfCode197To207
        MOV     R1,#1
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfCode208To223
        MOV     R1,#&D0                                 ; ="Ð"
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfCode224To239
        MOV     R1,#&E0                                 ; ="à"
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfCode240To255
        MOV     R1,#&F0                                 ; ="ð"
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfFKeys
        MOV     R1,#1
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfShiftFKeys
        MOV     R1,#&80                                 ; =""
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfCtrlFKeys
        MOV     R1,#&90                                 ; =""
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfCtrlShiftFKeys
        MOV     R1,#0
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_TabCharCode
        MOV     R1,#9
        BL      do_osbyte_y0
        SWI     OS_WriteI+26
        SWI     OS_WriteI+13
        MOV     R0,#0
        STR     R0,[R12,#348]
        BL      subroutine_98
        SWI     OS_WriteI+23
        SWI     OS_WriteI+1
        SWI     OS_WriteI+3
        BL      subroutine_196
        SWI     OS_WriteI+23
        SWI     OS_WriteI+16
        BL      subroutine_196
        ADD     R1,R12,#&0CA0                           ; =3232
        MOV     R2,#&0A                                 ; =10
loop_160                                                ; Address &79BC, referenced once
        SWI     OS_WriteI+23
        MOV     R3,#9
loop_112                                                ; Address &79C4, referenced once
        LDRB    R0,[R1],#1
        SWI     OS_WriteC
        SUBS    R3,R3,#1
        BNE     loop_112
        SUBS    R2,R2,#1
        BNE     loop_160
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_63                                           ; Address &79E0, referenced 8 times
        Push    "R0,R9,R14"
        MOV     R9,R0
        CMN     R9,#1
        BEQ     skip_47
        SWI     OS_WriteI+28
        MOV     R0,R9,LSR #24
        SWI     OS_WriteC
        MOV     R0,R9,LSR #16
        AND     R0,R0,#&FF                              ; ="ÿ"
        SWI     OS_WriteC
        MOV     R0,R9,LSR #8
        AND     R0,R0,#&FF                              ; ="ÿ"
        SWI     OS_WriteC
        AND     R0,R9,#&FF                              ; ="ÿ"
        SWI     OS_WriteC
skip_47                                                 ; Address &7A1C, referenced once
        Pull    "R0,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_67                                           ; Address &7A20, not referenced
        Push    "R0-R9,R14"
        LDR     R9,[R12,#448]
        MOV     R8,R11
        LDR     R3,[R12,#556]
        BL      subroutine_195
        CMP     R0,#0
        BLEQ    subroutine_121
        BL      subroutine_75
        LDR     R4,[R12,#532]
        LDR     R6,[R12,#448]
        MOV     R0,R11
        BL      subroutine_55
        LDR     R7,[R12,#600]
        MOV     R5,R0
        LDRB    R0,[R11,#3]
        ADD     R0,R11,R0
        BL      subroutine_7
        STR     R4,[R12,#292]
        CMP     R5,#0
        BEQ     skip_49
        BL      subroutine_216
        MOV     R0,#1
        STR     R0,[R12,#408]
        CMP     R3,#1
        STRNE   R0,[R12,#412]
        B       skip_125
skip_49                                                 ; Address &7A88, referenced once
        MOV     R0,R6
        LDR     R1,[R12,#448]
        MOV     R2,R8
        BL      subroutine_60
        CMP     R0,#0
        BNE     skip_52
        ADD     R2,R6,#1
        CMP     R2,R9
        BEQ     skip_54
skip_52                                                 ; Address &7AAC, referenced once
        MOV     R0,R7
        LDR     R1,[R12,#356]
        MVN     R2,#0
        BL      subroutine_148
        B       skip_141
skip_54                                                 ; Address &7AC0, referenced once
        MOV     R0,R7
        LDR     R1,[R12,#356]
        MOV     R2,#1
        BL      subroutine_148
        LDR     R0,[R12,#600]
        ADD     R1,R1,R6
        BL      subroutine_148
skip_141                                                ; Address &7ADC, referenced once
        CMP     R3,#1
        BEQ     skip_125
        ADD     R0,R12,#&05D0                           ; =1488
        LDR     R1,[R12,#340]
        LDR     R0,[R0,R1,LSL #2]
        CMP     R8,R0
        BCS     skip_217
        BL      subroutine_49
        B       skip_125
skip_217                                                ; Address &7B00, referenced once
        BL      subroutine_258
        LDR     R0,[R12,#560]
        LDR     R1,[R12,#324]
        MOV     R2,R8
        BL      subroutine_241
        CMN     R0,#1
        BEQ     skip_59
        MOV     R1,R0
        MOV     R0,R7
        MVN     R2,#0
        BL      subroutine_148
        B       skip_60
skip_59                                                 ; Address &7B30, referenced once
        MOV     R0,R6
        MOV     R1,R8
        BL      subroutine_56
skip_60                                                 ; Address &7B3C, referenced once
        BL      subroutine_1
skip_125                                                ; Address &7B40, referenced 3 times
        Pull    "R0-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
Mod_Init                                                ; Address &7B44, referenced once
        Push    "R0-R3,R12,R14"
        LDR     R0,[R12]
        CMP     R0,#0
        MOVNE   R12,R0
        BNE     skip_207
        MOV     R0,#ModHandReason_Claim
        LDR     R3,sizeof_workspace
        SWI     XOS_Module
        ADRVS   R0,error_blk_rma_full
        BVS     skip_67
        STR     R2,[R12]
        MOV     R12,R2
        MOV     R0,#0
        STR     R0,[R12,#508]
        STR     R0,[R12,#716]
        STR     R0,[R12,#624]
        STR     R0,[R12,#600]
        STR     R0,[R12,#292]
        STR     R0,[R12,#628]
        STR     R0,[R12,#604]
        STR     R0,[R12,#296]
        STR     R0,[R12,#552]
skip_207                                                ; Address &7B9C, referenced once
        BL      subroutine_78
skip_67                                                 ; Address &7BA0, referenced once
        Pull    "R0-R3,R12,PC"
sizeof_workspace
        DCD     &1800
error_blk_rma_full
        DCD     ErrorBase_BASICEditor + 0
        DCB     "Not enough room in RMA for The BASIC Editor", 0
        ALIGN

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
Mod_Die                                                 ; Address &7BD8, referenced once
        Push    "R14"
        LDR     R12,[R12,#0]
        BL      subroutine_80
        Pull    "R14"
        CLRV
        MOV     PC,R14

; ******************************************************************************
;
; <- Main entry point
;
Mod_Service                                             ; Address &7BF0, referenced once
        Push    "R0,R14"
        LDR     R12,[R12,#0]
        CMP     R1,#&27                                 ; ="'"
        BNE     skip_194
        BL      subroutine_78
        B       skip_77
skip_194                                                ; Address &7C08, referenced once
        CMP     R1,#&11                                 ; =17
        BNE     skip_77
        CMP     R2,#0
        BLT     skip_77
        ADRL    R0,Module_BaseAddr
        CMP     R2,R0
        BCC     skip_77
        ADRL    R0,string_The_Acorn_RISC_Basic
        CMP     R2,R0
        MOVLE   R1,#0
skip_77                                                 ; Address &7C38, referenced 4 times
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_109                                          ; Address &7C3C, referenced once
        Push    "R1,R2,R14"
loop_32                                                 ; Address &7C40, referenced twice
        MOV     R0,#&1F                                 ; =31
        MOV     R1,#0
        MOV     R2,#4
        BL      subroutine_312
        CMP     R0,#&8A00
        CMPNE   R0,#&9A00
        BEQ     loop_32
        CMP     R0,#&CC00
        CMPNE   R0,#&B800
        BNE     skip_186
        BL      subroutine_59
        LDR     R1,[R12,#284]
        CMP     R1,#0
        BNE     skip_186
        MOV     R0,#5
        BL      subroutine_52
        B       loop_32
skip_186                                                ; Address &7C84, referenced twice
        Pull    "R1,R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_116                                          ; Address &7C88, referenced twice
        Push    "R0-R3,R14"
        BIC     R2,R0,#&FF                              ; ="ÿ"
        LDR     R3,data_fffffb00
        CMP     R2,R3
        MVNNE   R0,#0
        STRNE   R0,[R12,#580]
        STREQ   R1,[R12,#576]
        ANDEQ   R0,R0,#&FF                              ; ="ÿ"
        STREQ   R0,[R12,#580]
        Pull    "R0-R3,PC"

data_fffffb00
        DCD     &FFFFFB00

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_122                                          ; Address &7CB4, referenced 4 times
        Push    "R1,R2,R9,R14"
        MOV     R0,#OsByte_ReadVDUStatus
        SWI     OS_Byte
        TST     R1,#8
        MVNEQ   R0,#0
        BEQ     skip_178
        MOV     R9,#0
        MOV     R0,#OsByte_VDUVariable
        MOV     R1,#8
        SWI     OS_Byte
        MOV     R9,R1,LSL #24
        ORR     R9,R9,R2,LSL #16
        MOV     R1,#&0A                                 ; =10
        SWI     OS_Byte
        ORR     R9,R9,R1,LSL #8
        ORR     R0,R9,R2
skip_178                                                ; Address &7CF4, referenced once
        Pull    "R1,R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_129                                          ; Address &7CF8, referenced once
        Push    "R2,R3,R8,R9,R14"
        BL      subroutine_178
        MOV     R9,R0
        MOV     R0,#&32                                 ; ="2"
        MOV     R1,#&33                                 ; ="3"
        BL      subroutine_294
        MOV     R0,R9
        BL      subroutine_198
        MOV     R1,#&14                                 ; =20
        MOV     R2,#2
        BL      subroutine_140
        BL      subroutine_296
loop_31                                                 ; Address &7D28, referenced once
        ADR     R0,colours_table
        MOV     R1,#&14                                 ; =20
        MOV     R2,#4
        LDR     R3,[R12,#280]
        BL      subroutine_132
        MOV     R2,#5
        LDR     R3,[R12,#276]
        BL      subroutine_132
        MOV     R0,R9
        ADR     R1,colours_table
        BL      subroutine_145
        MOV     R9,R1
        MOV     R8,R0
        BL      subroutine_190
        LDR     R0,[R12,#280]
        LDR     R1,[R12,#276]
        CMP     R0,R1
        BNE     skip_65
        MOV     R0,#7
        STR     R0,[R12,#280]
        MOV     R0,#4
        STR     R0,[R12,#276]
        BL      subroutine_249
        MOV     R0,#&36                                 ; ="6"
        B       skip_98
skip_65                                                 ; Address &7D8C, referenced once
        MOV     R0,R9
        BL      subroutine_4
        CMP     R0,#0
        BEQ     skip_100
skip_98                                                 ; Address &7D9C, referenced once
        BL      subroutine_52
        BL      subroutine_197
        B       loop_31
skip_100                                                ; Address &7DA8, referenced once
        MOV     R0,R8
        MOV     R1,R9
        Pull    "R2,R3,R8,R9,PC"

colours_table
        DCB     0
        DCB     "Black", 0
        DCB     "Red", 0
        DCB     "Green", 0
        DCB     "Yellow", 0
        DCB     "Blue", 0
        DCB     "Magenta", 0
        DCB     "Cyan", 0
        DCB     "White", 0
        DCD     0

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_145                                          ; Address &7DE8, referenced once
        Push    "R2,R3,R7-R9,R14"
        MOV     R9,R0
        MOV     R8,#1
        MOV     R7,R1
loop_37                                                 ; Address &7DF8, referenced twice
        CMP     R8,#1
        BLEQ    subroutine_160
        CMP     R8,#2
        BLEQ    subroutine_165
        CMP     R8,#3
        BLEQ    subroutine_173
        CMP     R0,#&B800
        BNE     skip_108
        CMP     R8,#3
        BNE     skip_158
        B       skip_154
skip_108                                                ; Address &7E24, referenced once
        CMP     R0,#&8A00
        BNE     skip_114
skip_158                                                ; Address &7E2C, referenced once
        ADD     R8,R8,#1
        CMP     R8,#4
        MOVEQ   R8,#1
        B       loop_37
skip_114                                                ; Address &7E3C, referenced once
        CMP     R0,#&9A00
        BNE     skip_154
        SUBS    R8,R8,#1
        MOVEQ   R8,#3
        B       loop_37
skip_154                                                ; Address &7E50, referenced twice
        MOV     R1,R9
        Pull    "R2,R3,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_160                                          ; Address &7E58, referenced once
        Push    "R14"
        MOV     R0,R9
        BL      subroutine_198
        MOV     R0,#3
        MOV     R1,#&14                                 ; =20
        MOV     R2,#2
        BL      subroutine_302
        MOV     R9,R0
        MOV     R0,R1
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_165                                          ; Address &7E80, referenced once
        Push    "R14"
        LDR     R0,[R12,#280]
        MOV     R2,#4
        MOV     R3,R7
loop_27                                                 ; Address &7E90, referenced once
        MOV     R1,#&14                                 ; =20
        BL      subroutine_303
        CMP     R1,#&20                                 ; =" "
        BNE     skip_146
        STR     R0,[R12,#280]
        BL      subroutine_249
        B       loop_27
skip_146                                                ; Address &7EAC, referenced once
        MOV     R0,R1
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_173                                          ; Address &7EB4, referenced once
        Push    "R14"
        LDR     R0,[R12,#276]
        MOV     R2,#5
        MOV     R3,R7
loop_122                                                ; Address &7EC4, referenced once
        MOV     R1,#&14                                 ; =20
        BL      subroutine_303
        CMP     R1,#&20                                 ; =" "
        BNE     skip_129
        STR     R0,[R12,#276]
        BL      subroutine_249
        B       loop_122
skip_129                                                ; Address &7EE0, referenced once
        MOV     R0,R1
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_189                                          ; Address &7EE8, referenced once
        Push    "R0-R2,R4-R9,R14"
        MOV     R9,R0
        LDR     R8,[R12,#560]
        LDR     R5,[R12,#564]
        LDR     R4,[R12,#324]
loop_81                                                 ; Address &7EFC, referenced once
        SWI     OS_WriteI+23
        SWI     OS_WriteI+7
        SWI     OS_WriteI+0
        SWI     OS_WriteI+2
        BL      subroutine_196
        SUBS    R0,R0,#1
        BNE     loop_81
        SUB     R0,R4,R9
        ADD     R7,R0,#1
        MOV     R0,R8
        MOV     R1,R4
        LDR     R2,[R8,R7,LSL #2]
        BL      subroutine_241
        CMP     R2,#0
        MOVEQ   R6,#0
        SUBNE   R6,R7,R0
        MOV     R2,R0,LSL #2
        MOV     R0,R8
        ADD     R1,R8,R9,LSL #2
        BL      subroutine_114
        MOV     R0,R5
        ADD     R1,R5,R9,LSL #2
        ADD     R2,R4,#1
        SUB     R2,R2,R9
        MOV     R2,R2,LSL #2
        BL      subroutine_114
        MOV     R0,R9
        MOV     R1,#0
loop_101                                                ; Address &7F6C, referenced once
        SUBS    R0,R0,#1
        STRPL   R1,[R8,R0,LSL #2]
        STRPL   R1,[R5,R0,LSL #2]
        BPL     loop_101
        MOV     R0,R4
        CMP     R6,#0
        BEQ     skip_168
        MOV     R2,#0
loop_9                                                  ; Address &7F8C, referenced once
        BL      subroutine_36
        STR     R2,[R8,R0,LSL #2]
        SUB     R0,R0,#1
        SUBS    R6,R6,#1
        BNE     loop_9
skip_168                                                ; Address &7FA0, referenced once
        LDR     R0,[R12,#356]
        ADD     R0,R0,R9
        STR     R0,[R12,#356]
        Pull    "R0-R2,R4-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_201                                          ; Address &7FB0, referenced twice
        Push    "R0-R5,R7-R9,R14"
        LDR     R7,[R12,#564]
        LDR     R8,[R12,#560]
        LDR     R9,[R8]
        MOV     R0,R8
        MOV     R1,#1
loop_23                                                 ; Address &7FC8, referenced once
        LDR     R2,[R0,#4]!
        CMP     R2,R9
        ADDEQ   R1,R1,#1
        BEQ     loop_23
        MOV     R9,R1
loop_62                                                 ; Address &7FDC, referenced once
        SWI     OS_WriteI+23
        SWI     OS_WriteI+7
        SWI     OS_WriteI+0
        SWI     OS_WriteI+3
        BL      subroutine_196
        SUBS    R1,R1,#1
        BNE     loop_62
        ADD     R0,R7,R9,LSL #2
        ADD     R1,R8,R9,LSL #2
        LDR     R2,[R12,#324]
        SUB     R3,R2,R9
        MOV     R4,#0
loop_38                                                 ; Address &800C, referenced once
        CMP     R4,R3
        LDRLE   R5,[R1,R4,LSL #2]
        MOVGT   R5,#0
        STR     R5,[R8,R4,LSL #2]
        LDRLE   R5,[R0,R4,LSL #2]
        STR     R5,[R7,R4,LSL #2]
        ADD     R4,R4,#1
        CMP     R4,R2
        BLE     loop_38
        LDR     R0,[R12,#356]
        SUB     R0,R0,R9
        STR     R0,[R12,#356]
        LDR     R0,[R8]
        BL      subroutine_301
        STR     R0,[R12,#624]
        Pull    "R0-R5,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_212                                          ; Address &804C, referenced 3 times
        Push    "R0,R1,R14"
        LDR     R1,[R12,#324]
        BL      subroutine_51
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_218                                          ; Address &805C, referenced once
        Push    "R7-R9,R14"
        MOV     R9,R0
        LDR     R8,[R12,#396]
        LDR     R7,[R12,#504]
        CMP     R8,#0
        MVNEQ   R9,#0
        BEQ     skip_220
        CMP     R7,#0
        SUBNE   R0,R8,R7
        SUBEQ   R0,R8,#1
        CMP     R9,R0
        MOVGT   R9,R0
loop_161                                                ; Address &808C, referenced once
        CMP     R9,#0
        MVNLT   R9,#0
        BLT     skip_220
        MOV     R0,R9
        BL      subroutine_100
        CMN     R0,#1
        SUBEQ   R9,R9,#1
        BEQ     loop_161
skip_220                                                ; Address &80AC, referenced twice
        MOV     R0,R9
        Pull    "R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_223                                          ; Address &80B4, referenced 5 times
        Push    "R7-R9,R14"
        MOV     R9,R0
        LDR     R8,[R12,#396]
        LDR     R7,[R12,#504]
        CMP     R8,#0
        MVNEQ   R0,#0
        BEQ     skip_443
        CMP     R7,#0
        SUBNE   R8,R8,R7
        ADDNE   R8,R8,#1
loop_1                                                  ; Address &80DC, referenced once
        CMP     R9,R8
        MVNGE   R0,#0
        BGE     skip_443
        MOV     R0,R9
        BL      subroutine_100
        MOVS    R1,R0
        ADDMI   R9,R9,#1
        BMI     loop_1
        MOV     R0,R9
skip_443                                                ; Address &8100, referenced twice
        Pull    "R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_230                                          ; Address &8104, not referenced
        Push    "R1,R2,R9,R14"
        MOV     R9,R0
        MOV     R0,#0
loop_106                                                ; Address &8110, referenced once
        LDRB    R2,[R1,R0]
        CMP     R2,#0
        MVNEQ   R0,#0
        CMPNE   R2,R9
        ADDNE   R0,R0,#1
        BNE     loop_106
        Pull    "R1,R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_232                                          ; Address &812C, referenced twice
        Push    "R8,R9,R14"
        LDR     R9,[R12,#480]
        LDR     R8,[R12,#484]
loop_152                                                ; Address &8138, referenced once
        CMP     R9,R8
        BEQ     skip_422
        MOV     R0,R9
        BL      subroutine_310
        MOV     R0,#0
        BL      subroutine_223
        CMN     R0,#1
        MOVNE   R1,R0
        MOVNE   R0,R9
        BNE     skip_259
        LDRB    R0,[R9,#3]
        ADD     R9,R9,R0
        B       loop_152
skip_422                                                ; Address &816C, referenced once
        MOV     R0,#0
skip_259                                                ; Address &8170, referenced once
        Pull    "R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_241                                          ; Address &8174, referenced 17 times
        Push    "R1-R4,R14"
        MOV     R3,#0
loop_100                                                ; Address &817C, referenced once
        LDR     R4,[R0,R3,LSL #2]
        CMP     R4,R2
        MOVEQ   R0,R3
        BEQ     skip_269
        ADD     R3,R3,#1
        CMP     R3,R1
        BLE     loop_100
        MVNS    R0,#0
skip_269                                                ; Address &819C, referenced once
        Pull    "R1-R4,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_247                                          ; Address &81A0, referenced twice
        Push    "R0,R1,R14"
        LDR     R0,[R12,#536]
        CMP     R0,#0
        BEQ     skip_283
        ADD     R0,R12,#&0A70                           ; =2672
        LDR     R1,[R12,#384]
        BL      subroutine_193
        CMN     R0,#1
        STRNE   R0,[R12,#532]
skip_283                                                ; Address &81C4, referenced once
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_249                                          ; Address &81C8, referenced 5 times
        Push    "R0-R2,R14"
        LDR     R0,[R12,#300]
        MOV     R1,#VduExt_NColour
        SWI     OS_ReadModeVariable
        CMP     R2,#&0F                                 ; =15
        MOVEQ   R2,#7
        SWI     OS_WriteI+19
        SWI     OS_WriteI+0
        LDR     R0,[R12,#276]
        SWI     OS_WriteC
        BL      subroutine_196
        SWI     OS_WriteI+19
        MOV     R0,R2
        SWI     OS_WriteC
        LDR     R0,[R12,#280]
        SWI     OS_WriteC
        BL      subroutine_196
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_253                                          ; Address &8210, referenced 3 times
        Push    "R0-R2,R9,R14"
        MOV     R0,#&FF00
        BL      subroutine_192
        CMP     R1,#0
        BNE     skip_294
        BL      subroutine_281
        B       skip_302
skip_294                                                ; Address &822C, referenced once
        MOV     R9,R1
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#320]
        BL      subroutine_153
        MOV     R0,R9
        MOV     R9,R1
        BL      subroutine_212
        BL      subroutine_48
        BL      subroutine_24
        MOV     R1,R9
        MOV     R2,R0
        BL      subroutine_162
skip_302                                                ; Address &825C, referenced once
        Pull    "R0-R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_260                                          ; Address &8260, referenced twice
        Push    "R0-R2,R14"
        MOV     R1,R0
        LDR     R2,[R12,#264]
loop_139                                                ; Address &826C, referenced once
        MOV     R0,R2
        BL      subroutine_301
        CMN     R0,#1
        BEQ     skip_308
        CMP     R0,R1
        LDRCCB  R0,[R2,#3]
        ADDCC   R2,R2,R0
        BCC     loop_139
        MOV     R11,R2
        BL      subroutine_282
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        B       skip_313
skip_308                                                ; Address &82A0, referenced once
        BL      subroutine_253
skip_313                                                ; Address &82A4, referenced once
        MOV     R0,#0
        STR     R0,[R12,#292]
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_267                                          ; Address &82B0, referenced 3 times
        Push    "R0-R2,R14"
        SWI     OS_WriteI+22
        LDR     R0,[R12,#300]
        SWI     OS_WriteC
        BL      subroutine_97
        MOV     R1,#VduExt_ScrRCol
        SWI     OS_ReadModeVariable
        ADD     R2,R2,#1
        STR     R2,[R12,#312]
        SUB     R2,R2,#6
        STR     R2,[R12,#320]
        MOV     R1,#VduExt_ScrBRow
        SWI     OS_ReadModeVariable
        ADD     R2,R2,#1
        STR     R2,[R12,#316]
        LDR     R0,[R12,#344]
        CMP     R0,#0
        MOVNE   R0,#1
        LDR     R1,[R12,#556]
        CMP     R1,#1
        STREQ   R2,[R12,#328]
        MOVEQ   R1,#0
        STREQ   R1,[R12,#332]
        BLNE    subroutine_17
        BL      subroutine_1
        SWI     OS_WriteI+23
        SWI     OS_WriteI+16
        SWI     OS_WriteI+1
        BL      subroutine_196
        BL      subroutine_77
        BL      subroutine_249
        MOV     R0,#1
        STR     R0,[R12,#408]
        LDR     R1,[R12,#556]
        CMP     R1,#1
        STRNE   R0,[R12,#412]
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_269                                          ; Address &8344, referenced 5 times
        Push    "R0,R14"
        LDR     R0,[R12,#516]
        CMP     R0,#&6C                                 ; ="l"
        CMPNE   R0,#&4C                                 ; ="L"
        LDRNE   R0,[R12,#520]
        CMPNE   R0,#&6C                                 ; ="l"
        CMPNE   R0,#&4C                                 ; ="L"
        LDRNE   R0,[R12,#264]
        STRNE   R0,[R12,#480]
        LDRNE   R0,[R12,#260]
        SUBNE   R0,R0,#2
        STRNE   R0,[R12,#484]
        BLEQ    subroutine_244
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_273                                          ; Address &837C, referenced once
        Push    "R0,R7-R9,R14"
        ADD     R9,R12,#&0280                           ; =640
        ADD     R8,R12,#&0248                           ; =584
        ADD     R7,R12,#&0280                           ; =640
loop_132                                                ; Address &838C, referenced once
        CMP     R8,R7
        BEQ     skip_332
        LDR     R0,[R9],#4
        CMN     R0,#1
        BLNE    subroutine_301
        STR     R0,[R8],#4
        B       loop_132
skip_332                                                ; Address &83A8, referenced once
        Pull    "R0,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_281                                          ; Address &83AC, referenced 10 times
        Push    "R0,R14"
        LDR     R11,[R12,#264]
        BL      subroutine_282
        LDR     R0,[R12,#600]
        STR     R0,[R12,#624]
        MOV     R0,#0
        STR     R0,[R12,#292]
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_287                                          ; Address &83CC, referenced 7 times
        Push    "R0,R14"
        LDR     R0,[R12,#264]
        BL      subroutine_301
        CMN     R0,#1
        MOVEQ   R0,#&0A                                 ; =10
        STR     R0,[R12,#604]
        STR     R0,[R12,#628]
        MOV     R0,#0
        STR     R0,[R12,#296]
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_290                                          ; Address &83F4, referenced 3 times
        Push    "R0-R3,R9,R14"
        LDR     R1,[R12,#452]
        CMP     R1,#0
        BEQ     skip_369
        MOV     R9,R0
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#320]
        BL      subroutine_153
        LDR     R2,[R12,#564]
        ADD     R0,R0,R9
        LDR     R3,[R2,R0,LSL #2]
        CMP     R1,R3
        ADDCS   R1,R1,#1
        STRCS   R1,[R2,R0,LSL #2]
skip_369                                                ; Address &842C, referenced once
        Pull    "R0-R3,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_294                                          ; Address &8430, referenced 16 times
        Push    "R0-R3,R6-R9,R14"
        MOV     R9,R0
        MOV     R8,R1
        LDR     R7,[R12,#300]
        LDR     R0,[R12,#348]
        STR     R0,[R12,#416]
        LDR     R1,[R12,#320]
        SUB     R1,R1,#&16                              ; =22
        MOV     R1,R1,LSR #1
        LDR     R2,[R12,#324]
        SUB     R2,R2,#&0A                              ; =10
        MOV     R2,R2,LSR #1
        BL      subroutine_140
        MOV     R6,R2
        ADD     R0,R1,#1
        STR     R0,[R12,#420]
        ADD     R0,R2,#1
        STR     R0,[R12,#424]
        CMP     R7,#7
        MOVEQ   R0,#&2A                                 ; ="*"
        MOVNE   R0,#&99                                 ; =""
        SWI     OS_WriteC
        CMP     R7,#7
        MOVEQ   R0,#&5F                                 ; ="_"
        MOVNE   R0,#&96                                 ; =""
        BL      subroutine_304
        CMP     R7,#7
        MOVEQ   R0,#&2A                                 ; ="*"
        MOVNE   R0,#&9A                                 ; =""
        SWI     OS_WriteC
        ADD     R2,R2,#&0A                              ; =10
        BL      subroutine_140
        CMP     R7,#7
        MOVEQ   R0,#&2A                                 ; ="*"
        MOVNE   R0,#&9B                                 ; =""
        SWI     OS_WriteC
        CMP     R7,#7
        MOVEQ   R0,#&5F                                 ; ="_"
        MOVNE   R0,#&97                                 ; =""
        BL      subroutine_304
        CMP     R7,#7
        MOVEQ   R0,#&2A                                 ; ="*"
        MOVNE   R0,#&9C                                 ; =""
        SWI     OS_WriteC
        BL      subroutine_308
        ADD     R1,R1,#&21                              ; ="!"
        BL      subroutine_308
        CMP     R7,#7
        CMNNE   R9,#1
        BEQ     skip_390
        LDR     R1,[R12,#420]
        SUB     R1,R1,#1
        LDR     R2,[R12,#424]
        ADD     R2,R2,#1
        BL      subroutine_140
        SWI     OS_WriteI+157
        ADD     R1,R1,#&21                              ; ="!"
        BL      subroutine_140
        SWI     OS_WriteI+158
skip_390                                                ; Address &851C, referenced once
        SWI     OS_WriteI+28
        LDR     R0,[R12,#420]
        SWI     OS_WriteC
        LDR     R0,[R12,#424]
        ADD     R0,R0,#8
        LDR     R1,[R12,#344]
        ADD     R0,R0,R1
        SWI     OS_WriteC
        LDR     R0,[R12,#420]
        ADD     R0,R0,#&1F                              ; =31
        SWI     OS_WriteC
        LDR     R0,[R12,#424]
        ADD     R0,R0,R1
        SWI     OS_WriteC
        SWI     OS_WriteI+12
        MOVS    R0,R9
        BMI     skip_410
        MVN     R1,#0
        BL      message_print
        MOV     R1,#0
        MOV     R2,#1
        BL      subroutine_140
        CMP     R7,#7
        MOVEQ   R0,#&5F                                 ; ="_"
        MOVNE   R0,#&9F                                 ; =""
        BL      subroutine_304
skip_410                                                ; Address &8584, referenced once
        MOVS    R0,R8
        MVNPL   R1,#0
        BLPL    message_print
        MOV     R0,#1
        STR     R0,[R12,#428]
        LDR     R0,[R12,#564]
        ADD     R0,R0,R6,LSL #2
        LDR     R1,[R12,#420]
        ADD     R1,R1,#&21                              ; ="!"
        MOV     R2,#&0B                                 ; =11
loop_18                                                 ; Address &85AC, referenced once
        LDR     R3,[R0],#4
        CMP     R1,R3
        STRGT   R1,[R0,#-4]
        SUBS    R2,R2,#1
        BNE     loop_18
        Pull    "R0-R3,R6-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_304                                          ; Address &85C4, referenced 3 times
        Push    "R14"
        MOV     R3,#&20                                 ; =" "
loop_90                                                 ; Address &85CC, referenced once
        SWI     OS_WriteC
        SUBS    R3,R3,#1
        BNE     loop_90
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_308                                          ; Address &85DC, referenced twice
        Push    "R14"
        LDR     R2,[R12,#424]
        MOV     R3,#8
        CMP     R7,#7
        MOVEQ   R0,#&7C                                 ; ="|"
        MOVNE   R0,#&98                                 ; =""
loop_87                                                 ; Address &85F4, referenced once
        BL      subroutine_140
        SWI     OS_WriteC
        ADD     R2,R2,#1
        SUBS    R3,R3,#1
        BPL     loop_87
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_315                                          ; Address &860C, referenced once
        Push    "R0-R6,R14"
        CMP     R1,#1
        BLE     skip_24
        SUB     R1,R1,#1
        MOV     R2,#0
loop_84                                                 ; Address &8620, referenced once
        CMP     R2,R1
        BEQ     skip_24
        LDR     R4,[R0,R2,LSL #2]
        ADD     R3,R2,#1
loop_61                                                 ; Address &8630, referenced once
        CMP     R3,R1
        BGT     skip_277
        LDR     R5,[R0,R3,LSL #2]
        CMP     R4,R5
        BEQ     skip_1
        MOVCS   R6,R4
        MOVCS   R4,R5
        MOVCS   R5,R6
        STRCS   R4,[R0,R2,LSL #2]
        STRCS   R5,[R0,R3,LSL #2]
skip_1                                                  ; Address &8658, referenced once
        ADD     R3,R3,#1
        B       loop_61
skip_277                                                ; Address &8660, referenced once
        ADD     R2,R2,#1
        B       loop_84
skip_24                                                 ; Address &8668, referenced twice
        Pull    "R0-R6,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_17                                           ; Address &866C, referenced twice
        Push    "R0-R3,R14"
        LDR     R1,[R12,#316]
        MOV     R2,R1,LSR #1
        SUB     R1,R1,R2
        MOV     R3,#0
        CMP     R0,#0
        STRNE   R1,[R12,#328]
        STRNE   R2,[R12,#332]
        STRNE   R2,[R12,#336]
        STRNE   R3,[R12,#340]
        STREQ   R2,[R12,#328]
        STREQ   R3,[R12,#332]
        STREQ   R1,[R12,#336]
        STREQ   R2,[R12,#340]
        Pull    "R0-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_23                                           ; Address &86A8, referenced 5 times
        Push    "R0-R2,R8,R9,R14"
        ADD     R0,R12,#&0400                           ; =1024
        MOV     R1,#&01D0                               ; =464
        BL      subroutine_112
        ADD     R0,R12,#&0A70                           ; =2672
        LDR     R8,[R12,#292]
        ADD     R9,R0,R8
        MOV     R0,R9
        LDR     R2,[R12,#384]
        SUB     R1,R2,R8
        BL      subroutine_193
        SUB     R2,R1,R0
        ADD     R0,R9,R0
        ADD     R1,R12,#&0400                           ; =1024
        LDR     R9,[R12,#532]
        ADD     R1,R1,R9
        BL      subroutine_114
        ADD     R0,R12,#&0400                           ; =1024
        ADD     R1,R2,R9
        BL      subroutine_151
        STR     R0,[R12,#396]
        Pull    "R0-R2,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_27                                           ; Address &8700, referenced once
        Push    "R0-R2,R14"
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#356]
        BL      subroutine_313
        LDR     R0,[R12,#316]
        MOV     R0,R0,LSR #1
        CMP     R2,R0
        MOVCS   R0,#0
        MOVCC   R0,#1
        BL      subroutine_17
        BL      subroutine_258
        MOV     R0,#2
        STR     R0,[R12,#556]
        LDR     R0,[R12,#560]
        LDR     R0,[R0,#0]
        BL      subroutine_301
        CMN     R0,#1
        MOVEQ   R0,#&0A                                 ; =10
        STR     R0,[R12,#624]
        BL      subroutine_216
        BL      subroutine_1
        BL      subroutine_167
        BL      subroutine_117
        BL      subroutine_156
        BL      subroutine_135
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_32                                           ; Address &8768, referenced once
        Push    "R1,R2,R6,R7,R14"
        MOV     R6,R0
        MOV     R7,R1
        BL      subroutine_23
        ADD     R0,R12,#&0400                           ; =1024
        LDR     R1,[R12,#396]
        MOV     R2,R7
        BL      subroutine_174
        ADD     R0,R12,#&1000                           ; =4096
        BL      subroutine_292
        ADD     R0,R12,#&1000                           ; =4096
        ADD     R1,R12,#&1200                           ; =4608
        LDR     R2,[R12,#388]
        BL      subroutine_114
        STR     R2,[R12,#392]
        ADD     R0,R12,#&0A70                           ; =2672
        LDR     R1,[R12,#292]
        LDR     R2,[R12,#600]
        BL      subroutine_174
        ADD     R0,R12,#&1000                           ; =4096
        BL      subroutine_292
        ADD     R0,R11,#4
        LDRB    R1,[R11,#3]
        SUB     R1,R1,#4
        BL      subroutine_112
        BL      subroutine_300
        CMP     R0,#0
        ORRNE   R6,R6,#2
        MOV     R0,R6
        Pull    "R1,R2,R6,R7,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_37                                           ; Address &87E0, referenced once
        Push    "R0-R3,R6,R7,R14"
        MOV     R6,R0
        MOV     R7,R1
        TST     R6,#4
        BEQ     skip_21
        TST     R6,#8
        ADDEQ   R0,R12,#&0A70                           ; =2672
        MOVEQ   R1,#0
        BEQ     skip_281
skip_21                                                 ; Address &8804, referenced once
        TST     R6,#1
        ADDEQ   R0,R12,#&0A70                           ; =2672
        LDREQ   R1,[R12,#292]
        BEQ     skip_281
        ADD     R0,R12,#&1000                           ; =4096
        BL      subroutine_102
        ADD     R0,R12,#&0400                           ; =1024
        LDR     R1,[R12,#396]
skip_281                                                ; Address &8824, referenced twice
        LDR     R2,[R12,#600]
        MOV     R3,R11
        BL      subroutine_306
        TST     R6,#4
        BEQ     skip_36
        TST     R6,#8
        MOVNE   R1,#0
        BNE     skip_48
skip_36                                                 ; Address &8844, referenced once
        TST     R6,#1
        BEQ     skip_39
        ADD     R0,R12,#&1200                           ; =4608
        BL      subroutine_102
        B       skip_233
skip_39                                                 ; Address &8858, referenced once
        BL      subroutine_23
skip_233                                                ; Address &885C, referenced once
        LDR     R1,[R12,#396]
skip_48                                                 ; Address &8860, referenced once
        ADD     R0,R12,#&0400                           ; =1024
        MOV     R2,R7
        LDRB    R3,[R11,#3]
        ADD     R3,R11,R3
        BL      subroutine_306
        Pull    "R0-R3,R6,R7,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_69                                           ; Address &8878, referenced 3 times
        Push    "R0,R9,R14"
        MOV     R0,#&12                                 ; =18
        BL      subroutine_202
        MOV     R9,R0
        LDR     R0,[R12,#352]
        CMP     R0,#0
        BEQ     skip_57
        SWI     OS_WriteS
        DCB     " Copy ", 0
        ALIGN
code_10                                                 ; Address &88A0, not referenced
        B       code_1
skip_57                                                 ; Address &88A4, referenced once
        SWI     OS_WriteS
        DCB     "      ", 0
        ALIGN
code_1                                                  ; Address &88B0, referenced once
        BL      subroutine_20
        MOV     R0,R9
        BL      subroutine_63
        Pull    "R0,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_91                                           ; Address &88C0, referenced once
        Push    "R0-R2,R9,R14"
        LDR     R2,[R12,#400]
        CMP     R2,#0
        BEQ     skip_68
        MOV     R0,#&18                                 ; =24
        BL      subroutine_202
        MOV     R9,R0
        LDR     R1,[R12,#312]
        SUB     R1,R1,#&18                              ; =24
        CMP     R2,R1
        MOVCC   R1,R2
        ADD     R2,R12,#&09D0                           ; =2512
loop_117                                                ; Address &88F0, referenced once
        LDRB    R0,[R2],#1
        SWI     OS_WriteC
        SUBS    R1,R1,#1
        BNE     loop_117
        BL      subroutine_20
        MOV     R0,R9
        BL      subroutine_63
skip_68                                                 ; Address &890C, referenced once
        Pull    "R0-R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_103                                          ; Address &8910, referenced 4 times
        Push    "R0,R1,R9,R14"
        MOV     R0,#7
        BL      subroutine_202
        MOV     R9,R0
        LDR     R0,[R12,#380]
        LDR     R1,[R12,#376]
        ORRS    R0,R0,R1
        BEQ     skip_81
        SWI     OS_WriteS
        DCB     " Modified", 0
        ALIGN
code_14                                                 ; Address &8940, not referenced
        B       code_26
skip_81                                                 ; Address &8944, referenced once
        SWI     OS_WriteS
        DCB     " Original", 0
        ALIGN
code_26                                                 ; Address &8954, referenced once
        BL      subroutine_20
        MOV     R0,R9
        BL      subroutine_63
        Pull    "R0,R1,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_123                                          ; Address &8964, referenced once
        Push    "R0,R9,R14"
        MOV     R0,#&10                                 ; =16
        BL      subroutine_202
        MOV     R9,R0
        SWI     OS_WriteS
        DCB     &20, &20, 0
        ALIGN
code_12                                                 ; Address &897C, not referenced
        BL      subroutine_20
        MOV     R0,R9
        BL      subroutine_63
        Pull    "R0,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_134                                          ; Address &898C, referenced 5 times
        Push    "R0-R2,R9,R14"
        BL      subroutine_122
        MOV     R9,R0
        SWI     OS_WriteI+26
        BL      subroutine_20
        LDR     R0,[R12,#268]
        BL      subroutine_35
        MOV     R1,#0
        LDR     R2,[R12,#316]
        SUB     R2,R2,#1
        MOV     R0,#7
        BL      subroutine_131
        BL      subroutine_20
        MOV     R0,R9
        BL      subroutine_63
        Pull    "R0-R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_139                                          ; Address &89CC, referenced once
        Push    "R0-R4,R7-R9,R14"
        MOV     R9,R0
        MOV     R8,R1
        BL      subroutine_122
        MOV     R7,R0
        SWI     OS_WriteI+26
        BL      subroutine_20
        LDR     R2,[R12,#316]
        SUB     R2,R2,#1
        LDR     R4,[R12,#312]
        SUB     R0,R4,#&18                              ; =24
        SUB     R0,R0,R8
        LDR     R3,[R12,#400]
        SUBS    R0,R0,R3
        BPL     skip_58
        MOV     R1,#&18                                 ; =24
        BL      subroutine_140
        MOV     R0,#0
        MOV     R1,R3
        BL      message_print
skip_58                                                 ; Address &8A1C, referenced once
        SUB     R1,R4,R8
        BL      subroutine_140
        MOV     R0,R9
        MOV     R1,R8
        BL      message_print
        BL      subroutine_20
        MOV     R0,R7
        BL      subroutine_63
        Pull    "R0-R4,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_151                                          ; Address &8A40, referenced 7 times
        Push    "R1,R2,R14"
loop_45                                                 ; Address &8A44, referenced once
        SUBS    R1,R1,#1
        BMI     skip_117
        LDRB    R2,[R0,R1]
        CMP     R2,#&20                                 ; =" "
        BEQ     loop_45
skip_117                                                ; Address &8A58, referenced once
        ADD     R0,R1,#1
        Pull    "R1,R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_167                                          ; Address &8A60, referenced 4 times
        Push    "R0,R1,R14"
        LDR     R0,[R12,#600]
        LDR     R1,[R12,#604]
        STR     R0,[R12,#604]
        STR     R1,[R12,#600]
        LDR     R0,[R12,#624]
        LDR     R1,[R12,#628]
        STR     R0,[R12,#628]
        STR     R1,[R12,#624]
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#296]
        STR     R0,[R12,#296]
        STR     R1,[R12,#292]
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_175                                          ; Address &8A98, referenced once
        Push    "R0,R1,R14"
        LDR     R0,[R12,#328]
        LDR     R1,[R12,#336]
        STR     R0,[R12,#336]
        STR     R1,[R12,#328]
        LDR     R0,[R12,#332]
        LDR     R1,[R12,#340]
        STR     R0,[R12,#340]
        STR     R1,[R12,#332]
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_185                                          ; Address &8AC0, not referenced
        Push    "R0,R1,R7-R9,R14"
        LDR     R8,[R12,#360]
        CMP     R8,#0
        BEQ     skip_148
        LDR     R0,[R12,#292]
        LDR     R1,[R12,#320]
        BL      subroutine_153
        MOV     R9,R1
        MOV     R0,R9
        MOV     R1,R8
        BL      subroutine_153
        SUB     R7,R8,R1
        ADD     R0,R7,R9
        LDR     R1,[R12,#320]
        CMP     R0,R1
        SUBCS   R7,R1,R9
loop_128                                                ; Address &8B00, referenced once
        BL      subroutine_147
        SUBS    R7,R7,#1
        BNE     loop_128
skip_148                                                ; Address &8B0C, referenced once
        Pull    "R0,R1,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_202                                          ; Address &8B10, referenced 5 times
        Push    "R1,R2,R14"
        MOV     R1,R0
        BL      subroutine_122
        SWI     OS_WriteI+26
        LDR     R2,[R12,#316]
        SUB     R2,R2,#1
        BL      subroutine_140
        BL      subroutine_20
        Pull    "R1,R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_208                                          ; Address &8B34, not referenced
        Push    "R1-R3,R14"
        ADD     R1,R12,#&0C40                           ; =3136
        LDR     R2,[R12,#284]
loop_103                                                ; Address &8B40, referenced once
        SUBS    R2,R2,#1
        MOVMI   R0,#1
        BMI     skip_461
        LDRB    R3,[R1,R2]
        CMP     R3,#&20                                 ; =" "
        BEQ     loop_103
        MOV     R0,#0
skip_461                                                ; Address &8B5C, referenced once
        Pull    "R1-R3,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_225                                          ; Address &8B60, referenced 3 times
        Push    "R9,R14"
        MOV     R9,R0
        LDR     R0,[R12,#264]
        LDRB    R0,[R0,#1]
        CMP     R0,#&FF                                 ; ="ÿ"
        LDRNEB  R0,[R9,#3]
        ADDNE   R0,R9,R0
        LDRNEB  R0,[R0,#1]
        CMPNE   R0,#&FF                                 ; ="ÿ"
        MOVEQ   R0,#1
        MOVNE   R0,#0
        Pull    "R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_228                                          ; Address &8B90, referenced 5 times
        Push    "R14"
        CMP     R0,#&8000
        MOVCC   R0,#0
        BCC     skip_240
        BL      subroutine_283
        ANDS    R0,R0,#8
        MOVNE   R0,#1
skip_240                                                ; Address &8BAC, referenced once
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_234                                          ; Address &8BB0, referenced once
        Push    "R0,R1,R14"
        SWI     OS_WriteI+28
        SWI     OS_WriteI+6
        LDR     R0,[R12,#324]
        LDR     R1,[R12,#344]
        ADD     R0,R0,R1
        SWI     OS_WriteC
        LDR     R0,[R12,#320]
        ADD     R0,R0,#5
        SWI     OS_WriteC
        MOV     R0,R1
        SWI     OS_WriteC
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_238                                          ; Address &8BE4, referenced twice
        Push    "R0-R2,R7-R9,R14"
        MOV     R9,R0
        MOV     R8,R1
        ADD     R7,R12,#&0260                           ; =608
        MOV     R0,R7
        MOV     R1,#3
        MOV     R2,R9
        BL      subroutine_241
        MVN     R2,#0
        CMN     R0,#1
        BEQ     skip_280
        STR     R2,[R7,R0,LSL #2]
loop_149                                                ; Address &8C14, referenced once
        MOV     R0,R8
        MOV     R1,R9
        BL      subroutine_125
        LDR     R0,[R12,#556]
        CMP     R0,#1
        BEQ     skip_289
        BL      subroutine_258
        MOV     R0,R9
        BL      subroutine_277
        MOV     R2,R0
        LDR     R0,[R12,#560]
        LDR     R1,[R12,#324]
        BL      subroutine_241
        CMN     R0,#1
        MOVNE   R1,R9
        BLNE    subroutine_125
        BL      subroutine_1
        B       skip_289
skip_280                                                ; Address &8C5C, referenced once
        MOV     R0,R7
        BL      subroutine_241
        CMN     R0,#1
        STRNE   R9,[R7,R0,LSL #2]
        BNE     loop_149
        SWI     OS_WriteI+7
skip_289                                                ; Address &8C74, referenced twice
        Pull    "R0-R2,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_255                                          ; Address &8C78, referenced twice
        Push    "R1,R2,R7-R9,R14"
        MOV     R9,R0
        MOV     R0,#OsByte_RW_KeybStatus
        MOV     R1,#0
        MOV     R2,#&FF                                 ; ="ÿ"
        SWI     OS_Byte
        MOV     R8,R1
        MVN     R0,#2
        BL      subroutine_293
        MOV     R7,R0
        CMP     R9,#&1B                                 ; =27
        MOVEQ   R9,#&B300
        BEQ     skip_343
        CMP     R9,#&1E                                 ; =30
        MOVEQ   R9,#&B200
        CMP     R9,#8
        CMPNE   R9,#&7F                                 ; =127
        BNE     skip_304
        TST     R8,#8
        MOVEQ   R9,#&B000
        MOVNE   R9,#&B100
        B       skip_343
skip_304                                                ; Address &8CD0, referenced once
        CMP     R9,#&0D                                 ; =13
        BNE     skip_311
        MVN     R0,#&65                                 ; ="e"
        BL      subroutine_293
        CMP     R0,#0
        MOVEQ   R9,#&B800
        B       skip_343
skip_311                                                ; Address &8CEC, referenced once
        CMP     R9,#&8C00
        BNE     skip_318
        CMP     R7,#0
        MOVNE   R9,#&B400
        B       skip_343
skip_318                                                ; Address &8D00, referenced once
        CMP     R9,#&8D00
        BNE     skip_325
        CMP     R7,#0
        MOVNE   R9,#&B500
        B       skip_343
skip_325                                                ; Address &8D14, referenced once
        CMP     R9,#&8F00
        BNE     skip_334
        CMP     R7,#0
        MOVNE   R9,#&B700
        B       skip_343
skip_334                                                ; Address &8D28, referenced once
        CMP     R9,#&8E00
        BNE     skip_343
        CMP     R7,#0
        MOVNE   R9,#&B600
skip_343                                                ; Address &8D38, referenced 7 times
        MOV     R0,R9
        Pull    "R1,R2,R7-R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_293                                          ; Address &8D40, referenced twice
        Push    "R14"
        MOV     R1,R0
        MOV     R0,#OsByte_INKEY
        MOV     R2,#&FF                                 ; ="ÿ"
        SWI     OS_Byte
        CMP     R1,#&FF                                 ; ="ÿ"
        CMPEQ   R2,#&FF                                 ; ="ÿ"
        MOVEQ   R0,#1
        MOVNE   R0,#0
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_295                                          ; Address &8D68, referenced twice
        Push    "R0,R1,R14"
        LDR     R0,[R12,#376]
        MOV     R1,#0
        STR     R1,[R12,#376]
        CMP     R0,#0
        BEQ     skip_413
        LDR     R0,[R12,#380]
        CMP     R0,#0
        BLEQ    subroutine_103
skip_413                                                ; Address &8D8C, referenced once
        Pull    "R0,R1,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_306                                          ; Address &8D90, referenced 8 times
        Push    "R1-R4,R9,R14"
        BL      subroutine_174
        LDR     R9,[R12,#388]
        CMN     R9,#1
        MOVEQ   R0,#&0D                                 ; =13
        BEQ     skip_451
        ADD     R0,R12,#&1000                           ; =4096
        BL      subroutine_102
        LDR     R0,[R12,#396]
        CMN     R0,#1
        MOVEQ   R0,#&0D                                 ; =13
        BEQ     skip_451
        MOV     R0,R3
        BL      subroutine_301
        CMN     R0,#1
        MOVEQ   R4,#0
        BEQ     skip_441
        CMP     R0,R2
        MOVNE   R4,#0
        LDREQB  R4,[R3,#3]
skip_441                                                ; Address &8DE0, referenced once
        LDR     R0,[R12,#272]
        ADD     R0,R0,R4
        CMP     R9,R0
        MOVGT   R0,#&0C                                 ; =12
        BGT     skip_451
        ADD     R0,R3,R4
        ADD     R1,R3,R9
        LDR     R2,[R12,#260]
        SUB     R2,R2,R0
        BL      subroutine_114
        ADD     R0,R12,#&1000                           ; =4096
        MOV     R1,R3
        MOV     R2,R9
        BL      subroutine_114
        BL      subroutine_261
        CMP     R4,R9
        BLNE    subroutine_134
        BL      subroutine_119
        MOV     R0,#0
skip_451                                                ; Address &8E2C, referenced 3 times
        Pull    "R1-R4,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_4                                            ; Address &8E30, referenced 3 times
        Push    "R1,R2,R9,R14"
        MOV     R9,R0
        CMN     R0,#1
        MOVEQ   R0,#&34                                 ; ="4"
        BEQ     skip_9
        ADR     R0,data_maxmode
        ADD     R1,R12,#&023C                           ; =572
        SWI     OS_ReadVduVariables
        LDR     R0,[R12,#572]
        CMP     R9,R0
        BGT     skip_4
        MOV     R0,R9
        SWI     OS_CheckModeValid
        CMN     R0,#1
        BEQ     skip_4
        CMN     R0,#2
        MOVEQ   R0,#&43                                 ; ="C"
        BEQ     skip_9
        MOV     R0,R9
        MOV     R1,#VduExt_ScrRCol
        SWI     OS_ReadModeVariable
        BCS     skip_4
        CMP     R2,#&27                                 ; ="'"
        BCC     skip_4
        CMP     R2,#&A0                                 ; =" "
        BCS     skip_4
        MOV     R1,#VduExt_ScrBRow
        SWI     OS_ReadModeVariable
        CMP     R2,#&80                                 ; =""
        BCS     skip_4
        CMP     R2,#&17                                 ; =23
        BCC     skip_4
        MOV     R0,#0
        B       skip_9
skip_4                                                  ; Address &8EC8, referenced 7 times
        MOV     R0,#&35                                 ; ="5"
skip_9                                                  ; Address &8ECC, referenced 3 times
        Pull    "R1,R2,R9,PC"

data_maxmode
        DCD     VduExt_MaxMode
        DCD     -1

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_41                                           ; Address &8ED8, referenced 5 times
        Push    "R0-R4,R14"
        MOV     R3,#0
        MVN     R2,#0
        LDR     R4,[R12,#264]
loop_150                                                ; Address &8EE8, referenced once
        LDRB    R0,[R4,#0]
        CMP     R0,#&0D                                 ; =13
        BNE     skip_43
        MOV     R0,R4
        BL      subroutine_301
        CMN     R0,#1
        BEQ     skip_55
        CMP     R0,R2
        MOVLE   R3,#1
        MOV     R2,R0
        LDRB    R0,[R4,#3]
        CMP     R0,#4
        BCC     skip_43
        ADD     R4,R4,R0
        LDR     R1,[R12,#256]
        CMP     R4,R1
        BCC     loop_150
skip_43                                                 ; Address &8F2C, referenced twice
        MOV     R0,#1
loop_7                                                  ; Address &8F30, referenced once
        STR     R0,[R12,#304]
        B       skip_62
skip_55                                                 ; Address &8F38, referenced once
        BL      subroutine_261
        LDR     R0,[R12,#288]
        CMP     R0,#&FF00
        MOVGT   R0,#2
        BGT     loop_7
        STR     R3,[R12,#308]
skip_62                                                 ; Address &8F50, referenced once
        Pull    "R0-R4,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_101                                          ; Address &8F54, referenced once
        Push    "R1,R2,R9,R14"
        MOV     R9,#0
        ADD     R0,R12,#&02B8                           ; =696
        MOV     R1,#4
loop_16                                                 ; Address &8F64, referenced once
        LDR     R2,[R0],#4
        CMP     R2,#&7F                                 ; =127
        CMPNE   R2,#&1F                                 ; =31
        BLE     skip_185
        SUBS    R1,R1,#1
        BNE     loop_16
        BL      subroutine_71
        CMP     R0,#0
        BEQ     skip_91
skip_185                                                ; Address &8F88, referenced once
        MOV     R9,#1
skip_91                                                 ; Address &8F8C, referenced once
        MOV     R0,R9
        Pull    "R1,R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_140                                          ; Address &8F94, referenced 44 times
        Push    "R0-R2,R14"
        LDR     R0,[R12,#452]
        CMP     R0,#0
        BEQ     skip_109
        SWI     OS_WriteI+31
        MOV     R0,R1
        SWI     OS_WriteC
        MOV     R0,R2
        SWI     OS_WriteC
skip_109                                                ; Address &8FB8, referenced once
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_161                                          ; Address &8FBC, referenced twice
        Push    "R0-R4,R14"
        BL      subroutine_197
        MOV     R3,#0
        MOV     R2,#0
        MOV     R1,#0
        MOV     R0,#0
        SWI     OS_Control
        BL      subroutine_276
        LDR     R0,[R12,#300]
        BL      subroutine_4
        CMP     R0,#0
        MOVNE   R0,#0
        STRNE   R0,[R12,#300]
        BLNE    subroutine_92
        MOV     R0,#OsByte_SpecifyOutputStream
        MOV     R1,#9
        SWI     OS_Byte
        MOV     R0,#OsByte_SpecifyOutputStream
        AND     R1,R1,#&FD                              ; ="ý"
        SWI     OS_Byte
        MOV     R0,#1
        STR     R0,[R12,#452]
        SWI     OS_WriteI+3
        SWI     OS_WriteI+6
        BL      subroutine_267
        MOV     R0,#OsByte_CursorKeyStatus
        MOV     R1,#2
        SWI     OS_Byte
        MOV     R0,#OsByte_RW_UseOfCode197To207
        MOV     R1,#2
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfCode208To223
        MOV     R1,#2
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfCode224To239
        MOV     R1,#2
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfCode240To255
        MOV     R1,#1
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfFKeys
        MOV     R1,#2
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfShiftFKeys
        MOV     R1,#2
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfCtrlFKeys
        MOV     R1,#2
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_UseOfCtrlShiftFKeys
        MOV     R1,#1
        BL      do_osbyte_y0
        BL      do_bar_char_defns
        BL      subroutine_83
        MOV     R0,#OsByte_RW_BreakEscapeAction
        BL      do_osbyte_x0_y0
        MOV     R0,#OsByte_RW_TabCharCode
        MOV     R1,#&8A                                 ; =""
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_EscapeCharCode
        MOV     R1,#&1B                                 ; =27
        BL      do_osbyte_y0
        MOV     R0,#OsByte_RW_EscapeKeyEffects
        BL      do_osbyte_x0_y0
        MOV     R0,#OsByte_RW_EscapeEffects
        BL      do_osbyte_x0_y0
        MOV     R0,#OsByte_RW_BaseOfNumericKeypad
        MOV     R1,#&30                                 ; ="0"
        BL      do_osbyte_y0
        Pull    "R0-R4,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_176                                          ; Address &90D4, referenced once
        Push    "R1,R2,R9,R14"
        BL      subroutine_178
        MOV     R0,#&39                                 ; ="9"
        MOV     R1,#&3A                                 ; =":"
        BL      subroutine_294
        MOV     R1,#&17                                 ; =23
        MOV     R2,#2
        BL      subroutine_140
        LDR     R0,[R12,#696]
        SWI     OS_WriteC
        MOV     R2,#3
        BL      subroutine_140
        LDR     R0,[R12,#700]
        SWI     OS_WriteC
        MOV     R2,#5
        BL      subroutine_140
        LDR     R0,[R12,#708]
        SWI     OS_WriteC
        MOV     R2,#6
        BL      subroutine_140
        LDR     R0,[R12,#704]
        SWI     OS_WriteC
loop_35                                                 ; Address &912C, referenced once
        BL      subroutine_213
        MOV     R9,R0
        BL      subroutine_190
        BL      subroutine_71
        CMP     R0,#0
        BEQ     skip_176
        BL      subroutine_52
        BL      subroutine_197
        B       loop_35
skip_176                                                ; Address &9150, referenced once
        MOV     R0,R9
        Pull    "R1,R2,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_213                                          ; Address &9158, referenced once
        Push    "R1,R2,R8,R9,R14"
        MOV     R8,#1
loop_59                                                 ; Address &9160, referenced twice
        CMP     R8,#1
        BLEQ    subroutine_262
        CMP     R8,#2
        BLEQ    subroutine_288
        CMP     R8,#3
        BLEQ    subroutine_307
        CMP     R8,#4
        BLEQ    subroutine_12
        CMP     R9,#&B800
        BNE     skip_241
        CMP     R8,#4
        BNE     skip_423
        B       skip_296
skip_241                                                ; Address &9194, referenced once
        CMP     R9,#&8A00
        BNE     skip_268
skip_423                                                ; Address &919C, referenced once
        ADD     R8,R8,#1
        CMP     R8,#5
        MOVEQ   R8,#1
        B       loop_59
skip_268                                                ; Address &91AC, referenced once
        CMP     R9,#&9A00
        BNE     skip_296
        SUBS    R8,R8,#1
        MOVEQ   R8,#4
        B       loop_59
skip_296                                                ; Address &91C0, referenced twice
        MOV     R0,R9
        Pull    "R1,R2,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_262                                          ; Address &91C8, referenced once
        Push    "R14"
loop_165                                                ; Address &91CC, referenced once
        MVN     R0,#0
        MOV     R1,#&17                                 ; =23
        MOV     R2,#2
        BL      subroutine_305
        CMP     R1,#0
        STREQ   R0,[R12,#696]
        BEQ     loop_165
        MOV     R9,R1
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_288                                          ; Address &91F0, referenced once
        Push    "R14"
loop_126                                                ; Address &91F4, referenced once
        MVN     R0,#0
        MOV     R1,#&17                                 ; =23
        MOV     R2,#3
        BL      subroutine_305
        CMP     R1,#0
        STREQ   R0,[R12,#700]
        BEQ     loop_126
        MOV     R9,R1
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_307                                          ; Address &9218, referenced once
        Push    "R14"
loop_159                                                ; Address &921C, referenced once
        MVN     R0,#0
        MOV     R1,#&17                                 ; =23
        MOV     R2,#5
        BL      subroutine_305
        CMP     R1,#0
        STREQ   R0,[R12,#708]
        BEQ     loop_159
        MOV     R9,R1
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_12                                           ; Address &9240, referenced once
        Push    "R14"
loop_6                                                  ; Address &9244, referenced once
        MVN     R0,#0
        MOV     R1,#&17                                 ; =23
        MOV     R2,#6
        BL      subroutine_305
        CMP     R1,#0
        STREQ   R0,[R12,#704]
        BEQ     loop_6
        MOV     R9,R1
        Pull    "PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_52                                           ; Address &9268, referenced 14 times
        Push    "R0-R2,R14"
        MOV     R1,#0
        MOV     R2,#8
        BL      subroutine_140
        MOV     R1,#&1F                                 ; =31
        BL      message_print
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_70                                           ; Address &9284, referenced 4 times
        Push    "R0-R2,R14"
        MOV     R1,#0
        MOV     R2,#8
        BL      subroutine_140
        ADD     R0,R0,#4
        MOV     R1,#&1F                                 ; =31
        MOV     R2,#0
        STRB    R2,[R0,R1]
        SWI     OS_Write0
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_92                                           ; Address &92AC, referenced 3 times
        Push    "R0-R2,R9,R14"
        MOV     R0,#0
        LDR     R1,[R12,#568]
        ORR     R0,R0,R1,LSL #24
        LDR     R1,[R12,#544]
        ORR     R0,R0,R1,LSL #22
        LDR     R1,[R12,#360]
        ORR     R0,R0,R1,LSL #16
        LDR     R1,[R12,#300]
        ORR     R0,R0,R1,LSL #8
        LDR     R1,[R12,#540]
        ORR     R0,R0,R1,LSL #7
        LDR     R1,[R12,#276]
        ORR     R0,R0,R1,LSL #4
        LDR     R1,[R12,#536]
        ORR     R0,R0,R1,LSL #3
        LDR     R1,[R12,#280]
        ORR     R0,R0,R1
        MOV     R9,R0
        BL      subroutine_211
        ORR     R9,R0,R9

        BL      choices_openout
        BEQ     skip_195
        MOV     R0,R9,LSR #24
        SWI     XOS_BPut
        MOV     R0,R9,LSR #16
        SWI     XOS_BPut
        MOV     R0,R9,LSR #8
        SWI     XOS_BPut
        MOV     R0,R9
        SWI     XOS_BPut
        LDR     R0,[R12,#696]
        SWI     XOS_BPut
        LDR     R0,[R12,#700]
        SWI     XOS_BPut
        LDR     R0,[R12,#708]
        SWI     XOS_BPut
        LDR     R0,[R12,#704]
        SWI     XOS_BPut
        BL      choices_close
skip_195                                                ; Address &9364, referenced once
        Pull    "R0-R2,R9,PC"

; ******************************************************************************
;
; message_print
; => R0 = token number to print
;    R1 = spaces to add after
;
message_print
        Push    "R0-R3,R8,R9,R14"
        CMN     R0,#1                                   ; No token number
        BEQ     skip_326
        MOV     R9,R0                                   ; Token number to lookup
        MOV     R2,#0
        ADRL    R8,message_table
loop_14
        CMP     R2,R9                                   ; Hit the desired token?
        BEQ     skip_180
loop_105
        LDRB    R3,[R8],#1
        CMP     R3,#&FF                                 ; Token delimiter
        BNE     loop_105
        ADD     R2,R2,#1
        B       loop_14

skip_180
        MOV     R2,#0
loop_8
        LDRB    R0,[R8],#1
        CMP     R0,#&FF                                 ; Reached end of message text?
        BEQ     skip_252
        CMP     R0,#&20
        ADDCS   R2,R2,#1                                ; Don't count embedded VDU sequences
        SWI     OS_WriteC
        B       loop_8
skip_252
        CMN     R1,#1                                   ; No arguments
        BEQ     skip_326
        SUBS    R1,R1,R2
        BLE     skip_326
loop_50
        SWI     OS_WriteI+" "                           ; Align with R1 spaces
        SUBS    R1,R1,#1
        BNE     loop_50
skip_326                                                ; Address &93DC, referenced 3 times
        Pull    "R0-R3,R8,R9,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_296                                          ; Address &93E0, referenced 9 times
        Push    "R0-R2,R14"
        SUB     R2,R12,#1
        LDR     R1,[R12,#404]
loop_96                                                 ; Address &93EC, referenced once
        LDRB    R0,[R2,R1]
        SWI     OS_WriteC
        SUBS    R1,R1,#1
        BNE     loop_96
        Pull    "R0-R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_34                                           ; Address &9400, referenced twice
        Push    "R0,R14"
        LDR     R0,[R12,#304]
        CMP     R0,#1
        MOVEQ   R0,#3
        CMP     R0,#2
        MOVEQ   R0,#&42                                 ; ="B"
        STR     R0,[R12,#304]
        Pull    "R0,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_71                                           ; Address &9420, referenced twice
        Push    "R1-R4,R14"
        ADD     R0,R12,#&02B8                           ; =696
        MVN     R1,#0
loop_49                                                 ; Address &942C, referenced twice
        ADD     R1,R1,#1
        CMP     R1,#3
        MOVEQ   R0,#0
        BEQ     skip_162
        LDR     R3,[R0,R1,LSL #2]
        CMP     R3,#&20                                 ; =" "
        BEQ     loop_49
        MOV     R2,R1
loop_30                                                 ; Address &944C, referenced once
        ADD     R2,R2,#1
        CMP     R2,#4
        BEQ     loop_49
        LDR     R4,[R0,R2,LSL #2]
        CMP     R3,R4
        BNE     loop_30
        MOV     R0,#&3F                                 ; ="?"
skip_162                                                ; Address &9468, referenced once
        Pull    "R1-R4,PC"

string_The_Acorn_RISC_Basic
        DCB     "The Acorn RISC Basic Editor. (C) Chris Gibson and Pete Morris, 1987", 0
Mod_Title
        DCB     "ARMBasicEditor", 0
        ALIGN
Mod_HelpStr
        DCB     "Basic Editor", 9, Module_HelpVersion, 0
        ALIGN

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_72                                           ; Address &94E0, referenced once
        MOV     R1,R14
        WritePSRc USR_mode,R0
        ADD     R13,R12,#&1400                          ; Apportion the user mode stack
        MOV     PC,R1

; ******************************************************************************
;
; choices_openout
; => No entry parameters
; <= R0 = corrupt
;    R1 = handle, Z flag set if unable to open
;
choices_openout ROUT
        MOV     R0,#open_write :OR: open_nopath
        ADR     R1,string_ChoicesW
        B       %FT10                                   ; Common code

; ******************************************************************************
;
; choices_openin
; => No entry parameters
; <= R0 = corrupt
;    R1 = handle, Z flag set if unable to open
;
choices_openin
        MOV     R0,#open_read :OR: open_nopath
        ADR     R1,string_ChoicesRO
10
        SWI     XOS_Find
        MOVS    R1,R0
        MOV     PC,R14

string_ChoicesRO
        DCB     "Choices:ArmBE", 0
string_ChoicesW
        DCB     "<Choices$Write>.ArmBE", 0
        ALIGN

; ******************************************************************************
;
; choices_close
; => R1 = handle
; <= Registers preserved
;
choices_close
        MOV     R0,#0
        SWI     XOS_Find
        MOV     PC,R14

        END

