# Copyright 2013 Castle Technology Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Common actions for ARM disassembly

UNDEFINED()
{
	const uint32_t nonstandard = 0; /* Prevent duplicate instances due to needless dependencies on 'nonstandard' */
	COMMON
	doundefined(PARAMS);
	return;
}

UNPREDICTABLE()
{
	const uint32_t nonstandard = 0; /* Prevent duplicate instances due to needless dependencies on 'nonstandard' */
	COMMON
	if(params->opt->dci)
		sprintf(params->buf,"DCI\t%s%08X\t%s",HEX,OPCODE,MSG(MSG_UNPREDICTABLEINSTRUCTION));
	else
		sprintf(params->buf,"%s",MSG(MSG_UNPREDICTABLEINSTRUCTION));
	return;
}

UNALLOCATED_HINT()
{
	const uint32_t nonstandard = 0; /* Prevent duplicate instances due to needless dependencies on 'nonstandard' */
	COMMON
	if(params->opt->dci)
		sprintf(params->buf,"DCI\t%s%08X\t%s",HEX,OPCODE,MSG(MSG_UNALLOCATEDHINT));
	else
		sprintf(params->buf,"%s",MSG(MSG_UNALLOCATEDHINT));
	return;
}

PERMA_UNDEFINED()
{
	const uint32_t nonstandard = 0; /* Prevent duplicate instances due to needless dependencies on 'nonstandard' */
	COMMON
	if(params->opt->dci)
		sprintf(params->buf,"DCI\t%s%08X\t%s",HEX,OPCODE,MSG(MSG_PERMAUNDEFINED));
	else
		sprintf(params->buf,"%s",MSG(MSG_PERMAUNDEFINED));
	return;
}

UNALLOCATED_MEM_HINT()
{
	const uint32_t nonstandard = 0; /* Prevent duplicate instances due to needless dependencies on 'nonstandard' */
	COMMON
	if(params->opt->dci)
		sprintf(params->buf,"DCI\t%s%08X\t%s",HEX,OPCODE,MSG(MSG_UNALLOCATEDMEMHINT));
	else
		sprintf(params->buf,"%s",MSG(MSG_UNALLOCATEDMEMHINT));
	return;
}
