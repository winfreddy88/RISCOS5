# Copyright 2013 Castle Technology Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Actions for XScale DSP coprocessor disassembly

# TODO - Mark this as an unpredictable DSP instruction
UNPREDICTABLE_DSP as if MCR_MCR2_A1

MIA(cond,Rs,acc,Rm,nonstandard)
{
	COMMON
	ONLY1(XScaleDSP);
	_UNPREDICTABLE((Rs==15) || (Rm==15));
	sprintf(params->buf,"MIA%s\tacc%d,%s,%s",condition(JUSTPARAMS,cond),acc,REG(Rm),REG(Rs));
	return;
}

MIAPH(cond,Rs,acc,Rm,nonstandard)
{
	COMMON
	ONLY1(XScaleDSP);
	_UNPREDICTABLE((Rs==15) || (Rm==15));
	sprintf(params->buf,"MIAPH%s\tacc%d,%s,%s",condition(JUSTPARAMS,cond),acc,REG(Rm),REG(Rs));
	return;
}

MIAxy(cond,x,y,Rs,acc,Rm,nonstandard)
{
	COMMON
	ONLY1(XScaleDSP);
	_UNPREDICTABLE((Rs==15) || (Rm==15));
	sprintf(params->buf,"MIA%c%c%s\tacc%d,%s,%s",(x?'T':'B'),(y?'T':'B'),condition(JUSTPARAMS,cond),acc,REG(Rm),REG(Rs));
	return;
}

MAR(cond,RdHi,RdLo,acc,nonstandard)
{
	COMMON
	ONLY1(XScaleDSP);
	_UNPREDICTABLE((RdHi==15) || (RdLo==15));
	sprintf(params->buf,"MAR%s\tacc%d,%s,%s",condition(JUSTPARAMS,cond),acc,REG(RdLo),REG(RdHi));
	return;
}

MRA(cond,RdHi,RdLo,acc,nonstandard)
{
	COMMON
	ONLY1(XScaleDSP);
	_UNPREDICTABLE((RdHi==15) || (RdLo==15));
	sprintf(params->buf,"MRA%s\t%s,%s,acc%d",condition(JUSTPARAMS,cond),REG(RdLo),REG(RdHi),acc);
	return;
}
