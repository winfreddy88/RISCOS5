/* Copyright 2000 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * ExtLib.h
 * Main header file for ExtLib library - part of the OmniClient project
 */

#ifndef _EXTLIB_H
#define _EXTLIB_H

#include <time.h>

#include "Desk/Core.h"
#include "Desk/ColourTran.h"
#include "Desk/Sprite.h"
#include "Desk/Wimp.h"

#define UNUSED(x) (void) (x)

extern int event_polldelay;

extern void Window_ShowDialogue(Desk_window_handle window, bool adjustok);
extern Desk_bool Window_IsOpen(Desk_window_handle w);

extern time_t Risc_Time(time_t *place);

extern int Wimp_NewTask(char *clicmd);

extern int Text_StringWidth(char *s);

extern void Icon_SetGreyShade(Desk_window_handle window, Desk_icon_handle icon, bool shade,
  int buttontype);
extern void Icon_SetValid(Desk_window_handle window, Desk_icon_handle icon, bool shade);

extern char *cpystr(char *s);
extern char *cpyrma(char *s);
extern char *strip(char *s);

extern Desk_bool Msgs_QueryOK(int errornum, char *tag, ...);

extern void Menu_Dispose(Desk_menu_ptr menu);
#define Menu_Close() _swi (Wimp_CreateMenu, _IN (1), -1)

extern void Event_Poll(void);

extern char *Icon_GetTextPtr (Desk_window_handle w, Desk_icon_handle i);
extern Desk_bool Icon_IsEmpty (Desk_window_handle w, Desk_icon_handle i);
extern void Icon_SetBlank (Desk_window_handle w, Desk_icon_handle i);

extern char *  omni_getenv (const char *  name);

/* ARM Assembler */
extern Desk_os_error *Wimp_SpriteReadInfo(char *name, Desk_sprite_info *info);
extern void SetVar_Code(int state, int *handle);
extern void serviceomni_delay(int code);


#endif
