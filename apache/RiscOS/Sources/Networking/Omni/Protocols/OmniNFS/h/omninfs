/* Copyright 1999 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -*-c-*- */

/*
 * These routines get used by the cmhg generated header.
 */
#ifndef __OMNINFS_H
#define __OMNINFS_H

#define TICKER_RATE		6000		/* Every 60 seconds */
#define	SERVER_TIMEOUT_ILL	12000		/* After 2 mins remove from the display */
#define SERVER_TIMEOUT_DEAD	60000		/* After 10 mins forget about it */

enum { CLAIM_EVENT, DONT_CLAIM_EVENT };

/* Enum for error reporting */
typedef enum
{
    err_NOT_SUPPORTED = client_ERRBASE,
    err_BAD_MAGIC,
    err_NO_MEMORY,
    err_CANT_SET_SOCKET,
    err_BAD_IOCTL,
    err_CANT_SEND,
    err_CANT_RECV,
    err_CANT_PRINT,
    err_JOB_NOT_FINISHED,
    err_CANT_READHOST,

    err_UNKNOWN
} err_number_type;

extern const char *intl_lookup(const char *, const char *);
extern _kernel_oserror *intl_error(err_number_type);
extern int server_list_insert(unsigned long addr);
extern int server_list_purge(void);
extern void *Resources(void); /* From ResGen */

extern void *private_word;
extern int rpc_socket;

typedef struct onfs_active_server {
    unsigned int magic;
    struct onfs_active_server *next;
    char *server_name;		/* Full name of server */
    int short_name_len;		/* How much of the long name to use as a short name */
    unsigned long addr;
    unsigned int last_seen;
    int good_address;           /* True if the name was from the DNS */
    int server_ill;
} onfs_active_server;

#define ONFS_SERVER_MAGIC	0x74D0274D

typedef struct onfs_active_mount {
    unsigned int magic;
    struct onfs_active_mount *next;
    onfs_active_server *server_id;
    char *mount_name;
} onfs_active_mount;

#define ONFS_MOUNT_MAGIC	0x381CC027

typedef struct onfs_print_job {
    unsigned int magic;
    struct onfs_print_job *next;
    int handle;
    int status;
    int bytes;
} onfs_print_job;

#define ONFS_PRINT_MAGIC	0x658FBF78

#define Resolver_GetHost		0x046001

#endif /* __OMNINFS_H */
