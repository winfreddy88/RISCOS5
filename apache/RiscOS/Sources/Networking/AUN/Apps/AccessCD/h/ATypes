/* Copyright 2017 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file contains some of the WIMP structurs that AccessCD
 * uses. These do not seem to appear any where else. Some #defines
 * are also included.
 *
 * This file was generated as part of the modularisation of AccessCD
 * and AccessCDS.
 *
 * Version 1.02 - PWAIN - 950518
 * Comments: <none>
 *
 */


/*
 * "Rect" is a simple rectangle structure
 */
typedef struct Rect {
    int minx, miny, maxx, maxy;
} Rect;

/*
 * EventOpen is used when a window is opened.
 */
typedef struct EventOpen {
    int window_handle;
    Rect vis_rect;
    int scx, scy;
    int behind_handle;
} EventOpen;

/*
 * EventClick is used when a mouse click occurs
 */
typedef struct EventClick {
    int screen_x, screen_y;
    int buttons;
    int window_handle;
    int icon_handle;
} EventClick;

/*
 * A key press (EventKey)
 */
typedef struct EventKey {
    int window_handle;
    int icon_handle;
    int dx, dy;
    int flags;
    int index;
    int ch;
} EventKey;

/*
 * Scroll bars
 */
typedef struct EventScroll {
    int window_handle;
    Rect vis_rect;
    int scx, scy;
    int behind_handle;
    int dx, dy;
} EventScroll;

/*
 * A Caret event
 */
typedef struct EventCaret {
    int window_handle;
    int icon_handle;
    int dx, dy;
    int flags;
    int index;
} EventCaret;

/*
 * Interactive Help etc.
 */
typedef struct EventMessage {
    int size;
    int sender_handle;
    int my_ref;
    int your_ref;
    int action;
    int data[1];
} EventMessage;

/*
 * The main WimpEvent structure that holds all of the above!
 */
typedef union WimpEvent {
    int          window_handle; /* E_REDRAW, E_CLOSE, */
                                /* E_LEAVING_WINDOW, E_ENTERING_WINDOW */
    EventOpen    open;          /* E_OPEN */
    EventClick   click;         /* E_CLICK */
    Rect         drag;          /* E_DRAG_BOX */
    EventKey     key;           /* E_KEY */
    int          menu[10];      /* E_MENU */
    EventScroll  scroll;        /* E_SCROLL */
    EventCaret   caret;         /* E_LOSE_CARET, E_GAIN_CARET */
    EventMessage msg;           /* E_USER_MESSAGE, E_USER_MESSAGE_RECORDED */
                                /* E_USER_MESSAGE_ACK */
    char         generic[256];
} WimpEvent;

/*
 * The Icon Menu structures: A Menu_Item:
 */
typedef struct Menu_Item {
    unsigned menu_flags;
    int submenu;
    unsigned icon_flags;
    char *text;
    char *validstr;
    int bufflen;
} Menu_Item;

/*
 * This is the menu used by AccessCD
 */
typedef struct Acc_Menu {
    char *title;
    char *validstr;
    int bufflen;
    char title_fgrnd, title_bgrnd;
    char work_fgrnd, work_bgrnd;
    int width, height;
    int gap;
    Menu_Item items[6];
} Acc_Menu;

/*
 * The menu to remove a share
 */
typedef struct Remove_Menu {
    char *title;
    char *validstr;
    int bufflen;
    char title_fgrnd, title_bgrnd;
    char work_fgrnd, work_bgrnd;
    int width, height;
    int gap;
    Menu_Item items[1];
} Remove_Menu;

/*
 * The menu to show a share... This doesnt appear to
 * be used.
 */
typedef struct Show_Menu {
    char *title;
    char *validstr;
    int bufflen;
    char title_fgrnd, title_bgrnd;
    char work_fgrnd, work_bgrnd;
    int width, height;
    int gap;
    Menu_Item items[1];
} Show_Menu;

/*
 * The stucture used for placing an Icon
 */
typedef struct Icon {
    Rect r;
    int flags;
    char *buffer;
    char *validstring;
    int bufflen;
} Icon;

/*
 * Structure for defining a window?
 */
typedef struct Window {
    Rect r;
    int scx, scy;
    int behind;
    int flags;
    char frame;
    char title_bgrnd;
    char work_fgrnd;
    char work_bgrnd;
    char scroll_bgrnd;
    char scroll_fgrnd;
    char title_input_bgrnd;
    char unused;
    Rect ex;
    int title_flags;
    int work_flags;
    int sprite_area;
    short min_width;
    short min_height;
    char *buffer;
    char *validstring;
    int bufflen;
    int nicons;
    Icon icons[1];
} Window;

/*
 * The Defines.
 */
#define ERROR_OK        1
#define ERROR_CANCEL    2

/*
 * WIMP Events.
 */
#define E_NULL                  0
#define E_REDRAW                1
#define E_OPEN                  2
#define E_CLOSE                 3
#define E_LEAVING_WINDOW        4
#define E_ENTERING_WINDOW       5
#define E_CLICK                 6
#define E_DRAG_BOX              7
#define E_KEY                   8
#define E_MENU                  9
#define E_SCROLL                10
#define E_LOSE_CARET            11
#define E_GAIN_CARET            12
#define E_USER_MESSAGE          17
#define E_USER_MESSAGE_RECORDED 18
#define E_USER_MESSAGE_ACK      19

/*
 * Mouse Buttons.
 */
#define MB_ADJUST 1
#define MB_MENU   2
#define MB_SELECT 4

/*
 * WIMP Messages
 */
#define MESSAGE_QUIT            0
#define MESSAGE_DATASAVE        1
#define MESSAGE_DATASAVEACK     2
#define MESSAGE_DATALOAD        3
#define MESSAGE_DATALOADACK     4
#define MESSAGE_SAVEDESKTOP     10
#define MESSAGE_HELPREQUEST     0x502
#define MESSAGE_HELPREPLY       0x503

#define MF_WRITEABLE       4
#define MF_LAST          128
#define MF_INDIRECTTITLE 256

/*
 * Icon properties
 */
#define IF_TEXT          (1 << 0)
#define IF_SPRITE        (1 << 1)
#define IF_BORDER        (1 << 2)
#define IF_HCENTRED      (1 << 3)
#define IF_VCENTRED      (1 << 4)
#define IF_FILLED        (1 << 5)
#define IF_INDIRECTED    (1 << 8)
#define IF_RJUSTIFY      (1 << 9)
#define IF_HALFSIZE      (1 << 11)
#define IF_INVERTED      (1 << 21)
#define IF_SHADED        (1 << 22)
#define IF_DELETED       (1 << 23)

#define B_CLICKONCE      3
#define B_MENU           9
#define B_RADIO          11
#define B_WRITEABLE      15

#define IF_MENUITEM (IF_INDIRECTED | IF_TEXT | IF_FILLED | IF_VCENTRED | (7 << 24))

