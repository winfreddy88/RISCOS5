/* Copyright 1999 Element 14 Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *  DHCP (sockets.h)
 *
 * Copyright (C) Pace Micro Technology plc. 1999, 2000
 *
 */
#ifndef dhcpsockets_h_included
#define dhcpsockets_h_included

#ifdef __cplusplus
extern "C" {
#endif

extern void sockets_init(void);
extern void sockets_ensure_init(void);
extern void sockets_discard(void);
extern int  sockets_init_ok(void);

extern int sockets_inform(DHCP *, struct in_addr, char */*actual_interface*/);

extern int sockets_kill_interface(dhcp_interface *);
extern void sockets_trigger_internet_dhcp(const char *);

extern int sockets_data_arrived(int ns, void *);
extern void sockets_transmit(dhcp_interface *, int /*ioctl_flag*/);
extern void sockets_direct_transmit(ifdhcpreq *, int /*ioctl_flags*/);
extern int sockets_unicast_transmit(DHCP *, struct in_addr);

extern void sockets_set_preferred_ip_address(dhcp_interface *, u_long);
extern int sockets_verify_address(dhcp_interface *);

extern int sockets_delete_address(Dib *dib, struct in_addr *addr);
extern int sockets_set_if_address(char *ifname, struct in_addr *addr, struct in_addr *broad, struct in_addr *mask);

/* This is a bitfield.  Bit meaning if set:
 *
 * bit 0:  Release frames if the Internet module claimed them
 * bit 1:  Don't transmit the supplied packet
 * bit 2:  Parse packet as if it were a BOOTP resonse
 *
 */
enum ioctl_flags_for_sockets_transmit_BITFIELD {
        st_RETAIN_FRAMES,
        st_RELEASE_FRAMES,
        st_DONT_TRANSMIT,
        st_NAK_AND_RELEASE, /* bitfield combination */
        st_ACK_RECEIVED,
        st_ACK_AND_RELEASE, /* probably don't want to use this ever! */
        st_ACK_RETAIN_NO_XMIT, /* parse a BOOTP response to DHCP request */
        st_ACK_INFORM = (256 | st_ACK_RECEIVED)
};

#ifdef __cplusplus
}
#endif

#endif
