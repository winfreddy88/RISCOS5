/* Copyright 2000 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <stdint.h>

struct ntp_time
{
    uint32_t secs, frac;
};

struct riscos_time
{
    uint64_t cs;        /* 40-bit RISC OS time (cs since 1900) */
    uint32_t extrans;   /* Extra nanoseconds to add */
};

struct ntp
{
    unsigned char flags;
    unsigned char stratum;
    signed char poll;
    signed char precision;
    int32_t root_delay;
    uint32_t root_dispersion;
    char reference_identifier[4];
    struct ntp_time reference_timestamp;
    struct ntp_time originate_timestamp;
    struct ntp_time receive_timestamp;
    struct ntp_time transmit_timestamp;
};

/* RISC OS 5-byte time extended with 24 bits of fraction - ie
 * centiseconds since 1900 as 40.24 fixed point. */
typedef uint64_t riscos_time8;
typedef int64_t riscos_timediff8;

size_t ntp_construct_request(struct ntp *n, size_t len);
int ntp_process_reply(const struct ntp *n, size_t len, int64_t *offset_out);
struct riscos_time current_time(void);
const char *riscos_to_text(struct riscos_time t);
struct ntp_time riscos_to_ntp(struct riscos_time t);
