/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <stdio.h>
#include "kernel.h"
#include "swis.h"
#include "nt_nvram.h"
#include "debug.h"

#define TAG "SystemTime"

int nvram_gettime(void)
{
#ifdef STB22
    return 0;
#else
    int time[2];
    int res;

    /* Call the SWI, and if it fails, just return 0 */
    if(_swix(NVRAM_Read, _INR(0,2)|_OUT(0), TAG, time, sizeof time, &res))
        return 0;

    if(res<0)
        return 0;

    return time[0];
#endif
}

void nvram_settime(int time)
{
#ifdef STB22
    return;
#else
    _swix(NVRAM_Write, _INR(0,2), TAG, &time, sizeof time);
#endif
}

int read_os_var(const char *varname, char *buff, size_t n)
{
    _kernel_swi_regs r;

    /* Get the variable, and return its length (possibly 0),
     * or return -1 if it doesn't exist
     */
    r.r[0] = (int)varname;
    r.r[1] = (int)buff;
    r.r[2] = (int)n;
    r.r[3] = 0;
    r.r[4] = 0;
    if (_kernel_swi(OS_ReadVarVal, &r, &r) != NULL)
        return -1;

    buff[r.r[2]] = '\0';

    return r.r[2];
}
