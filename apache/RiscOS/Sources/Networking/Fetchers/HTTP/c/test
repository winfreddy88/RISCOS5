/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * HTTP (c.test)
 *
 * Copyright (C) Acorn Computers Ltd. 1997, 1998.
 *
 *
 */

#include "kernel.h"	/* registers */
#include "swis.h"	/* swis */
#include <stdio.h>	/* file handling */
#include <stdlib.h>	/* for malloc/calloc */
#include <string.h>	/* string handling */
#include <errno.h>	/* Include errno variable */

#define URLBASE 0x83e00
#define URLREG  URLBASE
#define URLGET  URLBASE+1
#define URLREAD URLBASE+3
#define URLDERE URLBASE+6

#define BUFFER_SIZE	(10240)

static int URL_handle = 0;

static void die(void)
{
  (void) _swix(URLDERE, _INR(0,1), 0, URL_handle);
}

static _kernel_oserror *fail(_kernel_oserror *e)
{
  if (e) {
          (void) fprintf(stderr, "httptest: %s\n", e->errmess);
          exit(1);
  }
  return 0;
}

int main(int argc, char *argv[])
{
  const char *url_to_get=argc>1?argv[1]:"http://www.castle-technology.co.uk/";
  FILE *out=argc>2?fopen(argv[2],"wb"):stdout;

  if (!out) {
          fprintf(stderr, "Unable to open output file\n");
          return 1;
  }

  fail(_swix(URLREG, _IN(0)|_OUT(1), 0, &URL_handle));
  (void) atexit(die);
  fail(_swix(URLGET, _INR(0,5), 0, URL_handle, 1, url_to_get, 0, 2));

  for (;;) {
    char buffer[BUFFER_SIZE];
    int flags, done;
    fail(_swix(URLREAD, _INR(0,3)|_OUT(0)|_OUT(4), 0, URL_handle, buffer,
      sizeof(buffer), &flags, &done));
    if (done>0) (void) fwrite(buffer, done, 1, out);
    if (flags & 96) break;
  }

  (void) fclose(out);
  return 0;
}
