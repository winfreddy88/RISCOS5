/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* > h.maketree
 */


typedef struct node
{
  int value, frequency;
  struct node *left, *right;
} node;


typedef struct heapstr
{
  int nitems;
  node **array, **ptr;
} heapstr;


extern node * maketree(int n, int *frequencies);
extern void initheap(heapstr *heapp, int n, int *frequencies);
extern void sortheap(heapstr *heapp);
extern int mycompare(const void *item1, const void *item2);
extern void addheap(heapstr *heapp, node *newitem);
extern node * removeheap(heapstr *heapp);
extern void freeheap(heapstr *heapp);
extern node * newnode(int value, int frequency, node *left, node *right);
extern void error(char *str);

