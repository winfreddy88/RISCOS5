/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* 
 * WebServe (c.quit)
 * 
 * © Acorn Computers, 1993-1997
 */

#include <time.h>
#include "structs.h"
#include "include.h"
#include "kernel.h"
#include "swis.h"
#include "debug.h"
#include "quit_glob.h"
#include "config_glo.h"

/*
 * Flag used by do_poll()
 */
static int quit = 0;


/* Flag used by following function 
 */
static int null_events = 0;
int quit_get_null_count(void)
{
        return null_events;
}

/*
 * Toolbox and taskmanager quit handlers etc.
 */

/*
 * This is where toolbox enters the quit bits.
 */
TBOX_HANDLER(quit_handler)
{
  	tbox_ignore();
	quit = 1;
  	return 1;
}

/*
 * This is where the WIMP enters the quit bits
 */
WIMP_MESSAGE(wimp_quit)
{
  	wimp_ignore();

  	quit = 1;
  	return 1;
}

/*
 * This is the modified poll code to automatically take into
 * account setting of the quit flag. That is use something like:
 * if (do_poll()) exit(0);
 */

int do_poll(void)
{
        int event;
  	event_poll(&event,0,0);
  	if (event == Wimp_ENull) ++null_events; else null_events = 0;
  	return quit;
}


/*
 * This is where the WIMP enters the appcontrol bits (process queue flush)
 */

WIMP_MESSAGE(wimp_appcontrol)
{
        WimpAppControlMessage	*m = (WimpAppControlMessage *) &message->data;
	int force;
        
  	wimp_ignore();

	debug(("Wimp_MAppControl arrives: %d %d %d\n",
		m->version, m->flags, m->reason));

	if (m->version == 1 && m->reason == Wimp_MAppControl_Configure) {
		open_config();
		return 1;
	}
		

	force = m->version == 1 && m->reason == Wimp_MAppControl_Stop &&
		(m->flags & Wimp_MAppControl_ImmediateAction);
	
  	process_app_control(force);
  	process_connections();
	#if (BUILD == ACSTMRBLD)
  	cache_flush();	/* NB entries 'in use' remain */
	#endif

  	return 1;
}
