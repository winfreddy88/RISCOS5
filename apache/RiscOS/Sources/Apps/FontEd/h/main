/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*  Title: > h.main
 */


/* ---- global variables -------------------------------------------------- */


extern wimp_w      info_window,
                   save_window,
                   save_window2,
                   magnifier_window,
                   origin_window,
                   fontsize_window;
extern char   *wricon_filename,
                   *wricon_filename2,
                   *wricon_magnifierup,
                   *wricon_magnifierdown;
extern char   * fsiz_xpoints,
                   * fsiz_ypoints,
                   * fsiz_xres,
                   * fsiz_yres;

extern int         FontIndexOrgX,
                   FontIndexOrgY;

extern wimp_box OriginBox;
extern char *      mb_origin;

typedef struct
{ wimp_wind w;
  wimp_icon i[1];
  char indirected[64];
} tt_fontindex;                 /* 1 icon in font index */

typedef struct
{ wimp_wind w;
  char indirected[64];
} tt_tree;                      /* 0 icons in scaffold tree */

typedef struct
{ wimp_wind w;
  char indirected[64];
} tt_skeleton;                  /* 0 icons in skeleton window */

typedef struct
{ wimp_wind w;
  wimp_icon i[1];
  char indirected[64];
} tt_full;                      /* 1 icon in full window */

typedef struct
{ wimp_wind w;
  wimp_icon i[1];
  char indirected[64];
} tt_bitmap;                    /* 1 icon in bitmap window */

extern tt_fontindex  t_fontindex;
extern tt_tree       t_tree;
extern tt_skeleton   t_skeleton;
extern tt_full       t_full;
extern tt_bitmap     t_bitmap;


os_error * event_message(wimp_msgstr *m);
os_error * loadack(Wind_Link *,wimp_msgstr *);

os_error * event_open(wimp_openstr *);
os_error * event_close(wimp_w);

os_error * loadtemp(char *,wimp_wind *);
void aborttemp(os_error *);

