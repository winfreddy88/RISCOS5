REM >!MemNow.!RunImage

REM Copyright 2015 Castle Technology Ltd
REM
REM Licensed under the Apache License, Version 2.0 (the "License");
REM you may not use this file except in compliance with the License.
REM You may obtain a copy of the License at
REM
REM     http://www.apache.org/licenses/LICENSE-2.0
REM
REM Unless required by applicable law or agreed to in writing, software
REM distributed under the License is distributed on an "AS IS" BASIS,
REM WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
REM See the License for the specific language governing permissions and
REM limitations under the License.
REM
ON ERROR ERROR EXT ERR,LEFT$(REPORT$,240) +" ("+STR$(ERL)+")"

DIM Q% &200
SYS"XOS_ReadVarVal","MemNow$Dir",STRING$(255,CHR$0),254 TO ,bootpath$

PROCmsg_init("MemNow:Messages")
DIM taskid%4:$taskid%="TASK"
banner$=FNmsg_0("Banner")
SYS "Wimp_Initialise",200,!taskid%,banner$ TO version%
`wbcol=1:`tbcol=2:`sco=3:`mbcol=0:`wfcol=&7:`tfcol=7:`sci=1:`tbcol2=12

maxbuf%=800:@%=5
DIM buffer% maxbuf%,endbuf% -1:curbuf%=buffer%

REM Adapt to the longest possible display on this memory controller
SYS"OS_ReadMemMapInfo" TO P%,N%
maxlen%=LEN(STR$((P% DIV1024)*N%))

DIM MemText% 8, MemValid% 4
$MemText%="128000":$MemValid%=FNmsg_0("Border")
Q%!0=-1:Q%!4=0:Q%!8=0:Q%!12=(maxlen%*16)+34:Q%!16=68:Q%!20=&1700313D:Q%!24=MemText%:Q%!28=MemValid%:Q%!32=8
SYS "Wimp_CreateIcon",,Q% TO BarIcon%

PROCTemplateInit:PROCTemplateLoad
BarIconMenu%=FNMkMenu(FNmsg_0("Menu"))
ProgInfo% =FNTemplateCreateWindow("progInfo",0)
PROCAttachSubMenu(BarIconMenu%,0,ProgInfo%)
PROCset_string(ProgInfo%,1,FNmsg_0("_TaskName"))
PROCset_string(ProgInfo%,2,FNmsg_0("_Purpose"))
PROCset_string(ProgInfo%,3,FNmsg_0("_Author"))
PROCset_string(ProgInfo%,4,FNmsg_0("_Version"))

ReOpenBeforePoll%=0
SYS "Wimp_SlotSize",-1,-1 TO ,,FreeMem%
$MemText% = STR$(FreeMem%>>>10)
Q%!0=-1:Q%!4=BarIcon%:Q%!8=0:Q%!12=0:SYS "Wimp_SetIconState",,Q%

end% =FALSE
REPEAT
  SYS "OS_ReadMonotonicTime" TO t%
  SYS "Wimp_PollIdle",0,Q%,t%+50 TO A%
  CASE A% OF
  WHEN 0 :PROCnull
  WHEN 2 :PROCopen_window(!Q%,Q%!4,Q%!8,Q%!12,Q%!16,Q%!20,Q%!24,Q%!28)
  WHEN 6 :PROCcheckmouse(!Q%,Q%!4,Q%!8,Q%!12,Q%!16,Q%!20)
  WHEN 9 :PROCmenuselect(Q%)
  WHEN 17,18:PROCreceive(Q%)
  ENDCASE
  IF ReOpenBeforePoll% THEN
    SYS "Wimp_CreateMenu",,BarIconMenu%
    ReOpenBeforePoll%=FALSE
  ENDIF
UNTIL end% =TRUE
PROCmsg_end
END

DEFPROCnull
SYS "Wimp_SlotSize",-1,-1 TO ,,t%
t%=t%>>>10:REM Into unsigned kB
$MemText%=STR$(t%)
IF t%>=16 THEN
  REM Update number if value changed since last check
  IF t%<>FreeMem% THEN
    Q%!0=-1:Q%!4=BarIcon%:Q%!8=&10000000:Q%!12=&10000000:SYS "Wimp_SetIconState",,Q%
  ENDIF
ELSE
  REM Flash background at the PollIdle rate
  Q%!0=-1:Q%!4=BarIcon%:Q%!8=&10000000:Q%!12=&00000000
  SYS "Wimp_SetIconState",,Q%
ENDIF
FreeMem%=t%
ENDPROC

DEF PROCreceive(Q%)
 CASE Q%!16 OF
  WHEN 0:end% =TRUE
  WHEN 10:PROCdesksave(Q%)
 ENDCASE
ENDPROC

REM ----------------------------------------------------------------


REM                         ICON STUFF


REM ----------------------------------------------------------------

DEF PROCcheckmouse(mousex%,mousey%,b%,handle%,icon%,ob%)
IF handle%=-2 AND (b%AND2)<>0 THEN
  PROCOpenMenu(handle%,BarIconMenu%,mousex%,mousey%)
ENDIF
ENDPROC

DEFPROCset_string(H%,I%,s$)
!Q%=H%:Q%!4=I%:SYS "Wimp_GetIconState",,Q%
$(Q%!28)=s$
ENDPROC

REM ----------------------------------------------------------------


REM                         MENU STUFF


REM ----------------------------------------------------------------

DEF FNMkMenu(menu$)
LOCAL menutitle$,nitems%,maxwidth%,w%,i%,menu%
nitems%=0
FORi%=1TOLEN(menu$)
  IFMID$(menu$,i%,1)=","THENnitems%+=1
NEXT
menu%=FNbuffer(28+nitems%*24)
i%=0
menutitle$=FNpar(",")
menuptr%=menu%
menuptr%!20=44
$menuptr%=menutitle$
maxwidth%=LEN(menutitle$)*16+12
menuptr%?12=`tfcol:menuptr%?13=2:menuptr%?14=`wfcol:menuptr%?15=`mbcol
menuptr%!24=0
menuptr%+=28
item$=FNpar(",")
WHILE item$<>""
  PROCmenuitem0(item$,w%)
  IF w%>maxwidth% THEN maxwidth%=w%
  nitems%+=1
  item$=FNpar(",")
ENDWHILE
menuptr%!-24=(menuptr%!-24)OR&80
menu%!16=maxwidth%
=menu%

DEF PROCmenuitem0(text$,RETURNw%)
LOCAL t%
flg%=0
t%=LEN(text$)
IF t%<12 THEN
  menuptr%!0=flg%AND1
  menuptr%!4=-1
  menuptr%!8=&07000021
  $(menuptr%+12)=text$
ELSE
  t%=FNbuffer(t%+1)
  $t%=text$
  menuptr%!0=flg%AND1
  menuptr%!4=-1
  menuptr%!8=&07000121
  menuptr%!12=t%
  menuptr%!16=0
  menuptr%!20=LEN(text$)+1
ENDIF
menuptr%+=24
w%=LEN(text$)*16+12
ENDPROC

DEF FNpar(sep$)
i1%=i%+1:i%=INSTR(menu$+sep$,sep$,i1%)
=MID$(menu$,i1%,i%-i1%)

DEF PROCAttachSubMenu(menup%,item%,menuc%)
menup%!(32+24*item%)=menuc%
ENDPROC

DEF PROCOpenMenu(handle%,menu%,mousex%,mousey%)
LOCAL nitems%,t%
menuhandle%=handle%
nitems%=1
t%=menu%+28
WHILE (!t% AND &80)=0
  nitems%+=1
  t%+=24
ENDWHILE
IF handle%=-2 THEN
  SYS "Wimp_CreateMenu",,menu%,mousex%-64,96+nitems%*44
ELSE
  SYS "Wimp_CreateMenu",,menu%,mousex%-64,mousey%
ENDIF
ENDPROC

DEF PROCmenuselect(menus%)
SYS "Wimp_GetPointerInfo",,Q%+&100:b%=Q%!&108
IF b%AND1 THEN ReOpenBeforePoll%=TRUE
IF menus%!0=1 THEN end% =TRUE
ENDPROC

DEF PROCopen_window(handle%,x0%,y0%,x1%,y1%,scx%,scy%,bhandle%)
IFhandle%=-1THENENDPROC
Q%!0=handle%:Q%!28=bhandle%
Q%!4=x0%:Q%!8=y0%:Q%!12=x1%:Q%!16=y1%
Q%!20=scx%:Q%!24=scy%
SYS "Wimp_OpenWindow",,Q%
ENDPROC

DEF FNbuffer(L%)
LOCAL t%
IFcurbuf%+L%>buffer%+maxbuf%THEN ERROR100,FNmsg_0("E00")
t%=curbuf%
curbuf%=(curbuf%+L%+3)AND NOT 3
=t%

DEF PROCdesksave(message%)
LOCAL myref%,sender%
IF NOT FNdeskwrite(message%!20) THEN
  sender%=message%!4
  myref%=message%!8
  message%!12=myref%
  SYS"Wimp_SendMessage",19,message%,sender%
  !Q%=ERR:$(Q%+4)=REPORT$+CHR$0
  SYS "Wimp_ReportError",Q%,1,banner$
ENDIF
ENDPROC

DEF FNdeskwrite(H%)
LOCAL ERROR
ON ERROR LOCAL = FALSE
BPUT#H%,"Run "+bootpath$
= TRUE

REM ------------------------------------------------------------

REM                         Template stuff

REM ------------------------------------------------------------

DEF PROCTemplateInit
MaxTemplates%=5:CurrTemplate%=0
DIM TemplateNames$(MaxTemplates%),Templates%(MaxTemplates%)
ENDPROC

DEF PROCTemplateLoad
PROCTemplateLoadFile("MemNow:Templates")
ENDPROC

DEF PROCTemplateLoadFile(F$)
LOCAL pos%,found%,szt%,t%,szi%,i%
SYS "Wimp_OpenTemplate",,F$
pos%=0
REPEAT
  $Q%="*"
  SYS "Wimp_LoadTemplate",,0,,,-1,Q%,pos% TO ,szt%,szi%,,,,found%
  IF found% THEN
    TemplateNames$(CurrTemplate%)=$Q%
    Templates%(CurrTemplate%)=FNbuffer(szt%)
    i%=FNbuffer(szi%)
    SYS "Wimp_LoadTemplate",,Templates%(CurrTemplate%),i%,i%+szi%,-1,Q%,pos% TO ,,,,,,pos%
    CurrTemplate%+=1
  ENDIF
UNTIL found%=0

SYS "Wimp_CloseTemplate"
ENDPROC

DEF FNTemplateCreateWindow(N$,C%)
LOCAL t%
t%=FNFindTemplate(N$)
IF C% THEN
ELSE
  SYS "Wimp_CreateWindow",,t% TO t%
  =t%
ENDIF
=-1

DEF FNFindTemplate(N$)
LOCAL i%
FOR i%=0TOCurrTemplate%-1
  IF TemplateNames$(i%)=N$ THEN =Templates%(i%)
NEXT i%
=-1

REM >>>>>>>>>>>>>>>>>>>
REM msglib 0.02
DEFPROCmsg_init(N$)
REM LOCAL ERROR
REM ON ERROR LOCAL RESTORE ERROR:ERROR 0,"Cannot find messages file"
DIM msg_text% 256
SYS "OS_Module",6,,,17+LEN(N$) TO ,,msg_desc%
$(msg_desc%+16)=N$
SYS "MessageTrans_OpenFile",msg_desc%,msg_desc%+16,0
ENDPROC
:
DEFFNmsg_0(T$)
=FNmsg_4(T$,"","","","")
:
DEFFNmsg_1(T$,S$)
=FNmsg_4(T$,S$,"","","")
:
DEFFNmsg_2(T$,S0$,S1$)
=FNmsg_4(T$,S0$,S1$,"","")
:
DEFFNmsg_3(T$,S0$,S1$,S2$)
=FNmsg_4(T$,S0$,S1$,S2$,"")
:
DEFFNmsg_4(T$,S0$,S1$,S2$,S3$)
LOCAL F%,L%,P%,eb%
SYS "XMessageTrans_Lookup",msg_desc%,T$,msg_text%,256,S0$,S1$,S2$,S3$ TO eb%,,,L%;F%
IF F% AND 1 THEN
    = T$
ELSE
    msg_text%?L%=13
    S0$=$msg_text%
    REM substitute any tokens
    REPEAT
     P%=INSTR(S0$,"`")
     IFP%<>0 THEN
      T$=MID$(S0$,P%,2)
      SYS"XMessageTrans_Lookup",msg_desc%,T$,msg_text%,256 TO ,,,L%;F%
      IF F% AND 1 :=S0$
      msg_text%?L%=13
      S0$=LEFT$(S0$,P%-1)+$msg_text%+MID$(S0$,P%+2)
     ENDIF
    UNTIL P%=0
ENDIF
=S0$
:
DEFPROCmsg_end
msg_desc% =msg_desc%
IFmsg_desc% THEN
  SYS"MessageTrans_CloseFile",msg_desc%
  SYS"OS_Module",7,,msg_desc%
  msg_desc% =0
ENDIF
ENDPROC

