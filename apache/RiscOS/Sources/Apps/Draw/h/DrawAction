/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -> h.DrawAction
 *
 * Miscellaneous actions in Draw
 *
 * Author:  David Elworthy
 * Version: 0.12
 * History: 0.10 - 11 July 1989 - created
 *          0.11 - 13 Aug  1989 - box functions added
 *          0.12 - 26 Aug  1989 - paper functions added
 *
 */

/*------------------- Zooms --------------------*/
extern void draw_action_zoom(void /*zoomchangestr*/ *newzoom);
extern void draw_action_zoom_new(diagrec *diag, captu_str box);
extern void draw_action_zoom_alter(viewrec *vuue, int adjust);
extern void draw_action_zoom_view(viewrec *vuue);

/*---------------- Paper size and options -----------------*/
/* Calculate diagram parameters for given size and options */
extern void draw_action_set_papersize(diagrec *diag, papersize_typ    size,
                                              paperoptions_typ opt);

/* Change size and options which alter size */
extern void draw_action_resize(diagrec *diag, papersize_typ    size,
                                       paperoptions_typ opt);

/* Change options which don't alter size */
extern void draw_action_option(diagrec *diag, paperoptions_typ opt);

/*------------------- Boxes and coords --------------------*/

/* Find a box to test against */
extern void draw_box_get_test_box(draw_objcoord *pt, draw_bboxtyp *box);

/* returns TRUE, if point (x,y) is within box */
extern int draw_box_within(draw_objcoord *pt, draw_bboxtyp *box);

/* returns TRUE, if box1 overlaps box2 */
extern int draw_box_overlap(draw_bboxtyp *box1, draw_bboxtyp *box2);

/* returns TRUE, if box1 is inside box2. JRC 11 Oct 1990 */
extern int draw_box_inside (draw_bboxtyp *box1, draw_bboxtyp *box2);

extern void draw_action_swap_box (draw_bboxtyp *to, draw_bboxtyp *from);
