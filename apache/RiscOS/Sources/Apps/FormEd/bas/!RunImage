REM >!FormEd.!RunImage

REM Copyright 2016 Castle Technology Ltd
REM
REM Licensed under the Apache License, Version 2.0 (the "License");
REM you may not use this file except in compliance with the License.
REM You may obtain a copy of the License at
REM
REM     http://www.apache.org/licenses/LICENSE-2.0
REM
REM Unless required by applicable law or agreed to in writing, software
REM distributed under the License is distributed on an "AS IS" BASIS,
REM WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
REM See the License for the specific language governing permissions and
REM limitations under the License.
REM

REM ******************************************************************
REM *                                                                *
REM * Title       : FormEd                                           *
REM * Description : Template Editor - for use with Applications      *
REM *                                                                *
REM ******************************************************************
ON ERROR ERROR EXT ERR, REPORT$+" at line "+STR$(ERL)
SYS"Hourglass_On"
SYS "OS_GetEnv" TO commandstring$
DIM fontcounts% 255
FOR I%=0 TO 255:fontcounts%?I%=0:NEXT
REM -- Start Wimp going
DIM taskid%4:$taskid%="TASK"
SYS "Wimp_Initialise",200,!taskid%,"FormEd" TO version%
ON ERROR PROCerrordisplay: REM after calling Wimp_Initialise!
  `wbcol=&0:`tbcol=&D:`sco=&3:`mbcol=&B
  `wfcol=&7:`tfcol=&7:`sci=&D:`tbcol2=&C
REM ******************************************************************
REM ** Gobal Variables                                               *
REM ******************************************************************
    tsloss       = FALSE
    _altered     = FALSE
    _prequit     = FALSE
    _biconx%     = 10
    _bicony%     = -50
    _RESET%      = FALSE
    _QUIT%       = FALSE
    _noid%       = 0
    bodgeit%     = FALSE
    DIM _titlestring% 257
    DIM _wid$(49)
    DIM _win%(49)
    DIM _temp%   20
    DIM _data%   50
    DIM _BUF100% 100
    DIM _SPRDIA% 15
    DIM _SPRWIN% 15
    $_SPRDIA% = "ssmldialog"+CHR$(0)
    $_SPRWIN% = "ssmlformed"+CHR$(0)
    $_titlestring% = "<untitled>"
REM ******************************************************************
DIM inv% 27,outv% 23
DIM px2% 1,px4% 3,px256% 255
PROCgetmodeinfo
switched%=FALSE
DIM factors% 15
DIM pixtrans% 15
REM -- dimension arrays
DIM pal%(2),bright%(15),uncolour%(15)
DIM q% &2000,erroraddr%(4),oldq% &100
DIM indexdata% 48*24+20,fontbinding% 255
maxbuf%=&6000
DIM buffer% maxbuf%:curbuff%=buffer%:_sloss%=buffer%
nh%=48
DIM handle%(nh%+1),wident$(nh%),wptr%(nh%),wlink%(nh%),wflag%(nh%)
FOR I%=0TOnh%:handle%(I%)=I%-1:wident$(I%)="":_wid$(I%)="*":NEXT:handleSP%=nh%
DIM spritename% 12
DIM menulist% &100
brx%=400:bry%=740
currentwindow%=-1:currenticon%=-1:dialogue%=-1
spritef$=""
DIM errbuf% 150
templatef$="Templates"
DIM mb_crsprite% 12,mb_rnsprite% 12
nsp=80:ns%=10
DIM spw%(nsp),sph%(nsp),spwx%(nsp),minx%(nsp),miny%(nsp),spname$(nsp)
DIM spritew%(ns%+1),nsprite%(ns%)
DIM spritei%(ns%),sprxscale%(ns%),spryscale%(ns%),spriten$(ns%)
FOR I%=0TOns%:spritew%(I%)=I%-1:spriten$(I%)="":NEXT:sprSP%=ns%:sprSP2%=-1
SYS "OS_File",5,"<FormEd$Dir>.Sprites" TO type%,,,,systemareasize%
IF type%<>1 THEN ERROR 0,"Can't find <FormEd$Dir>.Sprites"
systemareasize%+=4
DIM systemsprites% systemareasize%
systemsprites%!0=systemareasize%
IF MODE = 23 THEN
 SYS "OS_SpriteOp",&10A,systemsprites%,"<FormEd$Dir>.Sprites23"
ELSE
 SYS "OS_SpriteOp",&10A,systemsprites%,"<FormEd$Dir>.Sprites"
ENDIF
spriteareasize%=HIMEM-END-32*1024:REM was 16
DIM spritearea% spriteareasize%
!spritearea%=spriteareasize%:spritearea%!8=16
SYS "OS_SpriteOp",&109,spritearea%
_bob% = OPENIN("<FormEd$Dir>.Default")
IF NOT(_bob% = 0) THEN PROCloadsprites("<FormEd$Dir>.Default")
CLOSE#_bob%
spritef$="Sprites"
undoname$="":undoscreen%=-1:editbuffer%=-2
PROCmsg_initialise("<FormEd$Dir>.Messages")
REM -- Create windows
PROCdefaultwindows
DIM paltable% 79:SYS "Wimp_ReadPalette",,paltable%
palcolour%=7
sprcolour%=7
paintmode%=16
grid%=FALSE
REM -- Create Menus
PROCcreate_menus
ic_window%  = FNiconbar
REM -- if command was '*FormEd <filename>', load a template file
I%=INSTR(commandstring$," -quit ")
IF I% THEN
  I%+=LEN" -quit "
  WHILE MID$(commandstring$,I%,1)=" ":I%+=1:ENDWHILE
  REPEAT
    I%=INSTR(commandstring$+" "," ",I%+1)
    REPEATI%+=1:UNTILMID$(commandstring$,I%,1)<>" "
    f$=MID$(commandstring$,I%)
    f$=LEFT$(f$,INSTR(f$+" "," ")-1)
    IF f$<>"" THEN
      CASE FNfiletype(f$) OF
      WHEN &FEC: _init% = 0:PROCloadtemplates(f$):
                 $_titlestring% = f$
                 $mb_templates% = f$
                 PROCchangewindowtitle(browbox%,_titlestring%)
                 PROCfront(browbox%)
      WHEN &FF9:PROCloadsprites(f$)
      WHEN -2: ERROR  0,"File '"+f$+"' not found"
      OTHERWISE ERROR 0,"File '"+f$+"' is not a sprite file or template file"
      ENDCASE
    ENDIF
  UNTIL f$=""
ENDIF
SYS"Hourglass_Off"
REM -- Error handler - drops through to Wimp_Poll
saveref%=-1
scrapref%=-1
dragtype%=0
inerror%=FALSE
oldhelp%=1:_init% = 1
ON ERROR PROCerrordisplay
REM -- Main Polling loop
REPEAT
SYS "Wimp_Poll",1,q% TO action%
CASE action% OF
WHEN  1: REM ****************** Redraw event ****************
        PROCredraw(!q%)
WHEN  2: REM ****************** Open event ******************
         PROCopen(!q%,q%!4,q%!8,q%!12,q%!16,q%!20,q%!24,q%!28)
         PROCchck_handle(!q%)
WHEN  3: REM ****************** Close event *****************
        PROCclose(!q%)
WHEN  6: REM ******************  Click event ***********
        PROCmouse(!q%,q%!4,q%!8,q%!12,q%!16,q%!20)
WHEN  7: REM ****************** User Draw event *************
        PROCdecodedrag(!q%,q%!4,q%!8,q%!12)
WHEN  8: REM ****************** Key Pressed event ***********
        key%=q%!24
        PROCprocesskey(q%!0,q%!4,key%)
WHEN  9: REM ****************** Menu Selection event ********
        I%=0:REPEATmenulist%!I%=q%!I%:I%=I%+4:UNTILq%!(I%-4)=-1
        PROCdecodemenu(menuhandle%,menulist%)
        PROCgetpointer:IF buttons%AND1 THEN PROCremenu
WHEN 10: REM *****************  Scroll Request event ********
        PROCopen(!q%,q%!4,q%!8,q%!12,q%!16,q%!20+q%!32*32,q%!24+q%!36*32,q%!28)
WHEN 17,18: REM ****** user message & recorded **************
            PROCreceive(q%)
ENDCASE
UNTIL FALSE
DEF PROCreceive(q%)
FOR I%=0 TO !q%-1 STEP4:oldq%!I%=q%!I%:NEXT
CASE q%!16 OF
WHEN 0: REM ** Quit From Message ********************
       PROCfinish:END
WHEN 1:CASE q%!40 OF
       WHEN &FF9,&FEC:  REM do the scrap file business
            SYS "XOS_ReadVarVal","Wimp$Scrap",,-1,0,3 TO ,,exists%
            IF exists%=0 THEN ERROR 1,"<Wimp$Scrap> not defined"
            q%!36=-1:PROCstring0(q%+44,"<Wimp$Scrap>")
            !q%=(48+LEN"<Wimp$Scrap>")ANDNOT3
            q%!12=q%!8:q%!16=2:SYS "Wimp_SendMessage",17,q%,q%!4
            scrapref%=q%!8
       ENDCASE
WHEN 2:IF q%!12<>saveref% THEN ERROR 1,"Unexpected DataSave packet received"
       _saving% = TRUE
       CASE q%!40 OF
       WHEN &FEC:PROCsavetemplates(FNstring0(q%+44),q%!36<>-1)
       OTHERWISE:ERROR 1,"Unexpected DataSave filetype received"
       ENDCASE
       oldq%!12=oldq%!8:oldq%!16=3:SYS "Wimp_SendMessage",17,oldq%,oldq%!4
       _saving% = FALSE
WHEN 3:_tmp$ = FNstring0(q%+44)
       CASE q%!40 OF
       WHEN &FEC: REM ******** Message_DataLoad 3 **********
        _cchange% = FALSE
       IF LEFT$($_titlestring%,4) = LEFT$("<untitled>",4) THEN
        $mb_templates%=FNstring0(q%+44):$_titlestring%=FNstring0(q%+44)
        IF _altered THEN $_titlestring% += " *"
       ELSE
        IF NOT_altered THEN
         PROCaddchange(_titlestring%)
        ENDIF
       ENDIF
        PROCloadtemplates(_tmp$)
        PROCfront(browbox%)
        PROCchangewindowtitle(browbox%,_titlestring%)
       WHEN &FF9:IF q%!20=-2 THEN
                  PROCloadsprites(FNstring0(q%+44))
                 ELSE PROCmergesprites(FNstring0(q%+44))
                 ENDIF
                 OTHERWISE:ENDPROC
                 ENDCASE
       IF oldq%!12=scrapref% THEN *Delete <Wimp$Scrap>
       oldq%!12=oldq%!8:oldq%!16=4:SYS "Wimp_SendMessage",17,oldq%,oldq%!4
WHEN 5:IF q%!40 = &FEC THEN
  IF NOT(_altered)ANDLEFT$($_titlestring%,4)=LEFT$("<untitled>",4) THEN
         $_titlestring% = FNstring0(q%+44)
         PROCloadtemplates(FNstring0(q%+44))
         $mb_templates% = $_titlestring%
         PROCchangewindowtitle(browbox%,_titlestring%)
         PROCfront(browbox%)
         oldq%!12=oldq%!8:oldq%!16=4:
         SYS "Wimp_SendMessage",17,oldq%,oldq%!4
        ELSE
         REM oldq%!12=oldq%!8:oldq%!16=4
         REM SYS "Wimp_SendMessage",17,oldq%,oldq%!4
         REM ERROR 1, " Unsaved Template File "
        ENDIF
       ENDIF
WHEN 8: REM **************** Message_PreQuit **********************
        IF _altered THEN
         PROCobjectclosedown
        ENDIF
WHEN &400C0:
  CASE menuhandle% OF
  WHEN w_general%
    CASE q%!32 OF
    WHEN 1:
      CASE q%!36 OF
      WHEN 14,15: PROCtickpalette(i_flags%!(36+24*q%!36)>>28)
      ENDCASE
    WHEN 7: PROCtickpalette(w_colours%!(36+24*q%!36)>>28)
    ENDCASE
  ENDCASE
  SYS "Wimp_CreateSubMenu",,q%!20,q%!24,q%!28
WHEN &400C1:PROCgetmodeinfo
ENDCASE
ENDPROC
DEF PROCtickpalette(colour%)
LOCAL I%
IFcolour%<16 THEN
 FOR I%=m_palette%+28 TO m_palette%+28+24*15 STEP 24:!I%=!I%ANDNOT1:NEXT
 I%=m_palette%+28+24*colour%:!I%=!I%OR1
ENDIF
IFcolour%=255 colour%=16
FOR I%=m_p1lette%+28 TO m_p1lette%+28+24*16 STEP 24:!I%=!I%ANDNOT1:NEXT
I%=m_p1lette%+28+24*colour%:!I%=!I%OR1
ENDPROC
DEF PROCsendsave(ft%,fn%)
LOCAL filename%
REPEATfilename%=fn%:fn%+=INSTR($fn%,"."):UNTIL fn%=filename%
PROCgetpointer : REM sets up handle%,icon%,mousex%,mousey%
IF handle% = m_savetemp% OR handle% = browbox% THEN ENDPROC
 SYS "Wimp_CreateMenu",,-1:
!q%=(48+LEN$filename%)ANDNOT3
q%!12=0:q%!16=1
q%!20=handle%:q%!24=icon%:q%!28=mousex%:q%!32=mousey%
q%!36=0   : REM file size (inaccurate)
q%!40=ft% : REM file type
PROCstring0(q%+44,$filename%)
SYS "Wimp_SendMessage",17,q%,handle%,icon%
saveref%=q%!8
ENDPROC
DEF FNstring0(a%) LOCALa$:a$="":WHILE ?a%:a$+=CHR$?a%:a%+=1:ENDWHILE:=a$
DEF PROCstring0(a%,a$) $a%=a$:a%?LENa$=0:ENDPROC
DEF PROCgetmodeinfo
inv%!0 = 4
inv%!4 = 5
inv%!8 = 6
inv%!12= 7
inv%!16= 11
inv%!20= 12
inv%!24= -1
SYS "OS_ReadVduVariables",inv%,outv%
dx%=1<<(outv%!0)
dy%=1<<(outv%!4)
linelen%=outv%!8
screensize%=outv%!12
scrx1%=(outv%!16+1)*dx%
scry1%=(outv%!20+1)*dy%
ENDPROC
DEF PROCredraw(handle%)
!q%=handle%
SYS "Wimp_RedrawWindow",,q% TO more%
PROCinfo(q%+4)
CASE handle% OF
OTHERWISE:PROCtestpattern
ENDCASE
ENDPROC
DEF PROCtestpattern
LOCALdx%:dx%=48
WHILE more%
x0%=q%!28:y0%=q%!32:x1%=q%!36:y1%=q%!40
minx0%=x0%-(by%-y0%):maxx0%=x1%-(by%-y1%)
minx1%=x0%+(by%-y1%):maxx1%=x1%+(by%-y0%)
minx0%=(minx0%-bx%+10000)DIVdx%*dx%+bx%-10000
minx1%=(minx1%-bx%+10000)DIVdx%*dx%+bx%-10000
FORx%=minx0%TOmaxx0%STEPdx%:MOVEx%,by%:PLOT1,1280,-1280:NEXT
FORx%=minx1%TOmaxx1%STEPdx%:MOVEx%,by%:PLOT1,-1280,-1280:NEXT
SYS "Wimp_GetRectangle",,q% TO more%
ENDWHILE
ENDPROC
DEF PROCfront(handle%)
IF handle% = quitbox% THEN
 SYS "Wimp_CreateMenu",,quitbox%,300,640
 ENDPROC
ENDIF
!q%=handle%:SYS "Wimp_GetWindowState",,q%
q%!28=-1:SYS "Wimp_OpenWindow",,q%
ENDPROC
DEF PROCgetw(handle%)
!q%=handle%:SYS "Wimp_GetWindowState",,q%:PROCinfo(q%+4)
ENDPROC
DEF PROCgeti(h%,i%)
!q%=h%:q%!4=i%:SYS "Wimp_GetIconState",,q%
ix0%=q%!8:iy0%=q%!12:ix1%=q%!16:iy1%=q%!20
iflags%=q%!24:idata%=q%+28
ENDPROC
DEF PROCinfo(p%)
x0%=!p%:y0%=p%!4:x1%=p%!8:y1%=p%!12
scx%=p%!16:scy%=p%!20:bhandle%=p%!24:flags%=p%!28
bx%=x0%-scx%:by%=y1%-scy%    : REM all drawing should be relative to bx%,by%
ENDPROC
DEF PROCupicon(handle%,icon%)
!q%=handle%:q%!4=icon%:q%!8=0:q%!12=0:SYS "Wimp_SetIconState",,q%
ENDPROC
DEF PROCopen(handle%,x0%,y0%,x1%,y1%,scx%,scy%,bhandle%)
LOCAL d%
!q%=handle%
q%!4=x0%:q%!8=y0%:q%!12=x1%:q%!16=y1%
q%!20=scx%:q%!24=scy%
q%!28=bhandle%
SYS "Wimp_OpenWindow",,q%
IF handle%=dialogue% THEN
  PROCgetw(handle%)
  MOUSE RECTANGLE x0%,y0%,x1%-x0%,y1%-y0%+40
ENDIF
ENDPROC
DEF PROCclose(handle%)
LOCAL i%
IF  NOT(handle% = quitbox%) THEN
IFhandle%=dialogue% THEN MOUSE RECTANGLE 0,0,1279,1023:dialogue%=-1
ENDIF
IF handle%=browbox% AND _altered THEN
 PROCsoftreset:ENDPROC
ELSE
 IF handle% =browbox% THEN PROCresetwindowdefs
ENDIF
!q%=handle%:SYS "Wimp_CloseWindow",,q%
ENDPROC
DEF PROCmouse(mousex%,mousey%,buttons%,handle%,icon%,oldbuttons%)
CASE  handle% OF
WHEN quitbox%: CASE icon% OF
               WHEN 0: REM ***************** Yes Quit Application *********
                IF _RESET% = TRUE THEN
                 PROCresetwindowdefs
                 PROCclose(quitbox%)
                 PROCclose(browbox%)
                ELSE
                 IF _prequit THEN
                  SYS"Wimp_ProcessKey",&1FC
                  PROCclose(handle%):PROCfinish
                  END
                 ELSE
                  PROCfinish:END
                 ENDIF
                ENDIF
                WHEN 2: _QUIT%=FALSE:_RESET%=FALSE:PROCclose(handle%)
                WHEN 3: SYS "Wimp_GetPointerInfo",,q%
                        SYS "Wimp_CreateMenu",,-1
                        SYS "Wimp_CreateMenu",,m_savetemp%,!q%-30,q%!4+60
                        _RESET% = TRUE
                ENDCASE
WHEN browbox%: CASE buttons% OF
               WHEN &02: REM ********************* MENU **********
                PROCmenu(m_browser%)
               WHEN  -1: PROCselection_unset
               OTHERWISE
                IF icon% = -1 THEN
                 PROCselection_unset
                ELSE
                 PROCshowwindow(icon%,buttons%)
                ENDIF
               ENDCASE
OTHERWISE:    CASE buttons% OF
              WHEN &02     : REM -- MENU button
               I%=FNwhichwindow(handle%):IFI%<>-1THENPROCwindowmenu(I%):ENDPROC
               CASE handle% OF
               WHEN -2: CASE icon% OF
                        WHEN ic_window%:PROCmenu(mainmenu%)
                        ENDCASE
               ENDCASE
              WHEN &01,&04 : REM -- SELECT/ADJUST buttons
               REM PROCaddchange(_titlestring%)
               CASE handle% OF
               WHEN -2: CASE icon% OF
                        WHEN ic_window%
                         IF FNchck_newtemplate THEN PROCresetwindowdefs ELSE PROCfront(browbox%)
                        ENDCASE
               WHEN m_workarea%:PROCaddchange(_titlestring%)
                PROCsetwork(q%,mb_workarea0%)
                PROCsetwork(q%+8,mb_workarea1%)
                x0%=!q%:y0%=q%!4:x1%=q%!8:y1%=q%!12
                CASE icon% OF
                WHEN 0:y1%+=4
                WHEN 1:x1%+=2
                WHEN 2:x0%-=2
                WHEN 3:y0%-=4
                WHEN 5:x0%+=2:IF x0%>mwx0% THEN x0%=mwx0%
                WHEN 6:x1%-=2:IF x1%<mwx1% THEN x1%=mwx1%
                WHEN 7:y1%-=4:IF y1%<mwy1% THEN y1%=mwy1%
                WHEN 8:y0%+=4:IF y0%>mwy0% THEN y0%=mwy0%
                WHEN 11:PROCxor(m_workarea%,11,6)
                        PROCsetworkarea(currentwindow%)
                        IF (buttons%AND1)=0 THEN SYS "Wimp_CreateMenu",,-1
                ENDCASE
                w0$=STR$x0%+","+STR$y0%
                w1$=STR$x1%+","+STR$y1%
                IFw0$<>$mb_workarea0%THEN$mb_workarea0%=w0$:PROCupicon(m_workarea%,9)
                IFw1$<>$mb_workarea1%THEN$mb_workarea1%=w1$:PROCupicon(m_workarea%,10)
              WHEN m_savetemp%
                IF icon%=2 THEN
                 PROCcheckfull($mb_templates%)
                 PROCsavetemplates($mb_templates%,TRUE)
                 IF buttons% AND &01 ELSE SYS "Wimp_CreateMenu",,-1
                ENDIF
               ENDCASE
              WHEN &10,&40 : REM -- SELECT/ADJUST dragging
               CASE handle% OF
               WHEN m_savetemp%:PROCdragicon(mousex%,mousey%,handle%,icon%)
               OTHERWISE:IFicon%<>-1THENPROCdrag(buttons%,handle%,icon%)
               ENDCASE
              ENDCASE
ENDCASE
ENDPROC
DEF PROCprocesskey(handle%,icon%,key%)
CASE handle% OF
WHEN m_workarea%
     IF key%=13 THEN
       PROCxor(m_workarea%,11,6)
       PROCsetworkarea(currentwindow%)
       SYS "Wimp_CreateMenu",,-1
       ENDPROC
     ENDIF
WHEN m_savetemp%
     IF key%=13 THEN
       PROCcheckfull($mb_templates%)
       PROCsavetemplates($mb_templates%,TRUE)
       SYS "Wimp_CreateMenu",,-1
       ENDPROC
     ENDIF
ENDCASE
SYS "Wimp_ProcessKey",key%
ENDPROC
------------------------------------------------------------------------------
DEF PROCdrag(b%,handle%,icon%)
I%=FNwhichwindow(handle%):IFI%=-1THENENDPROC
currentwindow%=I%:currenticon%=icon%:PROChighlight(I%)
dragtype%=b%:draghandle%=handle%:dragicon%=icon%
PROCgetcurw
PROCgetcuri
cx0%+=bx%:cy0%+=by%:cx1%+=bx%:cy1%+=by%
x0%=0:y0%=0:x1%=scrx1%:y1%=scry1%
IFb%=&10THEN
  PROCgetminxy(flags%,text$,sprite$,valid%)
  mx0%=mousex%-cx0%:mx1%=cx1%-mousex%
  my0%=mousey%-cy0%:my1%=cy1%-mousey%
  x0%=cx0%+minx%:y0%=0:x1%=scrx1%:y1%=cy1%-miny%
  IFmx0%<mx1%THENPROCswapx:x0%=0:x1%=cx0%-minx%:x0%+=1:x1%-=1
  IFmy0%>my1%THENPROCswapy:y0%=cy1%+miny%:y1%=scry1%:y0%+=1:y1%-=1
  x0%+=cx0%-cx1%:y1%+=cy1%-cy0%  : REM bodge
ENDIF
!q%=handle%:IF b%=&40 THEN q%!4=5 ELSE q%!4=6
q%!8=cx0%:q%!12=cy0%:q%!16=cx1%:q%!20=cy1%
q%!24=x0%:q%!28=y0%:q%!32=x1%:q%!36=y1%
SYS "Wimp_DragBox",,q%
ENDPROC
DEF PROCdragicon(mousex%,mousey%,handle%,icon%)
dragtype%=&FF:draghandle%=handle%
PROCgetw(handle%)
PROCgeti(handle%,icon%)
!q%=handle%:q%!4=5
q%!8=bx%+ix0%:q%!12=by%+iy0%:q%!16=bx%+ix1%:q%!20=by%+iy1%
q%!24=q%!8-mousex%:q%!28=q%!12-mousey%
q%!32=scrx1%+q%!16-mousex%:q%!36=scry1%+q%!20-mousey%
SYS "Wimp_DragBox",,q%
ENDPROC
DEF PROCswapx
cx0%=cx0%EORcx1%:cx1%=cx1%EORcx0%:cx0%=cx0%EORcx1%:cx0%-=1:cx1%+=1
ENDPROC
DEF PROCswapy
cy0%=cy0%EORcy1%:cy1%=cy1%EORcy0%:cy0%=cy0%EORcy1%:cy0%-=1:cy1%+=1
ENDPROC
DEF PROCunshade(mh%,I%)
mh%!(28+8+24*I%)=mh%!(28+8+24*I%)AND&FFBFFFFF:ENDPROC
DEF PROCgetminxy(flags%,text$,sprite$,valid%)
LOCAL x0%,y0%,x1%,y1%,mx%,my%
minx%=0:miny%=0
IF flags%AND&01 THEN
  IF FNgetcommand(valid%,"L")<>"" THEN ENDPROC  :REM can be formatted
  IF flags%AND&40 THEN
       SYS "Font_ReadInfo",flags%>>24 TO ,,y0%,,y1%
       SYS "Font_StringBBox",,CHR$26+CHR$(flags%>>24)+text$ TO ,x0%,,x1%
       SYS "Font_ConverttoOS",,x0% TO ,x0%
       SYS "Font_ConverttoOS",,x1% TO ,x1%
       minx%=x1%-x0%:miny%=y1%-y0%
  ELSE minx%=6*dx%+16*LENtext$:miny%=32
  ENDIF
  IF flags%AND&04 THEN miny%+=2*dy%
ENDIF
IF flags%AND&02 THEN
   SYS "XOS_SpriteOp",&128,spritearea%,sprite$ TO ,,,mx%,my%,,spm% ; P%
   IF (P%AND1)=0 THEN
      SYS "XOS_ReadModeVariable",spm%,4 TO ,,spx%:mx%=mx%<<spx%
      SYS "XOS_ReadModeVariable",spm%,5 TO ,,spy%:my%=my%<<spy%
      IF flags%AND&800 THEN mx%=mx%/2:my%=my%/2
      IF (flags%AND&21B)=&13 THEN mx%=minx%+mx% :REM sprite+text (V~H~R)
      IF mx%>minx% THEN minx%=mx%
      IF my%>miny% THEN miny%=my%
   ENDIF
ENDIF
ENDPROC
DEF PROCdecodedrag(cx0%,cy0%,cx1%,cy1%)
dragtype%=0
IF draghandle%=m_savetemp% THEN PROCsendsave(&FEC,mb_templates%):ENDPROC
PROCgeti(draghandle%,dragicon%)
oldflags%=iflags%:odt0%=idata%!0:odt1%=idata%!4:odt2%=idata%!8
PROCdeleteicon(draghandle%,dragicon%)
PROCgetw(draghandle%)
cx0%-=bx%:cy0%-=by%:cx1%-=bx%:cy1%-=by%
IFcx0%>cx1%THENPROCswapx
IFcy0%>cy1%THENPROCswapy
currenticon%=FNcricon(!q%,cx0%,cy0%,cx1%,cy1%,oldflags%,odt0%,odt1%,odt2%)
ENDPROC
DEF FNcricon(handle%,x0%,y0%,x1%,y1%,flags%,dt0%,dt1%,dt2%)
LOCAL ic%,v%
!q%=handle%
q%!20=flags%:q%!24=dt0%:q%!28=dt1%:q%!32=dt2%
text$=FNiconstring(flags%,q%+24)
IF flags% AND &100 THEN v%=q%!28 ELSE v%=-1
PROCgetminxy(flags%,text$,text$,v%)   : REM bodge
IFx1%-x0%<minx% THEN x1%=x0%+minx%
IFy1%-y0%<miny% THEN y1%=y0%+miny%
q%!4=x0%:q%!8=y0%:q%!12=x1%:q%!16=y1%
SYS "Wimp_CreateIcon",,q% TO ic%
SYS "Wimp_ForceRedraw",!q%,q%!4,q%!8,q%!12,q%!16
SYS "Wimp_GetCaretPosition",,q%
IF!q%=handle%IFq%!4=ic%:SYS "Wimp_SetCaretPosition",handle%,ic%,0,0,-1,0
=ic%
DEF PROCdeleteicon(handle%,icon%)
!q%=handle%:q%!4=icon%:SYS "Wimp_GetIconState",,q%
SYS "Wimp_DeleteIcon",,q%
SYS "Wimp_ForceRedraw",!q%,q%!8,q%!12,q%!16,q%!20
ENDPROC
------------------------------------------------------------------------------
DEF PROCmenu(m%)
menuhandle%=m%
IF FNencodemenu(m%) THEN
  IF handle%=-2 THEN
    REM Iconbar menu
    I%=m%!20+m%!24:J%=m%+28:K%=96-m%!24
    REPEAT K%+=I%:J%+=24:UNTILJ%!-24AND&80
    REM K%+=24 dotted line separator!
  ELSE
    K%=mousey%
  ENDIF
  SYS "Wimp_CreateMenu",,menuhandle%,mousex%-64,K%
  oldhandle%=handle%:oldicon%=icon%
ENDIF
ENDPROC
DEF PROCremenu
handle%=oldhandle%:icon%=oldicon%
IF FNencodemenu(menuhandle%) THEN
  SYS "Wimp_CreateMenu",,menuhandle%,mousex%-102,mousey%+12 :REM default coords
ENDIF
ENDPROC
------------------------------------------------------------------------------
DEF PROCwindowmenu(I%)
mmousex%=mousex%:mmousey%=mousey%
currentwindow%=I%:PROChighlight(I%)
currenticon%=icon%:PROCmenu(w_general%)
ENDPROC
DEF PROChighlight(I%)
ENDPROC
SYS "Wimp_SetCaretPosition",handle%(I%),-1,0,0,&2000000,0
ENDPROC
------------------------------------------------------------------------------
DEF PROCencodemenu(menuhandle%)
IF FNencodemenu(menuhandle%) ELSE ERROR 1,"Menu shouldn't be allowed"
ENDPROC
DEF FNencodemenu(menuhandle%)
IFmenuhandle%<&8000 THEN ERROR 1,"Bad menuhandle"
LOCALI%
I%=menuhandle%+28:_RESET% = FALSE:_QUIT% = FALSE
REPEAT!I%=!I%ANDNOT&01:I%!8=I%!8ANDNOT&400000:I%+=24:UNTILI%!-24AND&80
CASE menuhandle% OF
WHEN mainmenu%
     $mb_wident%="":$mb_templates%=templatef$
WHEN i_flags%
     PROCgetcuri
     PROCencodeicon(i_flags%,11,flags%,q%+28,ib_text%,ib_sprite%)
     $ib_buffersize%=STR$L%
     $ib_validation%=""
     PROCencodemenu(i_buffersize%)
     IF (flags%AND&01)=0 THEN
          PROCshade(i_buffersize%,1)
     ELSE IF flags%AND&100 THEN
            IF q%!32>0 THEN $ib_validation%=$(q%!32):PROCmenu_tick(i_buffersize%,1)
          ENDIF
     ENDIF
     IF NOT(_fonttra%) THEN PROCshade(i_flags%,6)
     $(i_flags%+28+12+24*14)="Fg colour"
     $(i_flags%+28+12+24*15)="Bg colour"
     IF flags% AND &02 THEN $(i_flags%+28+12+24*14)="EOR colour"
     IF flags% AND &20 ELSE $(i_flags%+28+12+24*15)="EOR colour"
     IF flags% AND &40 THEN
       i_flags%?(28+11+24*14)=7
       i_flags%?(28+11+24*15)=7
       PROCshade(i_flags%,14):PROCshade(i_flags%,15)
     ELSE
       i_flags%?(28+11+24*14)=FNforeback((flags%>>24)AND&F)
       i_flags%?(28+11+24*15)=FNforeback((flags%>>28)AND&F)
     ENDIF
     PROCencodemenu(i_esg%)
WHEN i_esg%
     PROCmenu_tick(i_esg%,(flags%>>16)AND&0F)
WHEN i_button%
     PROCmenu_tick(i_button%,(flags%>>12)AND&0F)
WHEN m_browser%
      PROCselection_on
      PROCselection_name
WHEN w_general%
     IF currentwindow%=-1 THEN =FALSE : REM deleted!
     $mb_wident%=wident$(currentwindow%)
     $(m_ident%!(28+12)) = wident$(currentwindow%)
     PROCgetcuri:$mb_ixcon%=STR$(q%!8):$mb_iycon%=STR$(q%!12)
     IF flags%AND&800000 THEN currenticon%=-1 : REM has been deleted!
     IF currenticon%<>-1 THEN
       $(w_general%!(28+24*1+12)+LEN"Amend icon ")="#"+STR$currenticon%
       $(w_general%!(28+24*2+12)+LEN"Renumber   ")="#"+STR$VAL$mb_renumber%
       PROCencodemenu(i_flags%)
       PROCencodemenu(i_button%)
     ELSE $(w_general%!(28+24*1+12)+LEN"Amend icon ")=""
          $(w_general%!(28+24*2+12)+LEN"Renumber   ")=""
          FORI%=1TO5:PROCshade(w_general%,I%):NEXT
     ENDIF
     PROCencodemenu(w_flags%)
     $mb_workarea0%=STR$(q%!44)+","+STR$(q%!48)
     $mb_workarea1%=STR$(q%!52)+","+STR$(q%!56)
     $mb_minx%=STR$(q%!72 AND &FFFF)
     $mb_miny%=STR$(q%!72 >> 16)
     mwx0%=q%!20:mwy0%=q%!24+(q%!8-q%!16)
     mwx1%=q%!20+(q%!12-q%!4):mwy1%=q%!24
     PROCencodepalmenu(-1)
     I%=w_colours%+28
     FOR J%=q%+36 TO q%+42
      IF ?J% = &FF THEN
       I%?11=(0<<4)ORuncolour%(0):I%+=24
      ELSE
       I%?11=(?J%<<4)ORuncolour%(?J%):I%+=24
      ENDIF
     NEXT
WHEN w_flags%
     !q%=handle%(currentwindow%)
     SYS "Wimp_GetWindowInfo",,q%
     FOR I%=0 TO 7
     IF q%!32 AND (1<<I%) THEN PROCmenu_tick(w_flags%,I%)
     NEXT
     IF q%!32 AND (1<<8) THEN
      PROCmenu_tick(w_flags%,8)
      PROCmenu_tick(w_scroll%,0):PROCuntick(w_scroll%,1)
     ELSE
      PROCuntick(w_scroll%,0)
     ENDIF
     IF q%!32 AND (1<<9) THEN
      PROCmenu_tick(w_flags%,8):
      PROCmenu_tick(w_scroll%,1):PROCuntick(w_scroll%,0)
     ELSE
      PROCuntick(w_scroll%,1)
     ENDIF
     IF q%!32 AND (1<<10) THEN PROCmenu_tick(w_flags%,9)   :REM real
     IF q%!32 AND (1<<11) THEN PROCmenu_tick(w_flags%,10)  :REM back window
     IF q%!32 AND (1<<12) THEN PROCmenu_tick(w_flags%,11)  :REM grab keys
     PROCencodemenu(t_flags%)
     IF currenticon%=-1 THEN
       flags%=q%!64:PROCencodemenu(i_button%)
     ELSE PROCshade(w_flags%,12)
     ENDIF
     FOR I%=14 TO 20
     IF q%!32 AND (1<<(I%+24-14)) THEN PROCmenu_tick(w_flags%,I%)
     NEXT
     IF q%!32 AND &80000000 THEN
       PROCmenu_tick(w_flags%,13)
       PROCshade(w_flags%,0)
       PROCshade(w_flags%,2)
       PROCshade(w_flags%,3)
       PROCshade(w_flags%,7)
     ELSE
       FOR I%=14 TO 20:PROCshade(w_flags%,I%):NEXT
     ENDIF
WHEN t_flags%
     q%!60=q%!60 OR &24                     : REM must be filled with border
     PROCencodeicon(t_flags%,6,q%!60,q%+76,tb_text%,tb_sprite%)
     $tb_buffersize%=STR$L%
     IF NOT(_fonttra%) THEN PROCshade(t_flags%,6)
     IFq%!60AND&100THENPROCmenu_tick(t_flags%,7)
     IFq%!60AND&200THENPROCmenu_tick(t_flags%,8)
WHEN w_scroll%
     PROCgetcurw
     IFflags%AND&100THENPROCmenu_tick(w_scroll%,0)
     IFflags%AND&200THENPROCmenu_tick(w_scroll%,1)
ENDCASE
=TRUE
DEF PROCshade(mh%,I%)
mh%!(28+8+24*I%)=mh%!(28+8+24*I%)OR&400000:ENDPROC
DEF PROCencodeicon(iconmenu%,nmenu%,flags%,q%,itext%,isprite%)
IF i_font%<0 THEN PROCshade(iconmenu%,6)
$itext%="":$isprite%=""
IF flags% AND &01 THEN $itext%=FNiconstring(flags%,q%)
IF (flags%AND &03)=&02 THEN $isprite%=FNiconstring(flags%,q%)
IF flags% AND &100 THEN L%=q%!8 ELSE L%=12 : REM returned to caller
I%=iconmenu%+28:J%=1
FORitem%=0TOnmenu%:IFflags%ANDJ%THEN!I%=!I%OR&01
I%+=24:J%+=J%:NEXT
ENDPROC
DEF PROCdecodemenu(menuhandle%,menus%)
CASE menuhandle% OF
WHEN mainmenu%
     CASE !menus% OF
     WHEN 0:REM info box
     WHEN 1: IF NOT(_altered) THEN
              PROCresetwindowdefs
              PROCfront(browbox%)
             ELSE
              PROCsoftreset
             ENDIF
     WHEN 2: IF _altered THEN
              PROCicon_write(quitbox%,1,FNmsg_0("Q1"))
              _QUIT% = TRUE:PROCfront(quitbox%):_prequit = FALSE:_RESET%= FALSE
             ELSE
              PROCfinish:END
             ENDIF
     ENDCASE
WHEN m_browser%
     CASE !menus% OF
      WHEN 0: REM *********** saveas
              PROCsavetemplates($mb_templates%,TRUE)
      WHEN 1: REM *********** Select
              PROCselection_name
              PROCdecodemenu(m_selwin%,menus%+4)
      WHEN 2: REM *********** Create Window
              IF mb_newident%?0 = 0 THEN
               ERROR 1,"No identifier"
              ELSE PROCreformat_string(mb_newident%)
               IF FNchk_duplicates($mb_newident%) THEN
                ERROR 1 , "Duplicate identifiers"
               ELSE
                PROCcreatewindow(brx%,bry%,$mb_newident%)
                brx%+=60:bry%-=40
                IF bry% < 340  THEN bry% = 1000
                IF brx% > 1040 THEN brx% = 40
               ENDIF
              ENDIF
     ENDCASE
WHEN m_selwin%
     CASE !menus% OF
      WHEN 0 : REM *** Copy Window
                IF NOT(mb_cpywin%?0 = 0) THEN
                 PROCreformat_string(mb_cpywin%)
                 PROCreformat_string(mb_renwin%)
                 IF NOT($mb_cpywin% = $mb_renwin%) THEN
                  IF FNchk_duplicates($mb_cpywin%) THEN
                   ERROR 1 , "Duplicate identifiers"
                  ELSE
                   PROCselection_copy:REM *** Copy Window
                  ENDIF
                 ENDIF
                ENDIF
      WHEN 1 : REM *** Rename Window
                IF NOT(mb_renwin%?0 = 0) THEN
                 PROCreformat_string(mb_renwin%)
                 PROCreformat_string(mb_cpywin%)
                 IF NOT($mb_cpywin% = $mb_renwin%) THEN
                  REM PRINT LEN($mb_renwin%)
                  IF FNchk_duplicates($mb_renwin%) THEN
                   ERROR 1 , "Duplicate identifiers"
                  ELSE
                   PROCselection_rename:REM *** Rename Window
                  ENDIF
                 ENDIF
                ENDIF
                REM *spool
      WHEN 2 : PROCselection_delete:REM *** Delete Window
     ENDCASE
WHEN w_general%
     CASE !menus% OF
     WHEN 0: REM ****************** Create Icon ****************
            PROCaddchange(_titlestring%):PROCgetcurw
            mx%=mmousex%-bx%:my%=mmousey%-by%
            ix%=default%!96-default%!88
            iy%=default%!100-default%!92
            q%!4=mx%-ix%/2:q%!8=my%-iy%/2:q%!12=q%!4+ix%:q%!16=q%!8+iy%
            FOR I%=0 TO 12 STEP 4:q%!(20+I%)=default%!(104+I%):NEXT
            SYS "Wimp_CreateIcon",,q% TO currenticon%
            SYS "Wimp_ForceRedraw",!q%,q%!4,q%!8,q%!12,q%!16
     WHEN 1: REM ****************** Amend Icon *****************
            IF NOT(_altered) THEN
             PROCaddchange(_titlestring%)
            ENDIF
            PROCgetcuri
            PROCdeleteicon(!q%,q%!4)
            PROCdecodeicon(menus%+4,q%+24,q%+28,ib_text%,ib_sprite%,ib_buffersize%,$ib_validation%)
            currenticon%=FNcricon(!q%,q%!8,q%!12,q%!16,q%!20,q%!24,q%!28,q%!32,q%!36)
     WHEN 2: REM ****************** Renumber
            PROCaddchange(_titlestring%)
            renumber%=VAL$mb_renumber%
            PROCrenumber(currentwindow%,currenticon%,renumber%)
            PROCaddchange(_titlestring%)
     WHEN 3: REM ****************** Copy Icon
            PROCaddchange(_titlestring%):PROCgetcuri
            IFflags%AND&100THEN
              B%=FNworkspace(q%!36):$B%=text$:q%!28=B%
              IFq%!32>0THENB%=FNworkspace(LEN$(q%!32)+1):$B%=$(q%!32):q%!32=B%
            ENDIF
            x0%=q%!8:y0%=q%!12:x1%=q%!16:y1%=q%!20
            CASE menus%!4 OF
            WHEN -1:copyx%=16:copyy%=-16
            WHEN 0:copyx%=x0%-x1%:copyy%=0
            WHEN 1:copyx%=x1%-x0%:copyy%=0
            WHEN 2:copyx%=0:copyy%=y1%-y0%
            WHEN 3:copyx%=0:copyy%=y0%-y1%
            ENDCASE
            x0%+=copyx%:y0%+=copyy%:x1%+=copyx%:y1%+=copyy%
            currenticon%=FNcricon(!q%,x0%,y0%,x1%,y1%,q%!24,q%!28,q%!32,q%!36)
     WHEN 4: REM ** Move Icon
            PROCaddchange(_titlestring%):PROCgetcuri
            PROCaddchange(_titlestring%)
            h%=handle%(currentwindow%)
            PROCgeti(h%,currenticon%)
            oldf%=iflags%:o0%=idata%!0:o1%=idata%!4:o2%=idata%!8
            PROCdeleteicon(h%,currenticon%)
            CASE menus%!4 OF
            WHEN 0:ix0%-=dx%:ix1%-=dx%
            WHEN 1:ix0%+=dx%:ix1%+=dx%
            WHEN 2:iy0%+=dy%:iy1%+=dy%
            WHEN 3:iy0%-=dy%:iy1%-=dy%
            WHEN 4:ix0%=VAL($mb_ixcon%):PROCmove_xdir(ix0%,ix1%)
            WHEN 5:iy0%=VAL($mb_iycon%):PROCmove_ydir(iy0%,iy1%)
            ENDCASE
            currenticon%=FNcricon(h%,ix0%,iy0%,ix1%,iy1%,oldf%,o0%,o1%,o2%)
     WHEN 5: REM ** Delete Icon
                 PROCaddchange(_titlestring%)
               q%?(36+menus%!4)=menus%!8
            PROCdeleteicon(handle%(currentwindow%),currenticon%)
     WHEN 6:PROCdecodemenu(w_flags%,menus%+4)
     WHEN 7:IF menus%!4<>-1 AND menus%!8<>-1 THEN
             PROCaddchange(_titlestring%)
             !q%=handle%(currentwindow%)
             SYS "Wimp_GetWindowInfo",,q%
             q%?(36+menus%!4)=menus%!8
             IFmenus%!8=16 q%?(36+menus%!4)=255
             curw%=currentwindow%
             $mb_newident% = "#"
             PROCcrwindow(q%+4,wident$(curw%))
             N%   = q%!4
             PROCdeletewindow(curw%)
             q%!0 = N%
             PROCreshow_window(q%)
             $mb_newident% = ""
            ENDIF
     WHEN 8:PROCaddchange(_titlestring%):PROCsetworkarea(currentwindow%)
     WHEN 10: q%!0 = handle%(currentwindow%)
             SYS "Wimp_CloseWindow",,q%:currentwindow%=-1
     ENDCASE
WHEN w_flags%:PROCaddchange(_titlestring%)
     IF !menus%=-1 THEN ENDPROC
     !q%=handle%(currentwindow%)
     SYS "Wimp_GetWindowInfo",,q%
     CASE !menus% OF
     WHEN 0:PROCdecodetitle(1)
     WHEN 1:q%!32=q%!32EOR&02
     WHEN 2:q%!32=q%!32EOR&04
     WHEN 3:q%!32=q%!32EOR&08
     WHEN 4:q%!32=q%!32EOR&10
     WHEN 5:q%!32=q%!32EOR&20
     WHEN 6:q%!32=q%!32EOR&40
     WHEN 7:q%!32=q%!32EOR&80
     WHEN 8:q%!32=q%!32ANDNOT&300
            CASE menus%!4 OF
            WHEN 0:q%!32=q%!32OR&100
            WHEN 1:q%!32=q%!32OR&200
            ENDCASE
            ENDIF
     WHEN 9:q%!32=q%!32EOR&400
     WHEN 10:q%!32=q%!32EOR&800
     WHEN 11:q%!32=q%!32EOR&1000
     WHEN 12:IF menus%!4<>-1 THEN q%!64=(menus%!4)<<12
     WHEN 13:q%!32=q%!32EOR&80000000
     WHEN 14,15,17,18,19,20:q%!32=q%!32 EOR (1<<(10+!menus%))
     WHEN 16:PROCdecodetitle(1<<26)
     ENDCASE
     curw%=currentwindow%
     $mb_newident% = "#"
     PROCcrwindow(q%+4,wident$(curw%))
     N%   =  q%!4
     PROCdeletewindow(curw%)
     q%!0 =  N%
     PROCreshow_window(q%)
     $mb_newident% = ""
     PROCzzzz(q%!0)
ENDCASE
ENDPROC
DEF PROCloadsprites(f$) REM LOCAL I%,f$
SYS "OS_SpriteOp",&10A,spritearea%,f$
IF f$<>"<Wimp$Scrap>" THEN spritef$=f$
PROCredrawwindows
ENDPROC
DEF PROCmergesprites(f$)
SYS "OS_SpriteOp",&10B,spritearea%,f$
PROCredrawwindows
ENDPROC
DEF PROCredrawwindows
LOCAL I%
FOR I%=0 TO nh%
IF handle%(I%)>nh% THEN SYS "Wimp_ForceRedraw",handle%(I%),-1E8,-1E8,1E8,1E8
NEXT
ENDPROC
DEF FNfiletype(f$)
LOCAL f%,type%
SYS "OS_File",17,f$ TO type%,,f%
IF type%<>1 THEN = -2
IF (f%>>>20)=&FFF THEN = (f%>>>8)AND&FFF ELSE = -1
DEF PROCdecodetitle(bit%)
CASE menus%!4 OF
WHEN -1:q%!32=q%!32EORbit%
OTHERWISE:q%!32=q%!32ORbit%
ENDCASE
IFmenus%!4=8THENmenus%!4=9 : REM bodge for 'right-justified' bit
IFmenus%!4=7THENmenus%!4=8 : REM bodge for 'indirected' bit
PROCdecodeicon(menus%+4,q%+60,q%+76,tb_text%,tb_sprite%,tb_buffersize%,"")
ENDPROC
DEF PROCsetwork(q%,v%)
!q%=VAL$v%:q%!4=VAL$(v%+INSTR($v%,","))
ENDPROC
DEF PROCsetworkarea(curw%)
LOCAL h%
h%=handle%(curw%)
PROCsetwork(q%,mb_workarea0%)
PROCsetwork(q%+8,mb_workarea1%)
SYS "Wimp_SetExtent",h%,q%
min% = (VAL$mb_minx% AND &FFFF) OR (VAL$mb_miny% << 16)
!q%=h%:SYS "Wimp_GetWindowInfo",,q%
IF q%!72<>min% THEN
  q%!72=min%:SYS "Wimp_CreateWindow",,q%+4 TO handle%(curw%)
  !q%=handle%(curw%):SYS "Wimp_OpenWindow",,q%
  !q%=h%:SYS "Wimp_DeleteWindow",,q%
ENDIF
ENDPROC
DEF PROCdecodeicon(menus%,fptr%,qptr%,mb_text%,mb_sprite%,mb_buffersize%,v$)
CASE !menus% OF
WHEN 0: REM ** text
       oldf%=!fptr%
       CASE menus%!4 OF
       WHEN -1:!fptr%=!fptr% EOR &01
REM            IF!fptr%AND&01THEN!fptr%=!fptr%ANDNOT&02
       OTHERWISE:!fptr%=!fptr%OR&01
                 IF (oldf%AND&01)=0 THEN !fptr%=!fptr%ANDNOT&02
       ENDCASE
       PROCputiconstring(oldf%,fptr%,qptr%,$mb_text%)
WHEN 1: REM ** sprites
       oldf%=!fptr%
       CASE menus%!4 OF
       WHEN -1:!fptr%=!fptr% EOR &02
REM            IF!fptr%AND&02THEN!fptr%=!fptr%ANDNOT&01
       OTHERWISE:!fptr%=(!fptr%ANDNOT&03)OR&02
       ENDCASE
       IF !fptr% AND &01 THEN A$=$mb_text% ELSE A$=$mb_sprite%
       PROCputiconstring(oldf%,fptr%,qptr%,A$)
WHEN 2:!fptr%=!fptr%EOR&04
WHEN 3:!fptr%=!fptr%EOR&08
WHEN 4:!fptr%=!fptr%EOR&10
WHEN 5:!fptr%=!fptr%EOR&20
WHEN 6:SYS "Wimp_DecodeMenu",,i_font%,menus%+4,STRING$(100," ")TO,,,fontname$
       IF menus%!4<>-1 IF menus%!8=4 THEN fontname$+=" point"
       IF fontname$="" THEN
            !fptr%=!fptr%ANDNOT&40
            fptr%?3=&D7
       ELSE !fptr%=!fptr%OR&40
            IF RIGHT$(fontname$,5)="point" THEN
                 I%=LENfontname$
                 REPEATI%=I%-1:UNTILMID$(fontname$,I%,1)="."
                 psiz%=VALMID$(fontname$,I%+1)
                 fontname$=LEFT$(fontname$,I%-1)
            ELSE psiz%=12
            ENDIF
            fptr%?3=FNfindfont(fontname$,psiz%)
       ENDIF
WHEN 7:!fptr%=!fptr%EOR&80
WHEN 8:IF!fptr%AND&100THENB$=$!qptr%ELSEB$=$qptr%
       IFmenus%!4=-1 THEN !fptr%=!fptr%EOR&100 ELSE !fptr%=!fptr%OR&100
       IF!fptr%AND&100THEN
         qptr%!8=VAL$mb_buffersize%
         !qptr%=FNworkspace(qptr%!8):$!qptr%=LEFT$(B$,qptr%!8-1)
         IF v$="" THEN
              qptr%!4=-1
         ELSE IF (!fptr%AND&03)=&02 THEN
                   qptr%!4=spritearea%
              ELSE qptr%!4=FNworkspace(LENv$+1):$(qptr%!4)=v$
              ENDIF
         ENDIF
       ELSE $qptr%=LEFT$(B$,11)
       ENDIF
       IF (!fptr% AND &103) = &102 THEN
         IF qptr%!4 > 1 THEN !fptr%=!fptr% AND NOT &02
       ENDIF
WHEN 9:!fptr%=!fptr%EOR&200
WHEN 10:!fptr%=!fptr%EOR&400
WHEN 11:!fptr%=!fptr%EOR&800
WHEN 12:!fptr%=FNfield(!fptr%,12,4,menus%!4)
WHEN 13:!fptr%=FNfield(!fptr%,16,5,menus%!4)
WHEN 14:!fptr%=FNfield(!fptr%,24,4,menus%!4)
WHEN 15:!fptr%=FNfield(!fptr%,28,4,menus%!4)
ENDCASE
ENDPROC
DEF FNfield(flg%,b0%,nb%,i%)
IFi%<>-1THEN=flg%ANDNOT(((1<<nb%)-1)<<b0%)OR(i%<<b0%)ELSE=flg%
DEF PROCputiconstring(oldf%,fptr%,qptr%,A$)
IF oldf%AND&100 THEN
     IF (!fptr% AND &03)=&02 THEN qptr%!4=-1 : REM no sprite area
     IF LENA$<qptr%!8 THEN
        $!qptr%=A$:!fptr%=!fptr%OR&100:ENDPROC
     ENDIF
ELSE IF LENA$<12 THEN
        $qptr%=A$:!fptr%=!fptr%ANDNOT&100:ENDPROC
     ENDIF
ENDIF
!fptr%=!fptr% OR &100
!qptr%=FNworkspace(LENA$+1):qptr%!8=LENA$+1
$!qptr%=A$
IF (oldf%AND&100)=0 THEN qptr%!4=-1 : REM keep old validation string, if any
ENDPROC
------------------------------------------------------------------------------
DEF PROCrenumber(curw%,curi%,newi%)
LOCAL M%,N%
!q%=handle%(curw%)
SYS "Wimp_GetWindowInfo",,q%
IF q%!88 <= newi% THEN ERROR 1,"Icon number out of range"
M%=q%+4+88+32*curi%
N%=q%+4+88+32*newi%
FOR I%=0 TO 28 STEP4:SWAP M%!I%,N%!I%:NEXT
I%=q%!88
WHILE I%>0
  IF q%!(4+88+32*(I%-1)+16) AND (1<<23) THEN I%-=1:q%!88=I% ELSE I%=0
ENDWHILE
$mb_newident% = "#"
PROCcrwindow(q%+4,wident$(curw%)) : REM Help !!!!
N%   = q%!4
PROCdeletewindow(curw%)           : REM Interesting ???
q%!0 =N%
PROCreshow_window(q%)
$mb_newident% = ""
ENDPROC
------------------------------------------------------------------------------
DEF PROCstandardwindow(brx%,bry%)
FOR I%=0 TO 84 STEP4:q%!I%=default%!I%:NEXT:q%!84=0
q%!64=spritearea%
I%=q%!8-q%!0:q%!0=brx%:q%!8=q%!0+I%
I%=q%!4-q%!12:q%!12=bry%:q%!4=q%!12+I%
ENDPROC
!q%=brx%:q%!4=bry%-200:q%!8=brx%+200:q%!12=bry%:q%!16=0:q%!20=0:q%!24=-1
q%!28=&1F
q%?32=`tfcol:q%?33=`tbcol:q%?34=`wfcol:q%?35=`wbcol
q%?36=4:q%?37=`tbcol:q%?38=`tbcol2:q%?39=0
q%!40=0:q%!44=-1024:q%!48=1280:q%!52=0
q%!56=&0000003D:q%!60=&00003000
q%!64=spritearea%:q%!68=0
$(q%+72)="<Untitled>"
q%!84=0
ENDPROC
DEF PROCcreatewindow(brx%,bry%,wident$)
PROCstandardwindow(brx%,bry%)
PROCcrwindow(q%,wident$)
PROCaddchange(_titlestring%)
ENDPROC
DEF PROCcrwindow(q%,wident$)
REM IF handleSP% <= 20 THEN ENDPROC
IF NOT( $mb_newident% = "#" ) THEN
  PROCadd_to_array(wident$)
  _ans% = q%!28>>>30
  IF _ans% = 0 THEN
   _ans% = q%!28AND&0C
  ELSE
   _ans% = q%!28>>>28AND&05
  ENDIF
ENDIF
 REM PRINT "0.1.2.1"
SYS "XWimp_CreateWindow",,q% TO handle%;VFLAG%
IF (VFLAG% MOD 2) = 1 THEN ERROR _init%, "Cannot create any more windows"
 REM PRINT "0.1.2.2"
m%=handleSP%:handleSP%=handle%(handleSP%):handle%(m%)=handle%
!q%=handle%
currentwindow%=m%:wident$(m%)=wident$
currenticon%=-1
 REM PRINT "0.1.2.3"
  PROChighlight(m%)
 IF NOT( $mb_newident% = "#" ) THEN PROCbuildbrowsericon(wident$,_ans%)
ENDPROC
DEF FNwhichwindow(handle%)
LOCAL I%
IF handle%=-1 THEN =-1
handle%(nh%+1)=handle%
I%=-1:REPEATI%+=1:UNTIL handle%(I%)=handle%
IF I%>nh% THEN =-1 ELSE =I%
DEF PROCdeletewindow(I%)
!q%=handle%(I%): REM TO CHECK # IN BROWSER mb_ident%
handle%(I%)=handleSP%:handleSP%=I%
SYS "Wimp_DeleteWindow",,q%
wident$(I%)=""
ENDPROC
DEF PROCgetcurw
!q%=handle%(currentwindow%)
SYS "Wimp_GetWindowState",,q%
PROCinfo(q%+4)
ENDPROC
DEF PROCgetcuri
LOCAL i%
!q%=handle%(currentwindow%)
q%!4=currenticon%
SYS "Wimp_GetIconState",,q%
cx0%=q%!8:cy0%=q%!12:cx1%=q%!16:cy1%=q%!20
flags%=q%!24
IF flags% AND &100 THEN
 text$=$(q%!28)
 valid% = q%!32
ELSE
 i%=q%?40:q%?40=13:text$=$(q%+28):q%?40=i%
 valid% = -1
ENDIF
IF (flags%AND&103)=&103 THEN sprite$=MID$(FNgetcommand(valid%,"S"),2) ELSE sprite$=text$
ENDPROC
DEF FNgetcommand(v%,c$)
IF v%<=0 THEN =""
LOCALI%
I%=INSTR(";"+$v%,";"+c$):IF I%=0 THEN =""
=LEFT$($(v%+I%-1),INSTR($(v%+I%-1)+";",";")-1)
DEF FNiconstring(flg%,p%)
LOCAL i%,i$
IF flg%AND&100 THEN i$=$!p% ELSE i%=p%?12:p%?12=13:i$=$p%:p%?12=i%
=i$
DEF PROCgetpointer
SYS "Wimp_GetPointerInfo",,q%
mousex%=!q%:mousey%=q%!4:buttons%=q%!8
handle%=q%!12:icon%=q%!16
ENDPROC
------------------------------------------------------------------------------
DEF PROCerrordisplay
IF tsloss = TRUE THEN SYS "Wimp_CloseTemplate"
REM OSCLI("CLOSE")
err%=ERR:!errbuf%=err%
CASE err% OF
WHEN 1,2:$(errbuf%+4)=REPORT$+CHR$0
OTHERWISE
 REM$(errbuf%+4)="At Line "+STR$ERL+" reports   "+REPORT$+CHR$0
 $(errbuf%+4)= REPORT$+CHR$0
ENDCASE
SYS "Wimp_ReportError",errbuf%,1,"FormEd"
IF err%=1  THEN ENDPROC
IF REPORT$ ="Too many windows" THEN PROCselection_removeicon:ENDPROC
ENDPROC
#
DEF PROCfinish
FORI%=0TO255
WHILE fontcounts%?I%>0:SYS "Font_LoseFont",I%:fontcounts%?I%-=1:ENDWHILE
NEXT
SYS "Wimp_CloseDown"
ENDPROC
------------------------------------------------------------------------------
DEF FNworkspace(L%)
IF curbuff%+L%>buffer%+maxbuf% THEN ERROR 1,"No more buffer space"
curbuff%+=L%:=curbuff%-L%
------------------------------------------------------------------------------
DEF FNfindfont(f$,p)
LOCALf%
SYS "Font_FindFont",,f$,p*16,p*16,0,0 TO f%
fontcounts%?f%+=1
IF fontcounts%?f%>=255 THEN ERROR 1,"Internal font table full"
=f%
------------------------------------------------------------------------------
DEF PROCxor(handle%,icon%,ntimes%)
LOCALI%:FORI%=1TOntimes%:PROCseti(handle%,icon%,&200000,0)
tempt%=TIME:REPEATUNTILTIME-tempt%>3:NEXT
ENDPROC
 
DEF PROCseti(handle%,icon%,eor%,bic%)
!q%=handle%:q%!4=icon%:q%!8=eor%:q%!12=bic%:SYS "Wimp_SetIconState",,q%
ENDPROC
 
DEF PROCreadpal(c%,c2%)
IF c2%=16 THEN
     palword%=paltable%!(4*c%)
ELSE SYS "OS_ReadPalette",c%,c2% TO ,,palword%
ENDIF
r%=(palword%>> 8)AND&FF
g%=(palword%>>16)AND&FF
b%=(palword%>>24)AND&FF
ENDPROC
 
------------------------------------------------------------------------------
DEF PROCencodepalmenu(tickcolour%)
LOCAL I%,J%
PROCencodepal(0,15)
I%=m_palette%+28:J%=m_p1lette%+28
FOR c%=0 TO 15
 I%?11=(c%<<4)+uncolour%(c%):I%!8=I%!8 OR &08 : REM h centred
 J%?11=(c%<<4)+uncolour%(c%):J%!8=J%!8 OR &08 : REM h centred
 IF c%=tickcolour% THEN
  !I%=!I%OR&01
  !J%=!J%OR&01
 ELSE
  !I%=!I%ANDNOT&01
  !J%=!J%ANDNOT&01
 ENDIF
 I%+=24
 J%+=24
NEXT
J%?11=(0<<4)+uncolour%(0):J%!8=J%!8 OR &08
IFtickcolour%=255 THEN
 !J%=!J%OR1
ELSE
 !J%=!J%ANDNOT1
ENDIF
ENDPROC
DEF PROCencodepal(c1%,c2%)
LOCAL c%,d%,e%,br%,maxd%,maxe%
SYS "Wimp_ReadPalette",,paltable%
FORc%=c1%TOc2%:bright%(c%)=FNbrightness(c%):NEXT
FORc%=c1%TOc2%:br%=bright%(c%):maxe%=-1
FORd%=0TO15:e%=ABS(bright%(d%)-br%)
IFe%>maxe%THENmaxe%=e%:maxd%=d%
NEXT:uncolour%(c%)=maxd%:NEXT
ENDPROC
DEF FNbrightness(c%)
LOCALr%,g%,b%
PROCreadpal(c%,16)
=r%+g%+g%+b%
DEF FNforeback(c%) = (c%<<4)ORuncolour%(c%)
------------------------------------------------------------------------------
DEF PROCcheckfull(f$)
IF INSTR(f$,".") OR INSTR(f$,":") THEN ENDPROC
ERROR 1,"To save, drag the file icon to a directory viewer"
DEF FNmatchident(A$)
IF A$="" THEN =-1
LOCAL I%
I%=nh%+1:REPEATI%=I%-1:UNTILA$=wident$(I%)ORI%=0
IFA$=wident$(I%)THEN=I%ELSE=-1
DEF PROCsavetemplates(tfile$,safe%)
SYS"Wimp_WhichIcon",browbox%,q%,1<<23,0
IF q%!0 = -1 THEN ERROR 1,"No templates to save"
IF tfile$ = "Templates" THEN ENDPROC
J%=0:FORI%=0TOnh%
IF handle%(I%) >nh% THEN
  IF wident$(I%)="" THEN ERROR 1,"Only named windows can be saved"
  wptr%(J%)=I%:J%+=1
ENDIF
NEXT
REM *** PROCsortwindows removed
FORI%=0TO255:fontbinding%?I%=0:NEXT
freef%=1  : REM internal font handle allocation
tf_hdr%=16
tf_fsize%=48
tf_handle%=OPENOUT(tfile$)
IF tf_handle%=0 THEN ERROR 1,"Can't open file '"+tfile$+"'"
tf_dataptr%=tf_hdr%+J%*24+4
FORI%=0TOtf_hdr%-1:indexdata%?I%=0:NEXT
tf_index%=indexdata%+tf_hdr%
FOR I%=J%-1TO0STEP-1
!q%=handle%(wptr%(I%)):SYS "Wimp_GetWindowInfo",,q%
 q%!68 = 1  : REM *** Assume common sprite area when re-loading
tf_datasize%=88+32*q%!88
PROCprocessicon(q%+60,q%+76)
 q%!28 = -1 : REM *** Place on top of stack
IF q%!88>0 THEN PROCprocessicons
SYS "OS_GBPB",1,tf_handle%,q%+4,tf_datasize%,tf_dataptr%
tf_index%!0=tf_dataptr%
tf_index%!4=tf_datasize%
tf_index%!8=1
$(tf_index%+12)=wident$(wptr%(I%))
tf_index%+=24:tf_dataptr%+=tf_datasize%
NEXT
!tf_index%=0
IF freef%=1 THEN !indexdata%=-1 ELSE !indexdata%=tf_dataptr%
SYS "OS_GBPB",1,tf_handle%,indexdata%,tf_index%+4-indexdata%,0
IF freef%>1 THEN
  FOR I%=0 TO tf_fsize%-1:indexdata%?I%=0:NEXT
  FOR I%=1 TO freef%-1
  J%=0:REPEATJ%+=1:UNTILfontbinding%?J%=I%
  SYS "Font_ReadDefn",J%,indexdata%+8 TO ,,indexdata%!0,indexdata%!4
  SYS "OS_GBPB",1,tf_handle%,indexdata%,tf_fsize%,tf_dataptr%
  tf_dataptr%+=tf_fsize%
  NEXT
ENDIF
CLOSE #tf_handle%
OSCLI("Settype "+tfile$+" &FEC")
OSCLI("Stamp "+tfile$)
IF safe% THEN templatef$=tfile$:_altered = FALSE
$_titlestring% = templatef$: $mb_templates% = templatef$
PROCchangewindowtitle(browbox%,_titlestring%)
IF _RESET% THEN
 IF _QUIT% THEN PROCfinish:END
 PROCresetwindowdefs
 PROCclose(browbox%)
ENDIF
ENDPROC
DEF PROCprocessicons
LOCAL I%,J%
J%=q%+92
FOR I%=0 TO q%!88-1:PROCprocessicon(J%+16,J%+20):J%+=32:NEXT
ENDPROC
DEF PROCprocessicon(fptr%,qptr%)
IF !fptr% AND &40 THEN
  extf%=fptr%?3:intf%=fontbinding%?extf%
  IF intf%=0 THEN intf%=freef%:freef%+=1:fontbinding%?extf%=intf%
  fptr%?3=intf%
ENDIF
IF !fptr% AND &100 THEN
  B%=q%+4+tf_datasize%
  $B%=$!qptr%:!qptr%=tf_datasize%:tf_datasize%+=LEN$B%+1
  IF qptr%!4>0 THEN
    B%=q%+4+tf_datasize%
    $B%=$(qptr%!4):qptr%!4=tf_datasize%:tf_datasize%+=LEN$B%+1
  ENDIF
ENDIF
ENDPROC
DEF PROCloadtemplates(tfile$)
LOCAL I%,f$
 REM *SPOOL buggy
REM tsloss = TRUE
IF tfile$="" THEN ENDPROC
SYS "Wimp_OpenTemplate",,tfile$
IF tfile$<>"<Wimp$Scrap>" THEN templatef$=tfile$ : REM only if load succeeded!
REM LOCAL ERROR
REM ON ERROR LOCAL:ON ERROR RESTORE:SYS "Wimp_CloseTemplate":ERROR ERR,REPORT$:ENDPROC
tf_index%=0:REPEAT
$mb_wident%="*"
 REM PRINT "0.1"
SYS "XWimp_LoadTemplate",,q%+4,curbuff%,buffer%+maxbuf%,fontcounts%,mb_wident%,tf_index% TO ,,curbuff%,,,,tf_index%;VFLAGS%
IF ( VFLAGS% MOD 2 ) = 1 THEN ERROR _init%, "Cannot load Template File"
$_data% = $mb_wident%
uio%=0:WHILE NOT(_data%?uio%=0OR_data%?uio%=13):uio%+=1:ENDWHILE:$mb_wident%=LEFT$($_data%,uio%):mb_wident%?(uio%)=13
IF tf_index%<>0 THEN PROCloadtemp($mb_wident%)
 REM PRINT "0.2"
UNTIL tf_index%=0
SYS "Wimp_CloseTemplate"
REM *** tsloss = FALSE: *CLOSE
ENDPROC
DEF PROCloadtemp(wident$)
 REM PRINT "0.1.1"
I%=FNmatchident(wident$):
IF I%<>-1 THEN ENDPROC
q%!68=spritearea%    : REM user sprite area
 REM PRINT "0.1.2"
PROCcrwindow(q%+4,wident$)
ENDPROC
------------------------------------------------------------------------------
DEF PROCdefaultwindows
SYS "Wimp_OpenTemplate",,"<FormEd$Dir>.Templates"
DIM default% (88+1*32)
PROCloadcrtemp("default",default%)
m_info%         = FNcrtemp("info")
PROCicon_write(m_info%,4,FNmsg_0("_Version")):REM Update info box version
m_workarea%     = FNcrtemp("m_workarea")
m_savetemp%     = FNcrtemp("save_temp")
REM errorbox%   = FNcrtemp("errorbox")
quitbox%        = FNcrtemp("quitbox")
browbox%        = FNcrtemp("browser")
SYS "Wimp_CloseTemplate"
mb_templates%   = FNiconaddr(m_savetemp%,1)
mb_workarea0%   = FNiconaddr(m_workarea%,9)
mb_workarea1%   = FNiconaddr(m_workarea%,10)
mb_minx%        = FNiconaddr(m_workarea%,14)
mb_miny%        = FNiconaddr(m_workarea%,15)
ENDPROC
DEF FNcrtemp(wident$)
PROCloadcrtemp(wident$,q%)
 IF wident$ = "browser" THEN _ptrtitle% = q%!72
SYS "XWimp_CreateWindow",,q% TO I%;VFLAGS%
 IF ( VFLAGS% MOD 2 ) = 1 THEN ERROR 0 , "Could not create window"
=I%
DEF PROCloadcrtemp(wident$,q%)
LOCAL I%,c%,c2%,w$
c%=curbuff%:c2%=buffer%+maxbuf%
w$=wident$+STRING$(12-LENwident$,CHR$13)
SYS "Wimp_LoadTemplate",,q%,c%,c2%,fontcounts%,w$,0 TO ,,curbuff%,,,,c%
IF c%=0 THEN SYS"XWimp_CloseTemplate":ERROR 0,"Window '"+wident$+"' not found"
q%!64=systemsprites%
IF wident$="save_temp" THEN q%!64=1
_sloss% = curbuff%
ENDPROC
DEF FNiconaddr(h%,i%)
!q%=h%:q%!4=i%:SYS "Wimp_GetIconState",,q%
IF q%!24AND&100 THEN =q%!28
ERROR 1,"Icon is not indirected"
DEF FNiconbar
LOCAL ic%
!q%=-1
q%!4=0
q%!8=0
q%!12=69
q%!16=68
q%!20=&3002
$(q%+24)="!formed"
SYS "Wimp_CreateIcon",,q% TO ic%
=ic%
------------------------------------------------------------------------------
DEF PROCobjectclosedown
 q%!12 = q%!8:SYS "Wimp_SendMessage",19,q%
 _prequit = TRUE
 PROCicon_write(quitbox%,1,FNmsg_0("Q1"))
 PROCfront(quitbox%):_RESET% = FALSE
ENDPROC
#
 REM *********************************************
 REM ************** Browser Control **************
 REM *********************************************
#
DEF PROCbuildbrowsericon(wident$,_type%)
 DIM _text% 15
 LOCAL _ptr%,_sprite%
 _ptr% = _BUF100%
 $_text% = wident$+CHR$0+CHR$13
 IF _type% = 0 THEN _sprite% = _SPRDIA% ELSE _sprite% = _SPRWIN%
 REM bit 1     - is a sprite
 REM bit 4     - v vertically centred
 REM bit 5     - filled background
 REM bit 8     - indirected
 REM bit 12-15 - icon type
 !(_ptr%+0)  = browbox%
 !(_ptr%+4)  = _biconx%
 !(_ptr%+8)  = _bicony%
 !(_ptr%+12) = _biconx% + 220:REM OLD Value '300'
 !(_ptr%+16) = _bicony% + 50
 !(_ptr%+20) = %00010111000000001010000100110011
 !(_ptr%+24) = _text%
 IF _type% = 0 THEN
  !(_ptr%+28) = _SPRDIA%
 ELSE
  !(_ptr%+28) = _SPRWIN%
 ENDIF
 !(_ptr%+32) = LEN($_text%) + LEN($_sprite%)+30:REM was + 2
 SYS "Wimp_CreateIcon",,_ptr% TO _iconhandle%
 SYS "Wimp_ForceRedraw",browbox%,_biconx%,_bicony%,_biconx%+300,_bicony% + 50
  _biconx% += 300
 IF  _biconx% > 900  THEN
  _bicony% -= 50
  _biconx%  = 10
 ENDIF
 !(_ptr%+0)  = 0
 IF _biconx% = 10 THEN !(_ptr%+4)=_bicony% ELSE !(_ptr%+4)=_bicony%
 !(_ptr%+8)  = 850
 !(_ptr%+12) = 0
 SYS "Wimp_SetExtent",browbox%,_ptr%
ENDPROC
DEF PROCbrowser_redraw
ENDPROC
#
DEF PROCadd_to_array(newstring$)
 LOCAL h%
 WHILE NOT (_wid$(h%)= "*" OR h% = nh% ):h% += 1:ENDWHILE
  IF newstring$ = "" THEN
   newstring$ = "NoIdent"+STR$_noid%
  ELSE
   _wid$(h%) = newstring$
  ENDIF
ENDPROC
#
DEF PROCchangewindowtitle (_w%,_newtitle%)
  q%!0 = _w%
  SYS "Wimp_GetWindowInfo",,q%
  _p% = !(q%+76)
  $_p% = $_newtitle%
  SYS "Wimp_ForceRedraw",-1,q%!4,(q%!16)-36,q%!12,q%!16+36
ENDPROC
#
DEF PROCshowwindow(icon%,buttons%)
 q%!0 = browbox%
 q%!4 = icon%
 IF buttons% = &04 THEN
  SYS "Wimp_GetIconState",,q%
  _p% = !(q%+28)
  REM _p%?12 = 13
  REM OSCLI ("*SPOOL zxc"):P. ?(_p%+LEN($_p%)-1):OSCLI("*SPOOL")
  IF ?(_p%+LEN($_p%)-1) =  0  THEN
   _p%?(LEN($_p%)-1) = 13
  ENDIF
  REM *SPOOL XZC
  m%  = FNequalid($_p%):_p%?(LEN($_p%))   = 0
  REM *SPOOL
  $mb_cpywin% = $_p% : $mb_renwin% = $_p%
  q%!0 = handle%(m%)
  SYS "Wimp_GetWindowState",,q%
  q%!28 = -1
  SYS "Wimp_OpenWindow",,q%
  currentwindow%=m%:handle% = m%
  currenticon%=-1
 ENDIF
  IF buttons% = &04*256 THEN PROCselection_unset
   IF buttons% = &01*256 OR buttons% = &01 THEN
    PROCselection_unseticon(icon%)
   ELSE
    q%!8  = %00000000001000000000000000000000
    q%!12 = %00000000001000000000000000000000
    q%!4  = icon%
    q%!0  = browbox%
    SYS "Wimp_SetIconState",,q%
    SYS "Wimp_GetIconState",,q%
   ENDIF
    _p% = !(q%+28):_p%?12 = 13
    IF ?(_p%+LEN($_p%)-1) =  0  THEN _p%?(LEN($_p%)-1) = 13
    _p%?(LEN($_p%)) = 0
    $mb_cpywin% = $_p% : $mb_renwin% = $_p%
    IF buttons% = &04 THEN PROCselection_unset
ENDPROC
#
DEF FNequalid(st$)
 FOR UI% = 1 TO nh%
  IF wident$(UI%) = st$ THEN =UI%
 NEXT UI%
=-1
#
DEF PROCaddchange(_t%)
LOCAL length%
 IF NOT(_altered) THEN
  length% = LEN($_t%)
  $_t% = $_t% + CHR$(32)
  $_t% = $_t% + CHR$(42)
  $_t% = $_t% + CHR$(13)
  $_t% = $_t% + CHR$(0)
  PROCchangewindowtitle(browbox%,_t%)
  _altered = TRUE
 ENDIF
ENDPROC
#
DEF PROCresetwindowdefs
 LOCAL AA%,displacement%
 FOR AA% = 0 TO nh%:
  IF NOT ( wident$(AA%) = "" ) THEN
   PROCdeletewindow(AA%)
   handle%(AA%) = -1:wident$(AA%) = ""
  ENDIF
 NEXT
 SYS "Wimp_WhichIcon",browbox%,q%,&01,&01
 WHILE NOT ( q%!displacement% = -1 )
   _temp%!0 = browbox%
   _temp%!4 = q%!displacement%
   displacement% += 4
   SYS "Wimp_DeleteIcon",,_temp%
 ENDWHILE
 q%!0  = 0
 q%!4  = -60
 q%!8  = 850
 q%!12 = 0
 SYS "Wimp_SetExtent",browbox%,q%
 $_titlestring% = "<untitled>"
 PROCchangewindowtitle(browbox%,_titlestring%)
 PROCrefreash_browser
 _biconx% = 10 : _bicony% = -50 : _altered = FALSE :
FOR I%=0TOnh%:handle%(I%)=I%-1:wident$(I%)="":_wid$(I%)="*":NEXT:handleSP%=nh%
curbuff%=_sloss%
$mb_templates% = "Templates"
ENDPROC
#
DEF PROCselection_unset
 LOCAL displacement%
 SYS "Wimp_WhichIcon",browbox%,q%,1<<21,1<<21
  WHILE NOT ( q%!displacement% = -1 )
   _temp%!8  = 0
   _temp%!12 = %00000000001000000000000000000000
   _temp%!4  = q%!displacement%
   _temp%!0  = browbox%
   SYS "Wimp_SetIconState",,_temp%
   displacement% += 4
  ENDWHILE
ENDPROC
#
DEF PROCselection_delete
 LOCAL displacement%
 SYS "Wimp_WhichIcon",browbox%,q%,1<<21,1<<21
  WHILE NOT ( q%!displacement% = -1 )
    _temp%!0 = browbox%
    _temp%!4 = q%!displacement%
   displacement%+=4
   PROCselection_removewindow(_temp%!4)
   SYS "Wimp_DeleteIcon",,_temp%
  ENDWHILE
  PROCselection_shuffle
  IF NOT(_altered) THEN
   PROCaddchange(_titlestring%)
  ENDIF
ENDPROC
#
DEF PROCselection_name
 LOCAL displacement%
  CASE FNselnum OF
   WHEN 0  : REM *** No Selection Made       ***
             $(m_browser%!(28+24*1+12)) = "Selection        "
             PROCshade(m_browser%,1)
             ENDPROC
   WHEN 1  : REM *** Single Selection Made   ***
             PROCunshade(m_selwin%,0)
             PROCunshade(m_selwin%,1)
             q%!4 = q%!0
             q%!0 = browbox%
             SYS "Wimp_GetIconState",,q%
             REM $mb_renwin% = $(!(q%+28)):$mb_cpywin% = $(!(q%+28))
             _p% = !(q%+28):_p%?(LEN($_p%)-1) = ASC("'")
             $(m_browser%!(28+24*1+12)) = "Sel.'"+$_p%
             _p%?(LEN($_p%)-1) = 0
   WHEN 42 : REM *** Multiple Selection Made ***
             q%!4 = q%!0
             q%!0 = browbox%
             SYS "Wimp_GetIconState",,q%
             $(m_browser%!(28+24*1+12)) = "Selection        "
             PROCshade(m_selwin%,0)
             PROCshade(m_selwin%,1)
   ENDCASE
ENDPROC
#
DEF PROCselection_seticon(sicon%)
 q%!0 = browbox%
 q%!4 = sicon%
 SYS "Wimp_GetIconState",,q%
   _temp%!8  = 1<<21
   _temp%!12 = %00000000001000000000000000000000
   _temp%!4  = sicon%
   _temp%!0  = browbox%
   REM $mb_renwin% = $(!(q%+28)):$mb_cpywin% = $(!(q%+28))
 SYS "Wimp_SetIconState",,_temp%
ENDPROC
#
DEF FNselnum
 LOCAL displacement%
 SYS "Wimp_WhichIcon",browbox%,q%,1<<21,1<<21
 IF  q%!displacement% = -1 THEN = 0
  displacement% += 4
 IF  q%!displacement% = -1 THEN = 1
=42
#
DEF PROCreshow_window(q%)
 SYS"Wimp_GetWindowState",,q%
 SYS"Wimp_OpenWindow",,q%
ENDPROC
#
DEF PROCreformat_string(stg%)
 LOCAL ref%
 REM *spool debug
 WHILE NOT(stg%?ref%=32) AND NOT(stg%?ref%=0) AND NOT(stg%?ref%=13)
 REM PRINT stg%?ref% " = "CHR$(stg%?ref%)
  ref%+=1
 ENDWHILE
  stg%?ref% = 13: REM *** Might replace with 13 - I did
 REM P. LEN($stg%)
ENDPROC
#
DEF FNchk_duplicates(str$)
 LOCAL dup%
 FOR dup% = 0 TO nh%:IF wident$(dup%) = str$ THEN =TRUE
 NEXT
= FALSE
#
DEF FNicon_identifier(str$)
LOCAL win%,temp$
 FOR win% = 0 TO nh%:temp$ = wident$(win%)+CHR$(0)
 IF str$ = temp$ THEN = win%
 NEXT
= -1
#
DEF PROCselection_removewindow(I%)
LOCAL rwin%,t%
 t%    = _BUF100%
 t%!4  = I%
 t%!0  = browbox%
 SYS   "Wimp_GetIconState",,t%
 _p%   = !(t%+28)
 rwin% = FNicon_identifier($_p%)
 IF rwin% = -1 THEN
  ERROR 1, "Could not link to window"
 ELSE
  PROCdeletewindow(rwin%)
 ENDIF
ENDPROC
#
DEF PROCselection_removeicon
 q%!0 = browbox%
 q%!4 = _iconhandle%
 SYS "Wimp_GetIconState",,q%
 SYS "Wimp_DeleteIcon",,q%
ENDPROC
#
DEF PROCselection_shuffle
LOCAL displacement%,arrnum%,search%,EW%,handle%,t%
t% = _BUF100%
FOR EW% = 0 TO nh%:_win%(EW%)=-1:NEXT
SYS "Wimp_WhichIcon",browbox%,q%,1<<23,0<<23
 WHILE NOT ( q%!displacement% = -1 )
  t%!0 = browbox%
  t%!4 = q%!displacement%
  SYS "Wimp_GetIconState",,t%
  arrnum% = (t%!20/-50)*3+(t%!8/300)
  _win%(arrnum%)=t%!4
  displacement%+=4
 ENDWHILE
  REM *** Shuffle Windows
    FOR arrnum% = 0 TO nh%
     IF _win%(arrnum%) = -1 THEN
      search% = arrnum%+1
      WHILE search% <= nh% AND _win%(search%) = -1:search%+=1:ENDWHILE
      IF NOT(search% >= nh%) THEN
       _win%(arrnum%) = _win%(search%)
       _win%(search%) = -1
      ENDIF
     ENDIF
    NEXT
       FOR arrnum% = 0 TO nh%
        IF NOT (_win%(arrnum%) = -1) THEN
          t%!0 = browbox%
          t%!4 = _win%(arrnum%)
          SYS "Wimp_GetIconState",,t%
          SYS "Wimp_DeleteIcon",,t%
          t%!4  = browbox%
          t%!8  = 10+((arrnum% - (arrnum%DIV3)*3))*300
          t%!12  = (arrnum%DIV3+1)*-50
          t%!16 = t%!8  + 300
          t%!20 = t%!12  + 50
          SYS "Wimp_CreateIcon",,(t%+4) TO handle%
        ENDIF
       NEXT
       q%!0  = 0
       q%!4  = t%!12-10
       q%!8  = 850
       q%!12 = 0
       SYS "Wimp_SetExtent",browbox%,q%
       _biconx% = t%!8+300:_bicony% = t%!12
       IF _biconx% > 900 THEN _biconx% = 10:_bicony% -=50
       IF _win%(0) = -1 THEN _biconx% = 10:_bicony% = -50
       PROCrefreash_browser
ENDPROC
#
DEF PROCrefreash_browser
 q%!0 = browbox%
 SYS "Wimp_GetWindowState",,q%
 SYS "Wimp_CloseWindow"   ,,q%
 SYS "Wimp_OpenWindow"    ,,q%
ENDPROC
#
DEF PROCselection_rename
LOCAL rwin%,_p%,strcpy$
 strcpy$ = $mb_renwin%
 rwin% = FNicon_identifier(strcpy$)
 IF NOT( rwin% = -1 ) THEN
  ERROR 1, "Duplicate identifiers"
 ELSE
  SYS "Wimp_WhichIcon",browbox%,q%,1<<21,1<<21
  IF NOT( q%!0 = -1 ) THEN
   q%!4 = q%!0
   q%!0 = browbox%
   SYS "Wimp_GetIconState",,q%
   REM mb_renwin%?(LEN($mb_renwin%)) = 13
   _p% = q%!28
   rwin% = FNicon_identifier($_p%)
   wident$(rwin%) = $mb_renwin%
   mb_renwin%?(LEN($mb_renwin%)+1)=13
   mb_renwin%?(LEN($mb_renwin%)) =0
   $_p% = $mb_renwin%
  ENDIF
 ENDIF
   IF NOT(_altered) THEN
    PROCaddchange(_titlestring%)
   ENDIF
 PROCrefreash_browser
ENDPROC
#
DEF PROCcopy_title ( t% )
 IF t%!56AND&100 THEN
  B% = FNworkspace ( t%!80 ):$B% = $(t%!72): t%!72 = B%
  IFt%!76>0THENB% = FNworkspace ( t%!80 ):$B% = $(t%!76): t%!76 = B%
 ENDIF
ENDPROC
#
DEF PROCcopy_icons     ( t% )
 LOCAL wq%,xcount%
  xcount% = t%!84
 WHILE NOT ( xcount% = 0 )
  wq% = 88+(32*(xcount%-1))
   IF t%!(wq%+16)AND&100 THEN
   B% = FNworkspace(t%!(wq%+28)):$B%=$(t%!(wq%+20)):t%!(wq%+20)=B%
   IFt%!24>0THENB%=FNworkspace(t%!(wq%+28)):$B%=$(t%!(wq%+24)):t%!(wq%+24)=B%
  ENDIF
  xcount% = xcount% - 1
 ENDWHILE
ENDPROC
#
DEF PROCselection_copy
LOCAL rwin%,_p%,strcpy$
  SYS "Wimp_WhichIcon",browbox%,q%,1<<21,1<<21
  IF NOT( q%!0 = -1 ) THEN
  q%!4 = q%!0
  q%!0 = browbox%
  SYS "Wimp_GetIconState",,q%
  _p% = q%!28
  rwin% = FNicon_identifier($_p%)
  IF rwin% = -1 THEN ENDPROC ELSE q%!0 = handle%(rwin%)
  SYS "Wimp_GetWindowInfo",,q%
  REM mb_cpywin%?(LEN($mb_cpywin%)+1) = 13
  REM mb_cpywin%?(LEN($mb_cpywin%))   = 0
  PROCcopy_title ( q%+4 )
  PROCcopy_icons ( q%+4 )
  PROCcrwindow   ( q%+4 , $mb_cpywin%)
 ENDIF
 IF NOT(_altered) THEN
  PROCaddchange(_titlestring%)
 ENDIF
ENDPROC
#
DEF PROCchck_handle(chandle%)
LOCAL ui%
 IF _altered THEN ENDPROC
 FOR ui% = 0 TO nh%:
  IF handle%(ui%) = chandle% AND NOT(_altered) THEN
   PROCaddchange(_titlestring%)
  ENDIF
 NEXT ui%
ENDPROC
#
DEF FNchck_newtemplate
  LOCAL count%
    FOR count% = 0 TO nh%: IF wident$(count%) <> "" THEN =FALSE
    NEXT
=TRUE
#
DEF PROCmove_xdir(RETURN xmag%,RETURN xsize%)
LOCAL ix0%,iy0%,sx%,sy%
 ix0% = q%!8
 sx%  = q%!16 - ix0%
 SYS"Wimp_GetWindowInfo",,q%
 IF xmag% > q%!52 OR (xmag%+sx%) < q%!44 THEN xmag% = ix0%
 xsize% = xmag% + sx%
ENDPROC
#
DEF PROCmove_ydir(RETURN ymag%,RETURN ysize%)
LOCAL ix0%,iy0%,sx%,sy%
 iy0% = q%!12
 sy%  = q%!20 - iy0%
 SYS"Wimp_GetWindowInfo",,q%
 IF ymag% > q%!56 OR (ymag%+sy%) < q%!48 THEN ymag% = iy0%
 ysize% = ymag% + sy%
ENDPROC
#
DEF PROCuntick(mh%,I%)
mh%!(28+24*I%)=(mh%!(28+24*I%)>>2)<<2:ENDPROC
#
DEF PROCselection_on
 SYS"Wimp_GetPointerInfo",,q%
 IF  q%!16 = -1 THEN ENDPROC
 IF NOT( FNselnum = 0) THEN ENDPROC
 SYS"Wimp_GetPointerInfo",,q%
  PROCshowwindow(q%!16,&04*256)
ENDPROC
#
DEF PROCzzzz(handle%)
 q%!0 = handle%
 SYS "Wimp_GetWindowState",,q%
  _ans% = q%!32>>>30
 IF _ans% = 0 THEN
  _ans% = q%!32AND&0C
 ELSE
  _ans% = q%!32>>>28AND&05
 ENDIF
  wicon% = FNiconwanted(wident$(currentwindow%)+CHR$0)
  REM *spool
  REM ERROR 1 , " Icon Number "+STR$(wicon%)
  IF wicon% > -1 THEN
   REM VDU7
   q%!0 = browbox%
   q%!4 = wicon%
   SYS "Wimp_GetIconState",,q%
   REM PRINT " WINDOW TYPE SET TO "_ans%
   IF _ans% = 0 THEN
    q%!32 = _SPRDIA%
   ELSE
    q%!32 = _SPRWIN%
   ENDIF
   SYS "Wimp_DeleteIcon",,q%
   q%!4 = q%!0
   SYS "Wimp_CreateIcon",,q%+4 TO _vvvvvvv%
   SYS "Wimp_ForceRedraw",browbox%,q%!8,q%!12,q%!16,q%!20
  ENDIF
ENDPROC
#
DEF FNiconwanted ( string$ )
LOCAL displacement%: DIM t% 200
REM *SPOOL ICON
REM PRINT "STRING WANT "string$" len "LEN(string$)
SYS "Wimp_WhichIcon",browbox%,t%,1,1
 IF NOT( t%!0 = -1 ) THEN
 WHILE NOT ( t%!displacement% = -1 )
  q%!0 = browbox%
  q%!4 = t%!displacement%
  SYS "Wimp_GetIconState",,q%
  REM PRINT "COMPARING "$(q%!28)" len "LEN($(q%!28))
  IF $(q%!28) = string$ THEN =displacement%/4
  REM PRINT "COMPARING "$(q%!28)" len "LEN($(q%!28))
  displacement%+=4
 ENDWHILE
 ENDIF
=-1
#
DEF PROCselection_unseticon(icon%)
 LOCAL set%
  q%!4  = icon%
  q%!0  = browbox%
  SYS "Wimp_GetIconState",,q%
 set% = q%!24 AND 1<<21
 IF set%>0 THEN set% = 0 ELSE set% = 1<<21
 q%!8  = set%
 q%!12 = 1<<21
 q%!4  = icon%
 q%!0  = browbox%
 SYS "Wimp_SetIconState",,q%
 SYS "Wimp_GetIconState",,q%
ENDPROC
#
:
REM
REM Code added by Fil
REM
DEFPROCmsg_initialise(N$)
LOCAL c%,c$,i%
c%=OPENIN(N$)
IFc%=0 ERROR 0, "Cannot find messages file"
ms_tags%=0
SYS"Hourglass_On"
WHILE NOT(EOF#c%)
 c$=GET$#c%
 IFc$<>"" THEN
  IFLEFT$(c$,1)<>"#" THEN
   IFINSTR(c$,":")<>0 ms_tags%+=1
  ENDIF
 ENDIF
ENDWHILE
IFms_tags%<>0 THEN
 DIM ms_text$(ms_tags%-1),ms_tags$(ms_tags%-1)
 PTR#c%=0
 i%=0
 WHILE NOTEOF#c%
  c$=GET$#c%
  IFc$<>"" THEN
   IFLEFT$(c$,1)<>"#" THEN
    ms_tags$(i%)=LEFT$(c$,INSTR(c$,":")-1)
    ms_text$(i%)=MID$(c$,INSTR(c$,":")+1)
    i%+=1
   ENDIF
  ENDIF
 ENDWHILE
ENDIF
CLOSE#c%
SYS"Hourglass_Off"
ENDPROC
:
DEFFNmsg_0(T$)
=FNmsg_4(T$,"","","","")
:
DEFFNmsg_1(T$,S$)
=FNmsg_4(T$,S$,"","","")
:
DEFFNmsg_2(T$,S0$,S1$)
=FNmsg_4(T$,S0$,S1$,"","")
:
DEFFNmsg_3(T$,S0$,S1$,S2$)
=FNmsg_4(T$,S0$,S1$,S2$,"")
:
DEFFNmsg_4(T$,S0$,S1$,S2$,S3$)
LOCAL i%,f%
IFms_tags%=0 THEN
 =T$
ELSE
 FORi%=0 TO ms_tags%-1
  IFT$=ms_tags$(i%) THEN
   T$=ms_text$(i%)
   f%=INSTR(T$,"%0")
   IFf%<>0 T$=LEFT$(T$,f%-1)+S0$+MID$(T$,f%+2)
   f%=INSTR(T$,"%1")
   IFf%<>0 T$=LEFT$(T$,f%-1)+S1$+MID$(T$,f%+2)
   f%=INSTR(T$,"%2")
   IFf%<>0 T$=LEFT$(T$,f%-1)+S2$+MID$(T$,f%+2)
   f%=INSTR(T$,"%3")
   IFf%<>0 T$=LEFT$(T$,f%-1)+S3$+MID$(T$,f%+2)
   i%=ms_tags%
  ENDIF
 NEXT
ENDIF
=T$
:
DEFPROCmsg_end
ENDPROC
:
DEFPROCmenu_initialise(men_ws%,men_df%)
menu_max_ws%=men_ws%:DIM menu_ws% men_ws%
menu_max_df%=men_df%:DIM menu_df% men_df%
menu_end%=menu_df%+men_df%
menu_curws%=menu_ws%
ENDPROC
:
DEFFNmenu_create(menu$)
LOCAL M%,m$,I%,menuptr%,maxx%
IF (menu_df%+28>menu_end%) ERROR 0, "Out of menu workspace - increase 2nd parameter to initialisation"
menuptr%=menu_df%
I%=0
IF LEFT$(menu$,1)="#" THEN
 I%=1
 menutitle$=FNmenu_par(menu$,",",I%)
ELSE
 menutitle$=""
ENDIF
$menuptr%=LEFT$(menutitle$,12)
menuptr%?12=7
menuptr%?13=2
menuptr%?14=7
menuptr%?15=0
menuptr%!16=196
menuptr%!20=44
menuptr%!24=0
menuptr%+=28
maxx%=LENmenutitle$-3
REPEAT
 item$=FNmenu_par(menu$,",",I%)
 PROCmenu_item(item$,maxx%,menuptr%)
UNTIL item$=""
M%=menu_df%
M%!16=(maxx%*8+6)*2
menu_df%=menuptr%
=M%
:
DEFPROCmenu_item(text$,RETURN maxx%,RETURN menuptr%)
LOCAL I%,F%,L%
IF text$="" menuptr%!-24=(menuptr%!-24)OR &80:ENDPROC
IF (menuptr%+24>menu_end%) ERROR 0, "Out of menu workspace - increase 2nd parameter to initialisation"
F%=&00
IF RIGHT$(text$,1)="#" text$=LEFT$(text$):F%+=&02:REM dotted line follows item
IF RIGHT$(text$,1)="@" text$=LEFT$(text$):F%+=&08:REM generate a menu warning
menuptr%!0=F%
menuptr%!4=-1
menuptr%!8=&07000021
IF LEFT$(text$,1)="$" THEN
 !menuptr%+=&04                                  :REM item is writeable
 text$=STRING$(12," ")
ELSE
 IF LENtext$<=12 THEN
  $(menuptr%+12)=text$
 ELSE
  I%=FNmenu_workspace(LENtext$+1):$I%=text$
  menuptr%!12=I%:menuptr%!16=-1:menuptr%!20=LENtext$+1
  menuptr%!8=menuptr%!8OR &100
 ENDIF
ENDIF
IF LENtext$>maxx% maxx%=LENtext$
menuptr%+=24
ENDPROC
:
DEFPROCmenu_attach(menu%,item%,ptr%,traverse%)
menu%+=28+item%*24
IF traverse% !menu%=!menu% OR (1<<4)
menu%!4=ptr%
ENDPROC
:
DEFPROCmenu_writeable(menu%,item%,ptr%,size%)
REM This routine just sets the width, ptr and size of the
REM specified writeable option. It must have been made
REM writeable earlier by FNmenu_create
LOCAL M%,L%
M%=0
WHILE menu%?M%<>13 AND M%<>12 M%+=1:ENDWHILE
M%-=3
L%=size%:IF L%>16 L%=16
IF L%>M% M%=L%
IFmenu%!16<(M%*8+6)*2 menu%!16=(M%*8+6)*2
menu%+=28+item%*24
menu%!8=menu%!8 OR &100
menu%!12=ptr%
menu%!16=-1
menu%!20=size%
ENDPROC
:
DEFFNmenu_par(menu$,sep$,RETURN I%)
LOCAL L%
L%=I%+1
I%=INSTR(menu$+sep$,sep$,L%)
=MID$(menu$,L%,I%-L%)
:
DEFPROCmenu_shade(menuhandle%,item%,value%)
IF -((menuhandle%!(28+8+24*item%) AND &400000)=&400000)<>value% THEN
 menuhandle%!(28+8+24*item%)=menuhandle%!(28+8+24*item%)EOR &400000
ENDIF
ENDPROC
:
DEFPROCmenu_tick(menuhandle%,item%)
menuhandle%!(28+24*item%)=menuhandle%!(28+24*item%)OR 1:REM was EOR
ENDPROC
:
DEFFNmenu_workspace(L%)
IF menu_curws%+L%>menu_ws%+menu_max_ws% ERROR 0, "Out of menu workspace - increase 1st parameter to initialisation"
menu_curws%+=L%
=menu_curws%-L%
:
DEFPROCmenu_submenu(p%,x%,y%)
SYS"Wimp_CreateSubMenu",,p%,x%,y%
ENDPROC
:
DEFPROCmenu_window(h%,x%,y%)
SYS"Wimp_CreateMenu",,h%,x%,y%
ENDPROC
:
DEFPROCmenu_close
SYS"Wimp_CreateMenu",,-1
ENDPROC
:
DEFPROCcreate_menus
PROCmenu_initialise(256,5000)
DIM ib_text% 80,ib_sprite% 12,ib_buffersize% 6,ib_validation% 80
DIM tb_text% 40,tb_sprite% 12,tb_buffersize% 6
DIM mb_fsize% 6:$mb_fsize%="30"
DIM mb_renwin% 12 , mb_cpywin%   12
DIM mb_wident% 12 , mb_newident% 12:$mb_newident% = ""+CHR$(0)
DIM mb_ixcon%  5  , mb_iycon%    5:$mb_ixcon%="0":$mb_iycon%="0"
DIM mb_renumber% 5:$mb_renumber%="0"
   m_palette%=FNmenu_create(FNmsg_0("MPal"))
   m_p1lette%=FNmenu_create(FNmsg_0("MPl1"))
       i_esg%=FNmenu_create(FNmsg_0("IESG"))
    i_button%=FNmenu_create(FNmsg_0("IBut"))
     m_fsize%=FNmenu_create(FNmsg_0("MFSz")):PROCmenu_writeable(m_fsize%,4,mb_fsize%,6)
              PROCbuild_font_menu
      i_text%=FNmenu_create(FNmsg_0("ITxt")):PROCmenu_writeable(i_text%,0,ib_text%,80)
    i_sprite%=FNmenu_create(FNmsg_0("ISpr")):PROCmenu_writeable(i_sprite%,0,ib_sprite%,12)
i_validation%=FNmenu_create(FNmsg_0("IVal")):PROCmenu_writeable(i_validation%,0,ib_validation%,80)
i_buffersize%=FNmenu_create(FNmsg_0("IBuf")):PROCmenu_writeable(i_buffersize%,0,ib_buffersize%,6)
                                             PROCmenu_attach(i_buffersize%,1,i_validation%,FALSE)
     i_flags%=FNmenu_create(FNmsg_0("IFlg")):PROCmenu_attach(i_flags%,0,i_text%,FALSE)
                                             PROCmenu_attach(i_flags%,1,i_sprite%,FALSE)
                                             PROCmenu_attach(i_flags%,6,i_font%,FALSE)
                                             PROCmenu_attach(i_flags%,8,i_buffersize%,FALSE)
                                             PROCmenu_attach(i_flags%,12,i_button%,FALSE)
                                             PROCmenu_attach(i_flags%,13,i_esg%,FALSE)
                                             PROCmenu_attach(i_flags%,14,m_palette%,FALSE)
                                             PROCmenu_attach(i_flags%,15,m_palette%,FALSE)
      t_text%=FNmenu_create(FNmsg_0("TTxt")):PROCmenu_writeable(t_text%,0,tb_text%,40)
    t_sprite%=FNmenu_create(FNmsg_0("TSpr")):PROCmenu_writeable(t_sprite%,0,tb_sprite%,12)
t_buffersize%=FNmenu_create(FNmsg_0("TBuf")):PROCmenu_writeable(t_buffersize%,0,tb_buffersize%,6)
     t_flags%=FNmenu_create(FNmsg_0("TFlg")):PROCmenu_attach(t_flags%,0,t_text%,FALSE)
                                             PROCmenu_attach(t_flags%,1,t_sprite%,FALSE)
                                             PROCmenu_attach(t_flags%,6,i_font%,FALSE)
                                             PROCmenu_attach(t_flags%,7,t_buffersize%,FALSE)
    w_scroll%=FNmenu_create(FNmsg_0("WScr"))
     w_flags%=FNmenu_create(FNmsg_0("WFlg")):PROCmenu_attach(w_flags%,0,t_flags%,FALSE)
                                             PROCmenu_attach(w_flags%,8,w_scroll%,FALSE)
                                             PROCmenu_attach(w_flags%,12,i_button%,FALSE)
                                             PROCmenu_attach(w_flags%,16,t_flags%,FALSE)
   w_colours%=FNmenu_create(FNmsg_0("WCol")):PROCmenu_attach(w_colours%,0,m_p1lette%,FALSE)
                                             PROCmenu_attach(w_colours%,1,m_palette%,FALSE)
                                             PROCmenu_attach(w_colours%,2,m_palette%,FALSE)
                                             PROCmenu_attach(w_colours%,3,m_p1lette%,FALSE)
                                             PROCmenu_attach(w_colours%,4,m_palette%,FALSE)
                                             PROCmenu_attach(w_colours%,5,m_palette%,FALSE)
                                             PROCmenu_attach(w_colours%,6,m_palette%,FALSE)
     w_ident%=FNmenu_create(FNmsg_0("WIdn")):PROCmenu_writeable(w_ident%,0,mb_wident%,12)
  i_renumber%=FNmenu_create(FNmsg_0("IRen")):PROCmenu_writeable(i_renumber%,0,mb_renumber%,5)
      i_copy%=FNmenu_create(FNmsg_0("ICop"))
    i_xcoord%=FNmenu_create(FNmsg_0("IXCo")):PROCmenu_writeable(i_xcoord%,0,mb_ixcon%,5)
    i_ycoord%=FNmenu_create(FNmsg_0("IYCo")):PROCmenu_writeable(i_ycoord%,0,mb_iycon%,5)
      i_move%=FNmenu_create(FNmsg_0("IMov")):PROCmenu_attach(i_move%,4,i_xcoord%,FALSE)
                                             PROCmenu_attach(i_move%,5,i_ycoord%,FALSE)
   w_general%=FNmenu_create(FNmsg_0("WGen")):PROCmenu_attach(w_general%,1,i_flags%,FALSE)
                                             PROCmenu_attach(w_general%,2,i_renumber%,FALSE)
                                             PROCmenu_attach(w_general%,3,i_copy%,FALSE)
                                             PROCmenu_attach(w_general%,4,i_move%,FALSE)
                                             PROCmenu_attach(w_general%,6,w_flags%,FALSE)
                                             PROCmenu_attach(w_general%,7,w_colours%,FALSE)
                                             PROCmenu_attach(w_general%,8,m_workarea%,FALSE)
    m_ident%=FNmenu_create(FNmsg_0("WIdt")): PROCmenu_attach(w_general%,9,m_ident%,FALSE)
    mainmenu%=FNmenu_create(FNmsg_0("MMnu")):PROCmenu_attach(mainmenu%,0,m_info%,FALSE)
    m_cpywin%=FNmenu_create(FNmsg_0("MCpy")):PROCmenu_writeable(m_cpywin%,0,mb_cpywin%,12)
    m_renwin%=FNmenu_create(FNmsg_0("MRen")):PROCmenu_writeable(m_renwin%,0,mb_renwin%,12)
    m_wident%=FNmenu_create(FNmsg_0("MIdn")):PROCmenu_writeable(m_wident%,0,mb_newident%,12)
    m_selwin%=FNmenu_create(FNmsg_0("MSel")):PROCmenu_attach(m_selwin%,0,m_cpywin%,FALSE)
                                             PROCmenu_attach(m_selwin%,1,m_renwin%,FALSE)
   m_browser%=FNmenu_create(FNmsg_0("MBrs")):PROCmenu_attach(m_browser%,0,m_savetemp%,FALSE)
                                             PROCmenu_attach(m_browser%,1,m_selwin%,FALSE)
                                             PROCmenu_attach(m_browser%,2,m_wident%,FALSE)
ENDPROC
:
DEFPROCbuild_font_menu
LOCAL i%,j%,k%,m%,s$
REPEAT
 SYS"Font_ListFonts",,q%,i%,-1 TO ,,i%
 IFi%<>-1 THEN
  j%+=1
  IFLEN($q%)>m% m%=LEN($q%)
 ENDIF
UNTIL i%=-1
IF j% = 0 THEN _fonttra% = FALSE ELSE _fonttra% = TRUE
DIM i_font% 28+j%*24
$i_font%="Fonts"
i_font%?12=7
i_font%?13=2
i_font%?14=7
i_font%?15=0
i_font%!16=(m%*8+6)*2
i_font%!20=44
i_font%!24=0
i%=i_font%+28
j%=0
m%=0
REPEAT
 SYS"Font_ListFonts",,q%,j%,-1 TO ,,j%
 IFj%<>-1 THEN
  !i%=0
  i%!4=-1
  i%!8=&07000121
  s$=$q%
  DIM k% LEN(s$)+1
  $k%=s$
  i%!12=k%
  i%!16=-1
  i%!20=LEN(s$)+1
  PROCmenu_attach(i_font%,m%,m_fsize%,FALSE)
  m%+=1
  i%+=24
 ENDIF
UNTIL j%=-1
i%!-24=&80:REM mark the last one!
ENDPROC
:
DEFPROCicon_write(a%,b%,s$)
!q%=a%
q%!4=b%
SYS"Wimp_GetIconState",,q%
$(q%!28)=s$
q%!8=0:q%!12=0
SYS"Wimp_SetIconState",,q%
ENDPROC
:
DEF PROCsoftreset
 PROCicon_write(quitbox%,1,FNmsg_0("Q2"))
 _RESET% = TRUE
 PROCfront(quitbox%)
ENDPROC
