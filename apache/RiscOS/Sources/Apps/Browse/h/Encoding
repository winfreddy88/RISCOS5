/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    Encoding.h                                        */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Routines to handle the encoding menu.             */
/*                                                            */
/* Author:  K.J.Bracey.                                       */
/*                                                            */
/* History: 05-Sep-1997 (KJB): Created.                       */
/*          10-Apr-2000 (ADH): 64-wide comments adopted.      */
/**************************************************************/

#ifndef Browser_Encoding__
  #define Browser_Encoding__

  #include <kernel.h>
  #include <tboxlibs/toolbox.h>

  #include "Global.h"

  /* Function prototypes */

  int               encoding_select               (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int               encoding_from_document_select (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int               encoding_show_menu            (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);

  void              encoding_changed_by_meta      (int encoding, void * handle);

  void              encoding_update_menus         (browser_data * d);
  void              encoding_prepare_menu         (ObjectId o, encoding_priority encoding_priority, int encoding);

  int               encoding_get_encoding_item    (int encoding, ObjectId * encobjid, ComponentId * enccompid);

  ObjectId          encoding_get_menuid           (void);

  _kernel_oserror * encoding_init                 (void);

#endif /* Browser_Encoding__ */
