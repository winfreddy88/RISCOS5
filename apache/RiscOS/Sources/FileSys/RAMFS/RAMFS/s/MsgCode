; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; >MsgCode

        TTL     "Message file handling code"

; copy_error_one
; --------------
; Translate an error block, with one substituted parameter.
; Entry: R0 = error block containing the token
;        R1 = %0 parameter to substitute
; Exit : R0 = translated error block or another error (token no found etc.)
;        VS
copy_error_one
        Entry   "r2-r7"
        BL      open_message_file               ; Ensure file is open
        EXIT    VS                              ; Return the error

        MOV     r4, r1                          ; Move input %0
        ADR     r1, message_file_block          ; Messages file handle
        MOV     r2, #0                          ; Use MessageTrans buffer
        MOV     r5, #0                          ; No %1
        MOV     r6, #0                          ; No %2
        MOV     r7, #0                          ; No %3
        SWI     XMessageTrans_ErrorLookup       ; Always sets the V flag
        MOV     r1, r4                          ; Preserve input r1
        EXIT

message_filename
        DCB     "Resources:$.Resources.RAMFS.Messages", 0
        ALIGN

; open_message_file
; -----------------
; Open the messages file if it is closed.
; Entry: nothing
; Exit : R0 = pointer to error block if VS
open_message_file
        Entry   "r0-r2"
        LDR     r1, message_file_open
        TEQ     r1, #0                          ; Check the open flag
        EXIT    NE                              ; Return - it is open

        ADR     r0, message_file_block          ; Messages file handle
        ADR     r1, message_filename            ; Messages filename
        MOV     r2, #0                          ; Buffer in RMA/access direct
        SWI     XMessageTrans_OpenFile
        STRVS   r0, [sp]                        ; Return the error
        EXIT    VS

        MOV     r1, #1
        STR     r1, message_file_open           ; Flag the file as open
        EXIT

        END
