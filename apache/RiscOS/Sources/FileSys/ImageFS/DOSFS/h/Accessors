/* Copyright 2018 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef ACCESSORS_H
#define ACCESSORS_H

#include <stdint.h>
#include <stdbool.h>
#include "kernel.h"

#include "DOSFS.h"
#include "ADFSshape.h"

/* Flags */
#define ACC_READ 0
#define ACC_WRITE 1
#define ACC_USE_CACHE 2

/* Struct used to abstract over accessing the underlying file */
typedef struct image_accessor {
  /* Function pointer for reading/writing data from the underlying file */
  _kernel_oserror *(*readwrite)(uint64_t addr,uint32_t len,void *buf,int flags,struct image_accessor *ctx);
} image_accessor_t;

#define image_readwrite(addr,len,buf,flags,ctx) (((ctx)->readwrite)(addr,len,buf,flags,ctx))

typedef struct {
  image_accessor_t a;
  int fshand;
  uint32_t size;
} image_accessor_file;

extern image_accessor_file new_image_accessor_file(int fshand);

typedef struct {
  image_accessor_t a;
  ADFS_drecord *dr;
  int sector_cache_handle;
  int filecore_pw;
} image_accessor_disc;

extern image_accessor_disc new_image_accessor_disc(ADFS_drecord *dr,int sector_cache_handle,int filecore_pw);
  

#endif
