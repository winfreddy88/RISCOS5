; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; >df
;
; Disassembled by SID on Wed,09 Mar 2011.01:38:34
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Services


        AREA    |Asm$$Code|, CODE, READONLY, PIC


; ******************************************************************************
;
; <- Main entry point
;
Module_BaseAddr                                         ; Address &0, referenced once
        B       skip_it
        DCD     &79766748
        DCD     &216C6776                               ; =ROT13("Utility!")
        DCD     data - Module_BaseAddr
        DCD     0
        DCD     32
skip_it
        Push    "R2,R14"
        BL      subroutine_1
        MOV     R0,R12
        LDRB    R2,[R1,#0]
        CMP     R2,#&3A                                 ; =":"
        BEQ     skip_1
loop_1                                                  ; Address &18, referenced once
        LDRB    R2,[R1],#1
        STRB    R2,[R0],#1
        CMP     R2,#&20                                 ; =" "
        MOVLT   R0,R12
        BLT     skip_1
        CMP     R2,#&3A                                 ; =":"
        BNE     loop_1
skip_1                                                  ; Address &34, referenced twice
        ADR     R2,subroutine
loop_2                                                  ; Address &38, referenced once
        LDRB    R3,[R2],#1
        STRB    R3,[R0],#1
        CMP     R3,#&0D                                 ; =13
        BNE     loop_2
        LDRB    R3,[R1,#0]
        CMP     R3,#&3A                                 ; =":"
        BNE     skip
        MOV     R3,#&20                                 ; =" "
        SUB     R0,R0,#1
        STRB    R3,[R0],#1
loop_3                                                  ; Address &60, referenced once
        LDRB    R3,[R1],#1
        STRB    R3,[R0],#1
        CMP     R3,#&20                                 ; =" "
        BGE     loop_3
skip                                                    ; Address &70, referenced once
        MOV     R1,#0
        STRB    R1,[R0,#-1]
        MOV     R0,R12
        SWI     XOS_CLI
        Pull    "R2,PC"

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine                                              ; Address &84, referenced once
        DCB     "free", 13
        ALIGN

; ******************************************************************************
;
; Subroutine (e.g. called with BL)
;
subroutine_1                                            ; Address &8C, referenced once
        Push    "R2,R14"
loop                                                    ; Address &90, referenced once
        LDRB    R2,[R1,#0]
        CMP     R2,#&20                                 ; =" "
        CMPNE   R2,#8
        Pull    "R2,PC", NE                             ; Warning: Conditional LDM/STM slow on StrongARM and XScale
        ADD     R1,R1,#1
        B       loop
string_ARM_TLA_01f                                      ; Address &A8, not referenced
        DCB     "ARM TLA [0.1f]", 0
        ALIGN
        DCD     &EFFAE148
        DCB     "32OK"
data                                                    ; Address &BC, not referenced

        END
