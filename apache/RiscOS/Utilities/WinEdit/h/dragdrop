/* Copyright 2003 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*-*-C-*-
 *
 * Drag-n-drop header
 */


typedef struct
{
    unsigned int dragflags;            /* as passed to dragdrop_start */
    int *filetypes;                    /* as passed to dragdrop_start */
    int claimant;                      /* task handle of claimant, -1 for none */
    unsigned int claimantsflags;       /* only if claimant != -1 */
    int claimantsref;                  /* only if claimant != -1 */
    int *claimantstypes;               /* only if claimant != -1 */
    PointerInfoRec mouse;
} DragDropCallbackRec, *DragDropCallbackPtr;

typedef error * (*DragDropCallback)(void *, DragDropCallbackPtr);

extern error * dragdrop_start (RectPtr bbox,            /* screen-relative, in OS Units */
                               Bool truesz,             /* TRUE -> size of bbox is data's real size */
                               unsigned int dragflags,  /* as for Message_Dragging */
                               int *filetypes,          /* -1 terminated */
                               DragDropCallback cback,
                               void *closure);
extern int dragdrop_claimref (void);
extern int dragdrop_claimwin (void);
extern error * dragdrop_cancel (void);
extern error * dragdrop_message_dragging (MessageDraggingPtr msg);
extern Bool dragdrop_scroll (WindowPtr win, PointPtr position, Bool *removeptr);
