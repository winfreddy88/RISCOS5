/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <errno.h>

/* Simple CRC checking program.  Used for testing bigsplit2.
 * Although the algorithm is slow, it is small, and close to
 * the kernel source.
 */

int main(int argc,char **argv) {
  FILE *f;
  unsigned int crc[4]={0,0,0,0},x;
  int check16=0;
  int i=0,j,c;
  
  if(argc!=2) {
    fprintf(stderr,"Usage: %s <image>\n",argv[0]);
    return 1;
  };
  f=fopen(argv[1],"rb");
  if(!f) {
    fprintf(stderr,"%s: Could not open %s\n",argv[0],argv[1]);
    return 1;
  };
  while(1) {
    if((c=fgetc(f))==EOF) {
      if(ferror(f)) {
        fprintf(stderr,"%s: Error reading %s: %s\n",argv[0],argv[1],
        		strerror(errno));
        return 1;
      };
      break;
    };
    x=crc[i&3]^c;
    for(j=0;j<8;j++)
      x=(x>>1)^(x&1?0xA001:0);
    crc[i&3]=x;
    x=check16^c;
    for(j=0;j<8;j++)
      x=(x>>1)^(x&1?0xA001:0);
    check16=x;
    i++;
  };
  for(j=0;j<4;j++)
    printf("crc[%i]=%.4x\n",j,crc[j]);
  printf("crc16=%.4x\n",check16);
}
