/*
 * Copyright (c) 2017, RISC OS Open Ltd
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#include <kernel.h>
#include <swis.h>
#include "sys.h"

/* read numeric filetype */
unsigned int ftype(char *file)
{
  return _swi(OS_File,_INR(0,1)|_RETURN(6),23,file);
}

/* return 0 if object does not exist
          1 if a file
          2 if a directory
          3 if an image file */
int exist(char *file)
{
  return _swi(OS_File,_INR(0,1)|_RETURN(0),23,file);
}

/* compare filestamps */
int iflater(char *filea, char *fileb)
{
  unsigned int loada,execa,loadb,execb;
  if (_swi(OS_File,_INR(0,1)|_OUTR(2,3)|_RETURN(0),23,filea,&loada,&execa) != 1)
  {
    return -1;
  }
  if (_swi(OS_File,_INR(0,1)|_OUTR(2,3)|_RETURN(0),23,fileb,&loadb,&execb) != 1)
  {
    return -1;
  }
  if (loadb != loada)
  {
    return (loadb > loada);
  }
  return (execb >= execa);
}
