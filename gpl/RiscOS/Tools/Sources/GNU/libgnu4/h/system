/* system.h -- system-dependent definitions; RISC OS implementation
   Copyright (C) 1999 Free Software Foundation, Inc.

   This library is free software; you can redistribute it and/or modify it
   under the terms of the GNU Library General Public License as published by
   the Free Software Foundation; either version 2, or (at your option) any
   later version.

   This library is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
   for more details.

   You should have received a copy of the GNU Library General Public License
   along with this library; if not, write to the Free Software Foundation,
   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

/* Written by Darren Salt <ds@youmustbejoking.demon.co.uk>, using some
   material from other sources.  */

#ifndef __system_ro_h
#define __system_ro_h

/* General #includes.  */

#include <kernel.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <signal.h>
#include <errno.h>
#include <setjmp.h>
#include <ctype.h>
#include <locale.h>
#include <limits.h>
#include <stdbool.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdint.h>

/* A few typedefs.  */

#ifndef RETSIGTYPE
#define RETSIGTYPE void
#endif

/* Say that various things are available.  */

#define STDC_HEADERS	1

#define HAVE_ALLOCA_H	1
#define HAVE_ASSERT_H	1
#define HAVE_CONFIG_H	1
#define HAVE_CTYPE_H	1
#define HAVE_ERRNO_H	1
#define HAVE_FLOAT_H	1
#define HAVE_INTTYPES_H	1
#define HAVE_KERNEL_H	1
#define HAVE_LIMITS_H	1
#define HAVE_LOCALE_H	1
#define HAVE_MATH_H	1
#define HAVE_SETJMP_H	1
#define HAVE_SIGNAL_H	1
#define HAVE_STDARG_H	1
#define HAVE_STDBOOL_H	1
#define HAVE_STDDEF_H	1
#define HAVE_STDIO_H	1
#define HAVE_STDLIB_H	1
#define HAVE_STRING_H	1
#define HAVE_TIME_H	1
#define HAVE_UNISTD_H	1
#define HAVE_VARARGS_H  1

#define HAVE_FLOOR	1
#define HAVE_GETCWD	1
#define HAVE_ISATTY	1
#define HAVE_MKDIR	1
#define HAVE_MODF	1
#define HAVE_SETLOCALE	1
#define HAVE_STRERROR	1
#define HAVE_TMPNAM	1
#define HAVE_VPRINTF	1
#define HAVE_STRCHR	1

#define HAVE_RINT	0

#define HAVE_DECL_GETENV     1
#define HAVE_DECL_MALLOC     1

#define HAVE_DECL_STRERROR_R 1

#define ATTRIBUTE_UNUSED


/* Tab expansion for when stdout is not redirected.  */

#define CHECK_TAB_EXPAND(tab) \
  { \
    if (isatty(fileno(stdout))) \
      tab = 1; \
  }

/* Some general #defines.  */

#define STREQ(x,y)	(!strcmp ((x),(y)))

#define MIN(x,y) ((x)<(y) ? (x) : (y))
#define MAX(x,y) ((x)>(y) ? (x) : (y))

/* General functions.  */

extern char *strdup(const char *);
extern char *xstrdup(const char *);
extern char *stpcpy(char *, const char *);
extern void xexit (int);
extern char *substring (const char *, const char *);

#include "xalloc.h"

#define safe_read(x,y,z) read(x,y,z)
#define full_write(x,y,z) write(x,y,z)


/* Factor out some of the common --help and --version processing code.  */

#define GETOPT_HELP_CHAR 250
#define GETOPT_VERSION_CHAR 251

#define GETOPT_HELP_OPTION_DECL \
  "help", no_argument, 0, GETOPT_HELP_CHAR
#define GETOPT_VERSION_OPTION_DECL \
  "version", no_argument, 0, GETOPT_VERSION_CHAR

#define case_GETOPT_HELP_CHAR			\
  case GETOPT_HELP_CHAR:			\
    usage (EXIT_SUCCESS);			\
    break;

#include "closeout.h"
#include "version-etc.h"

#define case_GETOPT_VERSION_CHAR(Program_name, Authors)			\
  case GETOPT_VERSION_CHAR:						\
    version_etc (stdout, Program_name, GNU_PACKAGE, VERSION, Authors);	\
    close_stdout ();							\
    exit (EXIT_SUCCESS);						\
    break;


/* File stuff.  */

#define OFF_T_MAX (TYPE_MAXIMUM(off_t))

#define DEV_BSIZE 4096

#define ST_BLKSIZE(statbuf) DEV_BSIZE

#define SETVBUF(a,b,c,d) setvbuf ((a), (b), (c), (d))

/* Text/binary mode shouldn't matter on RISC OS. I hope! */
#define SET_BINARY(a) (void) 0
#define SET_BINARY2(a,b) (void) 0
#ifndef O_BINARY
#define O_BINARY 0
#endif

#define FILESYSTEM_PREFIX_LEN(x) 0

/* Character set.  */

#define IN_CTYPE_DOMAIN(c) 1

#define ISBLANK(c) ((c) == ' ' || (c) == '\t')
#define ISGRAPH(c) (isgraph (c))

#define ISPRINT(c) (isprint (c))
#define ISALNUM(c) (isalnum (c))
#define ISALPHA(c) (isalpha (c))
#define ISCNTRL(c) (iscntrl (c))
#define ISLOWER(c) (islower (c))
#define ISPUNCT(c) (ispunct (c))
#define ISSPACE(c) (isspace (c))
#define ISUPPER(c) (isupper (c))
#define ISXDIGIT(c) (isxdigit (c))
#define ISDIGIT_LOCALE(c) (isdigit (c))
#define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)

#define TOLOWER(c) (tolower (c))
#define TOUPPER(c) (toupper (c))


/* Take care of NLS matters.  */

#if ENABLE_NLS
# include <libintl.h>
#else
# undef bindtextdomain
# define bindtextdomain(Domain, Directory) /* empty */
# undef textdomain
# define textdomain(Domain) /* empty */
# define gettext(Text) Text
#endif
#ifndef _
#define _(Text) gettext(Text)
#endif
#ifndef N_
#define N_(Text) Text
#endif


/* Multibyte character -> singlebyte character */

#define mbswidth(str,flags) strlen (str)


/* Other bits */

#define TYPE_SIGNED(t) (! ((t) 0 < (t) -1))
#define TYPE_MINIMUM(t) ((t) (TYPE_SIGNED (t) \
			      ? ~ (t) 0 << (sizeof (t) * CHAR_BIT - 1) : (t) 0))
#define TYPE_MAXIMUM(t) (~ (t) 0 - TYPE_MINIMUM (t))

#define INT_STRLEN_BOUND(t) ((sizeof (t) * CHAR_BIT - 1) * 302 / 1000 + 2)

#ifdef lint
# define IF_LINT(Code) Code
#else
# define IF_LINT(Code) /* empty */
#endif

#endif
