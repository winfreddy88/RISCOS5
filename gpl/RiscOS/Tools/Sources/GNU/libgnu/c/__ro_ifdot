/* __ro_ifdot.c
   Support for movefile() and copyfile().
   Copyright (C) 1999 Darren Salt.
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions are
   met:
   1. Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
   2. Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
   3. All advertising materials mentioning features or use of this software
      must display the following acknowledgement:
        This product includes software developed by Darren Salt.
   4. The name of the author may not be used to endorse or promote products
      derived from this software without specific prior written permission.

   This software is provided by the author "as is" and any express or implied
   warranties including, but not limited to, the implied warranties of
   merchantability and fitness for a particular purpose are disclaimed. in no
   event shall the author be liable for any direct, indirect, incidental,
   special, exemplary, or consequential damages (including, but not limited
   to, procurement of substitute goods or services; loss of use, data, or
   profits; or business interruption) however caused and on any theory of
   liability, whether in contract, strict liability, or tort (including
   negligence or otherwise) arising in any way out of the use of this
   software, even if advised of the possibility of such damage.
 */

/* Written by Darren Salt <ds@youmustbejoking.demon.co.uk>.  */

#include <string.h>
#include <stdlib.h>
#include <kernel.h>
#include "system.h"
#include "ro_file.h"

extern _kernel_oserror *_swix (int, unsigned int,...);
const char *fileno_to_name (int fd);


/* Ensure that directories in the given filename exist.
   The part after the last dot is the leafname; this is ignored.
   If the name doesn't contain a dot, just return.  */
int
__ro_ifdot (const char *name)
{
  if (strrchr (name, '.'))
    {
      int e;
      const _kernel_oserror *err;
      char *x = xstrdup (name);
      *strrchr (x, '.') = '\0';
      err = _swix (8, 3 | 1 << 31, 17, x, &e);
      free (x);
      if (err)
	return __ro_return_os_error (err);
      if ((e & 2) == 0)
	{
	  errno = ENOENT;
	  return 1;
	}
    }
  return 0;
}
