;  xstrdup.s -- xstrdup()
;  Copyright (C) 1999 Darren Salt
;  All rights reserved.

;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions are
;  met:
;  1. Redistributions of source code must retain the above copyright notice,
;     this list of conditions and the following disclaimer.
;  2. Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
;  3. All advertising materials mentioning features or use of this software
;     must display the following acknowledgement:
;       This product includes software developed by Darren Salt.
;  4. The name of the author may not be used to endorse or promote products
;     derived from this software without specific prior written permission.

;  This software is provided by the author "as is" and any express or implied
;  warranties including, but not limited to, the implied warranties of
;  merchantability and fitness for a particular purpose are disclaimed. in no
;  event shall the author be liable for any direct, indirect, incidental,
;  special, exemplary, or consequential damages (including, but not limited
;  to, procurement of substitute goods or services; loss of use, data, or
;  profits; or business interruption) however caused and on any theory of
;  liability, whether in contract, strict liability, or tort (including
;  negligence or otherwise) arising in any way out of the use of this
;  software, even if advised of the possibility of such damage.

;  Written by Darren Salt <ds@youmustbejoking.demon.co.uk>.

	GET	s.~include

; char *xstrdup(const char *) -- return a newly allocated copy of a string

	AREA	|Asm$$Code|, CODE, READONLY

	EXPORT	xstrdup

	IMPORT	xmalloc
	IMPORT	strlen
	IMPORT	strcpy
	IMPORT	fprintf
	IMPORT	exit

	IMPORT	__iob
	IMPORT	program_name, WEAK

	=	"xstrdup",0
	&	&FF000008
xstrdup	FNJSRA	"v1"
	MOV	v1,a1
	BL	strlen
	ADD	a1,a1,#1
	BL	xmalloc
	MOV	a2,v1
	MOVS	v1,a1
	BEQ	fail
	BL	strcpy
	MOV	a1,v1
	FNRTSA
fail	LDR	a1,=__iob+&28 ; stderr
	LDR	a3,=program_name
	TEQ	a3,#0
	ADRNE	a2,nomem
	ADREQ	a2,nomem_noname
	BL	fprintf
	FNPULLA
	MOV	a1,#1
	B	exit

nomem		= "%s: "
nomem_noname	= "xstrdup: out of memory", 0
	ALIGN


	END
