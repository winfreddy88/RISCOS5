;  tmpnam.s
;  zp_tmpnam(), zp_tmpfile()
;    - temporary filename/file, won't crash with protected zero page
;  zp_tmpread()
;    - return the filename for a given temporary file's FILE block
;  Copyright (C) 1999 Darren Salt
;  All rights reserved.

;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions are
;  met:
;  1. Redistributions of source code must retain the above copyright notice,
;     this list of conditions and the following disclaimer.
;  2. Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
;  3. All advertising materials mentioning features or use of this software
;     must display the following acknowledgement:
;       This product includes software developed by Darren Salt.
;  4. The name of the author may not be used to endorse or promote products
;     derived from this software without specific prior written permission.

;  This software is provided by the author "as is" and any express or implied
;  warranties including, but not limited to, the implied warranties of
;  merchantability and fitness for a particular purpose are disclaimed. in no
;  event shall the author be liable for any direct, indirect, incidental,
;  special, exemplary, or consequential damages (including, but not limited
;  to, procurement of substitute goods or services; loss of use, data, or
;  profits; or business interruption) however caused and on any theory of
;  liability, whether in contract, strict liability, or tort (including
;  negligence or otherwise) arising in any way out of the use of this
;  software, even if advised of the possibility of such damage.

;  Written by Darren Salt <ds@youmustbejoking.demon.co.uk>.

	GET	s.~include
	GET	hdr.system

	IMPORT	strrchr
	IMPORT	sprintf
	IMPORT	fopen


	AREA	|C$$code_1|, CODE, READONLY

; const char *zp_tmpnam(char *)
	EXPORT	zp_tmpnam
	HEAD	"zp_tmpnam"
zp_tmpnam
	FNJSRA	"v1,v2"
	MOV	v1,a1
	BL	get_id
	MOV	a3,a1
	MOVS	a1,v1
	LDREQ	a1,=name
	LDR	a2,=format
	BL	sprintf
	MOVS	a1,v1
	LDREQ	a1,=name
	FNRTSA


	AREA	|C$$code_2|, CODE, READONLY

; FILE *zp_tmpfile(void)
	EXPORT	zp_tmpfile
	HEAD	"zp_tmpfile"
zp_tmpfile
	FNJSRA	"v1,v2"
	BL	get_id
	MOV	a3,a1
	MOV	v1,a1
	LDR	a1,=name
	LDR	a2,=format
	BL	sprintf
	LDR	a1,=name
	LDR	a2,=faccess
	BL	fopen
	TEQ	a1,#0		; need to mark as temporary (fclose deletes)
	LDRNE	a2,[a1,#12] ; FILE->__flag
	ORRNE	a2,a2,#&AC000001
	ORRNE	a2,a2,#&01800000
	STRNE	a2,[a1,#12]
	STRNE	v1,[a1,#32] ; FILE->__signature
	FNRTSA


	AREA	|C$$code_3|, CODE, READONLY

; const char *zp_tmpread(FILE *)
	EXPORT	zp_tmpread
	HEAD	"zp_tmpread"
zp_tmpread
	FNJSRA
	LDR	a3,[a1,#32] ; FILE->__signature
	LDR	a1,=name
	LDR	a2,=format
	BL	sprintf
	LDR	a1,=name
	FNRTSA


	AREA	|C$$code_4|, CODE, READONLY

get_id	MOV	a4,lr
	MRS	v2,cpsr
	SWI	&20016 ; XOS_EnterOS
	MOV	a2,#0
	LDR	a1,[a2,#&FE8]!
	ADD	a3,a1,#1
	STR	a3,[a2]
	TEQ	pc,pc
	MOVEQS	pc,a4	; back to USR_26
	MSR	cpsr_c,v2 ; or possibly USR_32
	MOV	a1,a1
	MOV	pc,a4

format	=	"<Wimp$ScrapDir>.x%08X",0
faccess	=	"wb",0
	ALIGN


	AREA	|C$$data|, DATA

id	&	0
name	%	28
	ALIGN

	END
