r1	RN	1
r2	RN	2
r3	RN	3
r4	RN	4
r5	RN	5
r6	RN	6
r7	RN	7
r8	RN	8
r9	RN	9
sl	RN	10
fp	RN	11
ip	RN	12
sp	RN	13
lr	RN	14
pc	RN	15

	GBLS	sF
	GBLS	sH
	[ :LNOT::DEF:APCS32
sF	SETS	"S"
sH	SETS	"^"
	]

	GBLS StackedRegs
	GBLS StackedType

; start of sub (non-APCS)

	MACRO
$la	FNJSR	$a
StackedRegs SETS "$a"
StackedType SETS ""
$la
	[ StackedRegs=""
	STMFD	 sp!,{lr}
	|
	STMFD	sp!,{$StackedRegs,lr}
	]
	MEND

; start of sub (APCS)

	MACRO
$la	FNJSRA	$a
StackedRegs SETS "$a"
StackedType SETS "A"
$la
	MOV	ip,sp
	[ StackedRegs=""
	STMDB	 sp!,{fp,ip,lr,pc}
	|
	STMDB	sp!,{$StackedRegs,fp,ip,lr,pc}
	]
	SUB	fp,ip,#4
	MEND

; end of sub (nothing stacked)

	MACRO
$la	FNRET	$cc
$la	MOV$cc$sF pc,lr
	MEND

; end of sub (non-APCS)

	MACRO
$la	FNRTS	$cc
	[ StackedType <> ""
	ERROR
	]
$la
	[ StackedRegs=""
	LDM$cc.FD sp!,{pc}$sH
	|
	LDM$cc.FD sp!,{$StackedRegs,pc}$sH
	]
	MEND

; end of sub (APCS)

	MACRO
$la	FNRTSA	$cc
	[ StackedType <> "A"
	ERROR
	]
$la
	[ StackedRegs=""
	LDM$cc.DB fp,{fp,sp,pc}$sH
	|
	LDM$cc.DB fp,{$StackedRegs,fp,sp,pc}$sH
	]
	MEND

; end of sub (non-APCS) for tail-call

	MACRO
$la	FNPULL	$cc
	[ StackedType <> ""
	ERROR
	]
$la
	[ StackedRegs=""
	LDM$cc.FD sp!,{lr}
	|
	LDM$cc.FD sp!,{$StackedRegs,lr}
	]
	MEND

; end of sub (APCS) for tail-call

	MACRO
$la	FNPULLA	$cc
	[ StackedType <> "A"
	ERROR
	]
$la
	[ StackedRegs=""
	LDM$cc.DB fp,{fp,sp,lr}
	|
	LDM$cc.DB fp,{$StackedRegs,fp,sp,lr}
	]
	MEND

	END
