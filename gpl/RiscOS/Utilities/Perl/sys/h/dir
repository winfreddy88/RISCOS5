/* From unixlib/types.h */

#include <stddef.h> /* for size_t */
typedef unsigned int __u_int;
typedef unsigned int __ino_t;	/* Type of file serial numbers.  */
typedef long int __off_t;	/* Type of file sizes and offsets.  */
typedef	unsigned int __u_int32_t;

/* From unixlib/dirent.h */

struct dirent
{
  __ino_t	d_fileno;		/* file number of entry */
  size_t	d_namlen;		/* length of d_name */
  unsigned char d_type;			/* file type, possibly unknown */

  /* FIXME:  Should be a macro constant, but causing difficulties
     with namespace at the moment.  */
  char		d_name[256];	/* name */
};

typedef struct __dir_stream DIR;

typedef struct
{
  __u_int32_t load_address;
  __u_int32_t exec_address;
  __u_int32_t length;
  __u_int32_t file_attrib;
  __u_int32_t obj_type;
  const char obj_name[1];
} __os_gbpb_10;

struct __dir_stream
{
  unsigned int __magic; /* magic number to protect our streams */
  DIR *next;
  DIR *suffix; /* used when doing reverse suffix dir mapping.  */
  __off_t dd_suf_off; /* start offset used in suffix dir.  */

  char *dd_name_can; /* canonicalised name (riscos format) */

  __off_t dd_off; /* offset of next read (used for seeking) */
  __off_t gbpb_off; /* offset used for os_gbpb */
  __os_gbpb_10 *dir_cache; /* pointer to a cache of directory filenames */
  __os_gbpb_10 *dir_cache_index; /* index in that cache for the next file  */
  __u_int do_read; /* zero if we need to fill the directory cache */

  struct dirent dirent; /* last directory entry read using readdir */
};
