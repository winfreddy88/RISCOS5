/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License (the "Licence").
 * You may not use this file except in compliance with the Licence.
 *
 * You can obtain a copy of the licence at
 * cddl/RiscOS/Sources/FileSys/ADFS/ADFS/LICENCE.
 * See the Licence for the specific language governing permissions
 * and limitations under the Licence.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the Licence file. If applicable, add the
 * following below this CDDL HEADER, with the fields enclosed by
 * brackets "[]" replaced with your own identifying information:
 * Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */
/*
 * Copyright 2015 Ben Avison.  All rights reserved.
 * Use is subject to license terms.
 */

#ifndef SWI_H
#define SWI_H

#include <stdint.h>
#include "kernel.h"

_kernel_oserror *swi_retries(uint32_t bic, uint32_t *eor, uint32_t *old, uint32_t *new);
_kernel_oserror *swi_controller_type(uint32_t drive, uint32_t *type);
_kernel_oserror *swi_power_control_read_spin_state(uint32_t drive, uint32_t *state);
_kernel_oserror *swi_power_control_set_autospindown(uint32_t drive, uint32_t new, uint32_t *old);
_kernel_oserror *swi_power_control_control_spin(uint32_t drive, bool spindown);
_kernel_oserror *swi_ide_user_op(uint32_t flags, uint8_t *param, uint8_t *buffer, size_t length, uint32_t timeout, uint32_t *status, size_t *remain);
_kernel_oserror *swi_lock_ide(bool lock);
_kernel_oserror *swi_ide_device_info_by_id(uint32_t deviceid, uint32_t cpid, uint32_t *type, uint32_t *drive, void **identify_block);
_kernel_oserror *swi_ide_device_info_by_drive(uint32_t drive, uint32_t *type, uint32_t *id, void **identify_block);
_kernel_oserror *swi_atapi_op(uint32_t flags, size_t control_len, uint8_t *control, uint8_t *buffer, size_t length, uint32_t timeout, uint32_t *status, uint8_t **buffer_end, size_t *remain);

#endif
