/* 
 * CDDL HEADER START
 * 
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License (the "Licence").
 * You may not use this file except in compliance with the Licence.
 * 
 * You can obtain a copy of the licence at
 * RiscOS/Sources/ThirdParty/Endurance/Lib/DThreads/LICENCE.
 * See the Licence for the specific language governing permissions
 * and limitations under the Licence.
 * 
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the Licence file. If applicable, add the
 * following below this CDDL HEADER, with the fields enclosed by
 * brackets "[]" replaced with your own identifying information:
 * Portions Copyright [yyyy] [name of copyright owner]
 * 
 * CDDL HEADER END
 */
/* 
 * Copyright 2007 Endurance Technology Ltd.  All rights reserved.
 * Use is subject to license terms.
 */
#include <stdio.h>

#include "DThreads/DThreads.h"

#include "swis.h"

static _kernel_oserror *Thread1(void *arg)
{
  char auto_array[100*1024]; /* force stack and heap extension */
  (void) auto_array;
  printf("Thread1 with arg \"%s\"\n", arg);
  printf("Should be killed in 5 seconds\n");
  while (1);
}

static _kernel_oserror *Thread2(void *arg)
{
  DThreads_Thread victim = arg;
  
  int timeout, time;
  _swix(OS_ReadMonotonicTime, _OUT(0), &timeout);
  timeout += 500;
  do
  {
    _swix(OS_ReadMonotonicTime, _OUT(0), &time);
  }
  while (time - timeout < 0);
  
  DThreads_Destroy(victim);
  return NULL;
}

int DThreads_Main(int argc, char *argv[])
{
  printf("Test module run: arguments as follows...\n");
  for (int i = 0; i < argc; i++)
    printf("%d: \"%s\"\n", i, argv[i]);
  
  DThreads_Thread t1h, t2h;
  DThreads_Create(Thread1, "arg1", "Name of Thread1", &t1h);
  DThreads_Create(Thread2, t1h, "Name of Thread2", &t2h);
  return 0;
}
