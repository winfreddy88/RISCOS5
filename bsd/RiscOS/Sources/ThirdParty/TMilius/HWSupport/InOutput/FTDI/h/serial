/** @file

   Declares functions to set the according RISC OS serial port options
   for the given port of an FTDI device if this possible.

  */
/* Created 28.04.2010 T. Milius
   Changed 12.09.2010 T. Milius */
/* Copyright (c) 2010 by Thomas Milius Stade, Germany
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of Thomas Milius Stade, Germany nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY Thomas Milius Stade, Germany ``AS IS'' AND ANY
* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL Thomas Milius Stade, Germany BE LIABLE FOR ANY
* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */

#ifndef serial_h
#define serial_h

/* !!!!!!!!!! libraries !!!!!!!!!! */
/* ------------ RISC OS ------------ */
#include "kernel.h"

/* ------------ Own ------------ */
#include "ftdi.h"

/* !!!!!!!!!! functions !!!!!!!!!! */
/** Sets a given baudrate for a given port of a given FTDI device if allowed.
    Returns NULL if setting was performed successfully or a pointer to an RISC OS error
    else. */
extern _kernel_oserror* set_baudrate(ftdi_environment *ftdi,
                                     unsigned long baudrate,
                                     unsigned long port_number);

/** Sets dataformat determined by a given number of data Bits, stop Bits and partiy type
    for a given port of a given FTDI device if allowed.
    Returns NULL if setting was performed successfully or a pointer to an RISC OS error
    else. */
extern _kernel_oserror* set_data_format(ftdi_environment *ftdi,
                                        unsigned long data_bits,
                                        unsigned long stopbit_type,
                                        unsigned long parity_type,
                                        unsigned long port_number);

/** Sets a given flowcontrol type for a given port of a given FTDI device if allowed.
    Returns NULL if setting was performed successfully or a pointer to an RISC OS error
    else. */
extern _kernel_oserror* set_flowcontrol(ftdi_environment *ftdi,
                                        unsigned long flowcontrol_type,
                                        unsigned long port_number);

/** Sets a given event character for a given port of a given FTDI device.
    Returns NULL if setting was performed successfully or a pointer to an RISC OS error
    else. */
extern _kernel_oserror* set_event_char(ftdi_environment *ftdi,
                                       unsigned char event_char,
                                       unsigned long port_number);

/** Sets a given error character for a given port of a given FTDI device.
    Returns NULL if setting was performed successfully or a pointer to an RISC OS error
    else. */
extern _kernel_oserror* set_error_char(ftdi_environment *ftdi,
                                       unsigned char error_char,
                                       unsigned long port_number);

#endif
