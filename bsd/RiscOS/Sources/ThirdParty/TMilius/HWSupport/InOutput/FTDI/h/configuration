/** @file

  Contains declarations of basic functions to read FTDI driver configuration files
  and conversion function of FTDI number to permisson Bitmaps.

  */
/* Created 28.04.2010 T. Milius
   Changed 03.08.2010 T. Milius */
/* Copyright (c) 2010 by Thomas Milius Stade, Germany
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of Thomas Milius Stade, Germany nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY Thomas Milius Stade, Germany ``AS IS'' AND ANY
* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL Thomas Milius Stade, Germany BE LIABLE FOR ANY
* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */

#ifndef configuration_h
#define configuration_h

/* !!!!!!!!!! libraries !!!!!!!!!! */
/* ---------- ANSI-C ---------- */
#include <stdio.h>

/* !!!!!!!!!! functions !!!!!!!!!! */
/** Fetches a single line from a given configuration file, removes the NL at the end and returns
    a pointer to the line buffer or NULL if not successful. */
extern char *get_file_line(FILE *config_file);

/** Returns parameter value located at a given string or 0 if there is no such value.
   String position will be forwarded to the end of the value to allow reading of furtehr values. */
extern int determine_parameter_value_number(char **value);

/** Returns a pointer to a parameter name for a given file line or NULL if no parameter could be separated.
    If the parameter is port related the port number will be set if not -1 will be returned inside a given
    port number storage. File line will be forwarded to first parameter value. */
extern char *determine_config_parameter(char **file_line,
                                        int *port_number);

/** Returns a permission Bitmap value for a given FTDI data bit number code. */
extern unsigned long get_data_bits_permission(unsigned long parity_type);

/** Returns a permission Bitmap value for a given FTDI paraity code. */
extern unsigned long get_parity_permission(unsigned long parity_type);

/** Returns a permission Bitmap value for a given FTDI stop bit number code. */
extern unsigned long get_stopbits_permission(unsigned long stopbits);

/** Returns a permission Bitmap value for a given FTDI flowcontrol code. */
extern unsigned long get_flowcontrol_permission(unsigned long flowcontrol_type);

#endif
