/** @file

  Implements error handling for FTDI driver.

  */
/* Created 28.04.2010 T. Milius
   Changed 04.08.2010 T. Milius */
/* Copyright (c) 2010 by Thomas Milius Stade, Germany
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of Thomas Milius Stade, Germany nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY Thomas Milius Stade, Germany ``AS IS'' AND ANY
* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL Thomas Milius Stade, Germany BE LIABLE FOR ANY
* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */
/* RISC OS */

/* !!!!!!!!!! libraries !!!!!!!!!! */
/* ---------- ANSI-C ---------- */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/* ------------ RISC OS ------------ */
#include "kernel.h"
#include "swis.h"

/* ------------ Own ------------ */
#include "error.h"

/* !!!!!!!!!!! definitions !!!!!!!!!! */

/* !!!!!!!!!! data structures !!!!!!!!!! */
char my_space[512];

/** Handling of related RISC OS message file. */
struct {
void *filespace;
/* Messagetrans recommended a fifth word however.
   I didn´t understand why but it doesn´t cost much. */
int descriptor[5];
char file_name[35];
} message_file;

/* !!!!!!!!!! support functions !!!!!!!!!! */

/* !!!!!!!!!! functions !!!!!!!!!! */
_kernel_oserror *initialize_error(void)
{
_kernel_swi_regs regs;
_kernel_oserror *error_os;

strcpy(message_file.file_name, "<FTDI$Resources>.Messages");
/* Obtain Info whether to store messages locally or not. */
regs.r[1]=(int) message_file.file_name;
if ((error_os=_kernel_swi(MessageTrans_FileInfo, &regs, &regs)) != NULL) {
  return error_os;
  }
if ((regs.r[0] & 0x00000001) != 0) {
  /* Already in RAM */
  message_file.filespace=NULL;
  }
else {
  /* Allocate RAM for message file. */
  message_file.filespace=malloc(regs.r[2]);
  }
regs.r[0]=(int) message_file.descriptor;
regs.r[1]=(int) message_file.file_name;
regs.r[2]=(int) message_file.filespace;
if ((error_os=_kernel_swi(MessageTrans_OpenFile, &regs, &regs)) != NULL) {
  return error_os;
  }
return NULL;
}

_kernel_oserror *close_error(void)
{
_kernel_swi_regs regs;
_kernel_oserror *error_os;

regs.r[0]=(int) message_file.descriptor;
if ((error_os=_kernel_swi(MessageTrans_CloseFile, &regs, &regs)) != NULL) {
  return error_os;
  }
if (message_file.filespace) {
  free(message_file.filespace);
  }
return NULL;
}

_kernel_oserror *generate_error(int error_number)
{
_kernel_swi_regs regs;
_kernel_oserror *error_os;
_kernel_oserror local_error;

local_error.errnum=error_number;
sprintf(local_error.errmess, "E%d", (error_number & 0x000000FF));
regs.r[0]=(int) &local_error;
regs.r[1]=(int) message_file.descriptor;
regs.r[2]=0;
regs.r[3]=0;
regs.r[4]=0;
regs.r[5]=0;
regs.r[6]=0;
regs.r[7]=0;
if ((error_os=_kernel_swi(MessageTrans_ErrorLookup, &regs, &regs)) != NULL) {
  return error_os;
  }
return (_kernel_oserror *) regs.r[0];
}
