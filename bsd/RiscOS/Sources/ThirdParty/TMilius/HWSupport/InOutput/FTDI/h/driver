/** @file

  Declares FTDIDriver DeviceFS driver.

  */
/* Created 10.09.2010 T. Milius
   Changed 10.09.2010 T. Milius */
/* Copyright (c) 2010 by Thomas Milius Stade, Germany
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of Thomas Milius Stade, Germany nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY Thomas Milius Stade, Germany ``AS IS'' AND ANY
* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL Thomas Milius Stade, Germany BE LIABLE FOR ANY
* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */

#ifndef driver_h
#define driver_h

/* !!!!!!!!!! libraries !!!!!!!!!! */

/* !!!!!!!!!!! definitions !!!!!!!!!! */
/** @name Special FTDIDriver operations */
/*@{*/
#define FTDI_CALLDEVICE_RESET         0x80000000
#define FTDI_CALLDEVICE_FLOW_CHARS    0x80000001
#define FTDI_CALLDEVICE_MODEM_STATUS  0x80000002
#define FTDI_CALLDEVICE_EVENT_CHAR    0x80000003
#define FTDI_CALLDEVICE_ERROR_CHAR    0x80000004
#define FTDI_CALLDEVICE_LATENCY_TIMER 0x80000005
#define FTDI_CALLDEVICE_BITMODE       0x80000006
#define FTDI_CALLDEVICE_GET_EEPROM    0x80000007
#define FTDI_CALLDEVICE_SET_EEPROM    0x80000008
#define FTDI_CALLDEVICE_EREASE_EEPROM 0x80000009
/*@}*/

/* !!!!!!!!!! functions !!!!!!!!!! */
/** The device driver for DeviceFS-Operations. For it requires access to common structure which is not provided
    by the interface, there is a small adapter inside ftdimodule.c which adds this information and calls this function
    then. */
_kernel_oserror *driver_internal(struct common_structure *common,
                                 _kernel_swi_regs *regs,
                                 void *pw);

#endif
