/** @file

    This file contains all structures and functions to handle DRAW files.
    This is required to display the calibration cross.

    */
/* Created 31.12.2007 T. Milius From Draw library of PrtInfo
   Changed 31.12.2007 T. Milius */
/* Copyright (c) 2007-2008 by Thomas Milius Stade, Germany
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of the &lt;organization&gt; nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY Thomas Milius Stade, Germany ``AS IS'' AND ANY
* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL Thomas Milius Stade, Germany BE LIABLE FOR ANY
* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */
/* RISC OS */

#ifndef draw_h
#define draw_h

/* !!!!!!!!!! libraries !!!!!!!!!! */
/* ---------- ANSI-C ---------- */
#include <stdbool.h>
#include <stdlib.h>
#include <stdio.h>

/* ------------ Toolbox ------------ */
#include <wimplib.h>
#include <drawfile.h>

/* ------------ RISC OS Library ------------ */
#include <drawfobj.h>

/* ------------ own ------------ */

/* !!!!!!!!!!! definitions !!!!!!!!!! */
/** @name DRAW object types

    This types will occur for draw objects */
/*@{*/
#define DRAW_OBJECT_TYPE_FONT_TABLE         0
#define DRAW_OBJECT_TYPE_TEXT               1
#define DRAW_OBJECT_TYPE_PATH               2
#define DRAW_OBJECT_TYPE_SPRITE             5
#define DRAW_OBJECT_TYPE_GROUP              6
#define DRAW_OBJECT_TYPE_TAGGED             7
#define DRAW_OBJECT_TYPE_TEXT_AREA          9
#define DRAW_OBJECT_TYPE_TEXT_COLUMN        10
#define DRAW_OBJECT_TYPE_OPTIONS            11
#define DRAW_OBJECT_TYPE_TRANSFORMED_TEXT   12
#define DRAW_OBJECT_TYPE_TRANSFORMED_SPRITE 13
/*@}*/

/* !!!!!!!!!! data structures !!!!!!!!!! */
/** Contains a DRAW file and its transformation */
struct draw_file_struct {
draw_diag file;
Transform transformation;
};

/* !!!!!!!!!! support functions !!!!!!!!!! */

/* !!!!!!!!!! functions !!!!!!!!!! */
/** Initializes a given draw_file_struct structure to no file */
bool initialize_draw_file(struct draw_file_struct *draw_file)
{

if (!draw_file) return false;
draw_file->file.data=NULL;
draw_file->transformation[0][0]=1<<16;
draw_file->transformation[0][1]=0;
draw_file->transformation[1][0]=0;
draw_file->transformation[1][1]=draw_file->transformation[0][0];
draw_file->transformation[2][0]=0;
draw_file->transformation[2][1]=0;
return true;
}

/** Removes a given DRAW-File from a draw_file_struct structure */
bool drop_draw_file(struct draw_file_struct *draw_file)
{

if (!draw_file) return false;
if (draw_file->file.data) {
  free(draw_file->file.data);
  }
return initialize_draw_file(draw_file);
}

/** Loads a given DRAW-File into draw_file_struct structure */
bool load_draw_file(struct draw_file_struct *draw_file,
                    char *file_name)
{
_kernel_swi_regs regs;

if (!draw_file) return false;
drop_draw_file(draw_file);
/* Determine filesize */
regs.r[0]=17;
regs.r[1]=(int) file_name;
if (_kernel_swi(OS_File, &regs, &regs)) {
  return false;
  }
if (regs.r[4] == 0) {
  return false;
  }
draw_file->file.length=regs.r[4];
if (!(draw_file->file.data=malloc(draw_file->file.length))) {
  drop_draw_file(draw_file);
  return false;
  }
/* load the draw file */
regs.r[0]=16;
regs.r[1]=(int) file_name;
regs.r[2]=(int) draw_file->file.data;
regs.r[3]=0;
if (_kernel_swi(OS_File, &regs, &regs) != 0) {
  drop_draw_file(draw_file);
  return false;
  }
else {
  return true;
  }
}

#endif
