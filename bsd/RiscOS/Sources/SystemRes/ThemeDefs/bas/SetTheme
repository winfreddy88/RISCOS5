REM>!ThemeDefs.!RunImage
REM
REM Copyright (c) 2012, RISC OS Open Ltd
REM All rights reserved.
REM 
REM Redistribution and use in source and binary forms, with or without
REM modification, are permitted provided that the following conditions are met: 
REM     * Redistributions of source code must retain the above copyright
REM       notice, this list of conditions and the following disclaimer.
REM     * Redistributions in binary form must reproduce the above copyright
REM       notice, this list of conditions and the following disclaimer in the
REM       documentation and/or other materials provided with the distribution.
REM     * Neither the name of RISC OS Open Ltd nor the names of its contributors
REM       may be used to endorse or promote products derived from this software
REM       without specific prior written permission.
REM 
REM THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
REM AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
REM IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
REM ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
REM LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
REM CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
REM SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
REM INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
REM CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
REM ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
REM POSSIBILITY OF SUCH DAMAGE.
REM 
:
ONERRORPRINT"ThemeDefs: "+REPORT$+"/"+STR$ERL:END:REM Hopefully never used
:
resfsnodesize%=24 :REM Per the PRM
resfsreqd%=FALSE  :REM Assume not
resfssize%=4      :REM A word for the end node
areakey%=&1234ABCD:REM Additional uniqueness beyond the name
areaflags%=1<<7   :REM Not resizeable
xsquash_compress%=&62700:REM Name wouldn't lookup if absent
xos_dynamicarea%=&20066 :REM Name wouldn't lookup if absent
xos_leaveos%=&2007C     :REM Name wouldn't lookup with CallASWI
:
REM Inspect sprite precedence CMOS flag
SYS"XOS_Byte",161,&8C TO,,cmos%:romprotect%=(cmos% AND32)<>0
REM Require squashed banners from Desktop 2.71+
SYS"XOS_CLI","RMEnsure Desktop 2.71" TO;flags%
squashbanner%=(flags% AND1)=0
REM Need to rename the switcher icon prior to TaskManager 1.19
SYS"XOS_CLI","RMEnsure TaskManager 1.19" TO;flags%
switchername%=(flags% AND1)=1
switcherreqd%=FALSE
REM Need dynamic areas
SYSxos_dynamicarea%,3,-1 TO;flags%
dynamic%=(flags% AND1)=0
:
REM See which theme resources are installed with this theme
found%=FALSE
RESTORE
REPEAT
  READdst$,src$,opt%
  SYS"XOS_File",23,src$ TOobject%,,,,size%,,type%
  IF(object%=1)AND(type%=&FF9) THEN
    IF(opt% AND32)<>0 THEN SYS"XOS_File",23,"Resources:$."+dst$ TOobject%
    IF(object%=1) THEN
      found%=TRUE
      IFFNintoresfs(romprotect%,opt%) THEN
        REM That goes in ResourceFS area
        resfsreqd%=TRUE
        resfssize%=resfssize%+FNroundtoword(size%)+FNroundtoword(1+LENdst$)+resfsnodesize%
      ENDIF
    ENDIF
  ENDIF
UNTILopt%=-1
:
REM Anything for this theme?
IFNOTfound% THENEND
:
REM Get area name
SYS"MessageTrans_FileInfo",,"<ThemeDefs$Dir>.Messages" TO,,msgsize%;flags%
IF(flags% AND1)=1 THENEND
DIMmsgdata% msgsize%
DIMmsginfo% 16
SYS"XMessageTrans_OpenFile",msginfo%,"<ThemeDefs$Dir>.Messages",msgdata%
SYS"XMessageTrans_Lookup",msginfo%,"Area",STRING$(32,"@"),32 TO,,areaname$
SYS"XMessageTrans_Lookup",msginfo%,"ModHelp",STRING$(32,"@"),32 TO,,modhelp$
SYS"XMessageTrans_Lookup",msginfo%,"_Version",STRING$(32,"@"),32 TO,,version$
SYS"XMessageTrans_CloseFile",msginfo%
:
REM See if the resources already exist, implying we're being run for a second time
REM We can't delete the old area because that'd leave ResourceFS pointing at 
REM unmapped memory, and we can't merge partial sets because the ROM ones are gone
IFdynamic% THEN
  areanum%=-1
  REPEAT
    SYS"XOS_DynamicArea",3,areanum% TO,areanum%;flags%
    IFareanum%<>-1 THEN
      SYS"XOS_DynamicArea",2,areanum% TO,,,,,,h%,w%,name$
      IF(w%=areakey%)AND(name$=areaname$)AND(h%=0) THEN
        REM Workspace is the magic word, name matches, no handler, looks like ours
        REM so stop now rather than end up with two copies. 
        END
      ENDIF
    ENDIF
  UNTILareanum%=-1
ELSE
  SYS"XOS_Module",18,"ThemeDefs" TO;flags%
  IF(flags% AND1)=0 THEN
    REM Module is in the chain, so stop now rather than end up with two copies.
    END
  ENDIF
ENDIF
:
IFresfsreqd% THEN
  IFdynamic% THEN
    REM Make a dynamic area to load stuff into it
    SYS"XOS_DynamicArea",0,-1,resfssize%,-1,areaflags%,resfssize%,0,areakey%,areaname$ TO,areanum%,,areabase%;flags%
    IF(flags% AND1)=1 THENEND
    resfsnext%=areabase%
  ELSE
    REM Make a simple module to load stuff into
    PROCmakemodule(modhelp$,version$,resfssize%,modbase%,resfsnext%)
  ENDIF
ELSE
  DIMresfsnext% 4:REM Enough to hold a dummy end node
ENDIF
RESTORE
REPEAT
  READdst$,src$,opt%
  IF(opt% AND32)<>0 THEN SYS"XOS_File",23,"Resources:$."+dst$ TOobject% ELSEobject%=1
  IF(object%=1) THEN
    IFFNintoresfs(romprotect%,opt%) THEN
      resfsnext%=FNaddtoarea(dst$,src$,resfsnext%,opt%)
    ELSE
      PROCaddtopool(src$,opt%)
    ENDIF
    IF(opt% AND3)=1 THENswitcherreqd%=TRUE:REM Got icons to load
  ENDIF
UNTILopt%=-1
!resfsnext%=0:REM Terminate the ResourceFS list
IFswitcherreqd% THEN
  IFswitchername% THEN
    PROCpatchswitcher
  ENDIF
ENDIF
IFresfsreqd% THEN
  IFdynamic% THEN
    SYS"ResourceFS_RegisterFiles",areabase%
  ELSE
    SYS"XOS_Module",10,modbase%+4
  ENDIF
ENDIF
END
:
DEFPROCaddtopool(src$,opt%)
LOCALobject%
IFsrc$="" THENENDPROC
SYS"XOS_File",23,src$ TOobject%:IFobject%<>1 THENENDPROC
REM The flags denote which are the base names, the Wimp will 
REM select which resolution it thinks is best. Note, the actual
REM loading is deferred until the desktop is entered when 
REM the WimpMode is defined
IF(opt% AND3)=1 THENSYS"XOS_CLI","SET ThemeDefs$ToBeIcons "+src$
IF(opt% AND6)=4 THENSYS"XOS_CLI","SET ThemeDefs$ToBeTools "+src$
ENDPROC
:
DEFFNaddtoarea(dst$,src$,ptr%,opt%)
LOCALload%,exec%,size%,nameend%,data%,squash%
squash%=((opt% AND8)=8) ANDsquashbanner%
nameend%=20+FNroundtoword(1+LENdst$)
data%=ptr%+nameend%+4
IFsquash% THEN
  LOCALwork%,buffer%,flags%,end%
  SYS"XOS_File",23,src$ TO,,,,size%
  SYSxsquash_compress%,8,-1 TOwork%;flags%
  IF(flags% AND1)=1 THEN=ptr%:REM Infer no Squash module
  SYS"XOS_Module",6,,,work%+size% TO,,buffer%;flags%
  IF(flags% AND1)=1 THEN=ptr%:REM Not enough RMA
  work%=buffer%+size%:REM File buffer and workspace consolidated in one claim
  SYS"XOS_File",16,src$,buffer%,0 TO,,load%,exec%;flags%
  IF(flags% AND1)=0 THEN
    REM Do the compress operation and add the 20 byte header
    SYSxsquash_compress%,0,work%,buffer%,size%,data%+20,size%-20 TOflags%,,,,end%
    $data%="SQSH"
    data%!4=size%
    data%!8=load%
    data%!12=exec%
    data%!16=0
    size%=end%-data%:REM The compressed size including the header
    load%=(load% AND&FFF000FF)OR&FCA00:REM Adjust filetype to Squash
  ELSE
    flags%=-1:REM Failed to load
  ENDIF
  SYS"XOS_Module",7,,buffer%
  IFflags%<>0 THEN=ptr%:REM Failed to compress
ELSE
  SYS"XOS_File",16,src$,data%,0 TO,,load%,exec%,size%;flags%
  IF(flags% AND1)=1 THEN=ptr%:REM Failed to load
ENDIF
!(ptr%+0)=FNroundtoword(1+LENdst$)+FNroundtoword(size%)+resfsnodesize%
!(ptr%+4)=load%
!(ptr%+8)=exec%
!(ptr%+12)=size%
!(ptr%+16)=%10001:REM Public/owner read
$(ptr%+20)=dst$
?(ptr%+20+LENdst$)=0:REM Null terminate
!(ptr%+nameend%)=size%+4
=data%+FNroundtoword(size%)
:
DEFFNroundtoword(V%)
=(V%+3)ANDNOT3
:
DEFFNintoresfs(romprotect%,opt%)
IFromprotect% OR((opt% AND16)=16) THEN=TRUE
=FALSE
:
DEFPROCmakemodule(modhelp$,version$,resfssize%,RETURN modbase%,RETURN resfsnext%)
LOCALflags%,pass%,modcode%
modcode%=256
SYS"XOS_Module",6,,,resfssize%+modcode% TO,,modbase%;flags%
IF(flags% AND1)=1 THENEND
version$=LEFT$(version$,INSTR(version$,".")+2)
modhelp$=modhelp$+STRING$(2-(LENmodhelp$ DIV8),CHR$9):REM Tabs to column 16
?modbase%=3:SYS"OS_Word",14,modbase%:REM Module is dated from now
SYS"OS_ConvertDateAndTime",modbase%,STRING$(32,"@"),32," (%DY %M3 %CE%YR)" TOdate$
FORpass%=0TO2STEP2
P%=modbase%
[OPTpass%
 EQUD    resfssize%+modcode% \Size for OS_Module
 :
.header
 EQUD    0                   \No language entry
 EQUD    init-header
 EQUD    final-header
 EQUD    0                   \No service calls
 EQUD    title-header
 EQUD    help-header
 EQUD    0                   \No commands
.title
 EQUS    "ThemeDefs"+CHR$0
.help
 EQUS    modhelp$+version$+date$+CHR$0
 ALIGN
.init
 MOV     r6,r14
 ADR     r0,resfsnext%
 SWI     "XResourceFS_RegisterFiles"
 MOV     pc,r6
.final
 MOV     r6,r14
 ADR     r0,resfsnext%
 SWI     "XResourceFS_DeregisterFiles"
 CMP     pc,#0               \Don't refuse to die on error
 MOV     pc,r6
.resfsnext%
]
NEXT
ENDPROC
:
DEFPROCpatchswitcher
LOCALflags%,base%,pass%,patch%
SYS"XOS_CLI","RMFaster TaskManager" TO;flags%
IF(flags% AND1)=1 THENENDPROC
REM Find out where it got placed
SYS"XOS_Module",18,"TaskManager%Base" TO,,,base%
DIMpatch% 256
FORpass%=0TO2STEP2
P%=patch%
[OPTpass%
.setup
 ADR     r1,search
 LDMIA   r1,{r1-r3}          \Known word aligned case sensitive
 MOV     r6,r14
 LDR     r0,origin
 LDR     r4,[r0,#-4]         \Size from module chain
 ADD     r4,r4,r0
.seek
 LDR     r5,[r0],#4
 TEQ     r5,r1
 LDREQ   r5,[r0,#0]
 TEQEQ   r5,r2
 LDREQ   r5,[r0,#4]
 TEQEQ   r5,r3
 BEQ     hit
 CMP     r0,r4               \End?
 BCC     seek
 MOV     r0,#0               \No match
 B       done
.hit
 SUB     r0,r0,#4
 ADR     r1,replace
 LDMIA   r1,{r1-r3}
 SWI     "XOS_EnterOS"
 STMIA   r0,{r1-r3}
 SWI     xos_leaveos%
 MVN     r0,#0               \Matched and patched
.done
 CMP     pc,#0
 EQUD    &E328F202           \MSR CPSR_f,#C_bit
 MOV     pc,r6
.origin
 EQUD    base%  
.search
 EQUS    "switcher"+CHR$0+CHR$0+CHR$0+CHR$0
.replace
 EQUS    "taskmanager"+CHR$0
]
NEXT
CALLsetup
REM Make sure one is there on entering the desktop
SYS"XOS_CLI","IconSprites ThemeDefs:Switcher"
ENDPROC
:
REM Flag 1=icons
REM      2=alternate resolutions of base name
REM      4=tools
REM      8=desktop banner
REM      16=must go in ResourceFS
REM      32=check target already exists in ResourceFS
DATA"Resources.Wimp.Sprites",       "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>Sprites"  ,1
DATA"Resources.Wimp.Sprites22",     "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>Sprites22",3
DATA"Resources.Wimp.Sprites11",     "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>Sprites11",3
DATA"Resources.Wimp.Tools",         "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>Tools"    ,4
DATA"Resources.Desktop.Sprites",    "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>Banner"   ,24
DATA"Resources.SCSIFiler.Sprites",  "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>SCSIFiler",48
DATA"Resources.SDFSFiler.Sprites",  "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>SDFSFiler",48
DATA"Resources.Paint.Sprites",      "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>Paint"    ,16
DATA"Resources.Paint.Sprites22",    "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>Paint22"  ,18
DATA"Resources.Paint.Sprites11",    "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>Paint11"  ,18
DATA"Resources.Draw.Sprites",       "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>Draw"     ,16
DATA"Resources.Draw.Sprites22",     "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>Draw22"   ,18
DATA"Resources.Draw.Sprites11",     "<ThemeDefs$Dir>.Themes.<Wimp$IconTheme>Draw11"   ,18
DATA"","",-1
