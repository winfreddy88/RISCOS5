/*
 * Copyright (c) 2012, RISC OS Open Ltd
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef BATMGR_BMU_H
#define BATMGR_BMU_H

#include <stdint.h>
#include "kernel.h"

#define BMU_MAX 2

extern uint32_t bmu_count;

typedef struct {
	/* Public state */
	uint32_t statusflags; /* BMU device status flags, -1 for unknown */
	uint32_t validflags; /* Which flags are valid */
	int32_t percentremaining; /* Charge percentage, -1 for unknown */
	int32_t timeremaining; /* Battery life left in minutes, -1 for unknown */

	/* Private state */
	int32_t index; /* BMU index */
	int32_t bmuflags; /* BMU flags */
	uint32_t availablevars; /* Bit mask of which vars we care about are supported */
  
} bmu_state_t;

extern bmu_state_t bmu_state[BMU_MAX];

extern _kernel_oserror *bmu_init(void);
extern void bmu_shutdown(void);

extern void bmu_update(void);


#endif
