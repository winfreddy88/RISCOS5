/*
 * Copyright (c) 1994, Simon Foster
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
/*
  Name    - !Hopper95
  Module  - hopper.h
  Purpose - The actual game.
  Author  - Simon Foster
  Version - 1.00 (14-Dec-1994)
*/

#ifndef _HOPPER_
#define _HOPPER_


/* The various includes for the module */

/* The various defines required */
#define  b_L    0
#define  b_T   45
#define  b_R  319
#define  b_B  222

#define  info_APPDIR            "<Hopper$Dir>"
#define  info_APPNAME           "Hopper"
#define  info_CHOICES_RO        "Choices:Hopper"
#define  info_CHOICES_RW        "<Choices$Write>.Hopper"

/* Global variables */

/* The functions */
/* The game */
void hopper_go ( void ) ;

/* Load the high scores */
void hopper_load_hi ( void ) ;

/* Save the high scores */
void hopper_save_hi ( void ) ;

/* Reset the high scores */
void hopper_reset_hi ( void ) ;

/* Check the keys, etc.. */
int  hopper_key ( int start ) ;


#endif
