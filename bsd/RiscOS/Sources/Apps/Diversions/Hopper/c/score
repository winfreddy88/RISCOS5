/*
 * Copyright (c) 1994, Simon Foster
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
/*
  score.c
*/

#include <stdio.h>
#include "os.h"

#include "score.h"
#include "graphics.h"


int  score    = 0 ;
int  changed  = 0 ;
int  extra    = 5000 ;
int  lives    = 3 ;
int  first    = 1 ;



/* Show number of lives */
void score_show_lives ( int num )
{
  int  lives = num ;

  os_writec ( 31 ) ;
  os_writec ( (lives == 0) ? 0 : (lives - 1) << 1 ) ;
  os_writec ( 31 ) ;

  if ( lives > 0 ) {
    os_writec ( 128 ) ;
    os_writec ( 129 ) ;
  }

  os_writec ( 32 ) ;
  os_writec ( 32 ) ;
}



/* Initialise score */
void score_initialise ( void )
{
  score   = 0 ;
  changed = 1 ;
  extra   = 5000 ;
  lives   = 3 ;
  first   = 1 ;
}



/* Add a value to the score */
void score_add ( int add )
{
  changed = 1 ;
  score   = score + add ;

  if ( score >= extra ) {
    lives = lives + 1 ;
    extra = extra + 10000 ;
    score_show_lives ( lives ) ;
  }
}



/* Display the score */
void score_print ( void )
{
  int  loop ;

  if ( changed == 1 ) {
    gfx_show_number (  0, 10, ((score / 10000) % 10) ) ;
    gfx_show_number ( 16, 10, ((score / 1000) % 10) ) ;
    gfx_show_number ( 32, 10, ((score / 100) % 10) ) ;
    gfx_show_number ( 48, 10, ((score / 10) % 10) ) ;
    gfx_show_number ( 64, 10, (score % 10) ) ;
    changed = 0 ;
  }
  if ( first == 1 ) {
    for ( loop = 1; loop <= lives; loop++ ) {
      score_show_lives ( loop ) ;
    }
    first = 0 ;
  }
}



/* Take a life off or add one */
int  score_lives ( void )
{
  lives = lives - 1 ;
  score_show_lives ( lives ) ;
  return ( lives ) ;
}



/* Return the score */
int  score_score ( void )
{
  return ( score ) ;
}

