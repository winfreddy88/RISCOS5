/*
 * Copyright (c) 1994, Simon Foster
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
/*
  Menu handling bit
  menu.c
*/

#include "wimp.h"

#include "menu.h"

int  menu_current ;

/* Return the currently displayed menu */
int menu_current_menu ( void )
{
  return ( menu_current ) ;
}

/* Create a menu */
void menu_create_menu ( wimp_block *my_block, wimp_menu *my_menu,
                                         int num_entries, int menu_number )
{
  int menu_x, menu_y, loop ;

  menu_x = my_block -> pointer.pos.x ;
  menu_y = my_block -> pointer.pos.y ;
  menu_x = menu_x - 65 ;
  if ( my_block -> pointer.w == wimp_ICON_BAR ) {
    menu_y = 96 + (num_entries * 44) ;
    for (loop=0; loop<num_entries; loop++) {
      if ( (my_menu->entries[loop].menu_flags & wimp_MENU_SEPARATE) != 0 ) {
        menu_y = menu_y + 24 ;
      }
    }
  }

  wimp_create_menu ( my_menu, menu_x, menu_y ) ;

  menu_current = menu_number ;
}
