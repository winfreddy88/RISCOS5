
;
; Voice module, see RISC OS 3 PRM 4-28 onwards
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:PublicWS
        GET     Hdr:Services
        GET     Hdr:Sound
        GET     Hdr:ModHand
        
        AREA    |Voice$$Code|, CODE, READONLY, PIC

Mod_BaseAddr
        DCD     0
        DCD     Mod_Init - Mod_BaseAddr                 ; Initialisation offset
        DCD     Mod_Die - Mod_BaseAddr                  ; Finalisation offset
        DCD     0                                       ; Service call handler offset
        DCD     Mod_Title - Mod_BaseAddr                ; Title string offset
        DCD     Mod_HelpStr - Mod_BaseAddr              ; Help string offset
        DCD     0                                       ; Help and command keyword table offset
        DCD     0                                       ; SWI base
        DCD     0                                       ; SWI handler
        DCD     0                                       ; SWI decode table
        DCD     0                                       ; SWI decoder
        DCD     0                                       ; MessageTrans file
        DCD     Mod_Flags - Mod_BaseAddr                ; Flags
        
Mod_Title
      [ :DEF: VoiceName
        DCB     "$VoiceName", 0
      |
        ! 1,    "No voice name given"
      ]
        ALIGN
Mod_HelpStr
        DCB     "Voice Generator"
        DCB     9
        DCB     "1.01 (14 Nov 2011) $VoiceName", 0
        ALIGN
Mod_Flags
        DCD     ModuleFlag_32bit

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Initialisation & finalisation
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Mod_Init
        Push    "R7-R11,R14"
        ADR     R0,Mod_BaseAddr
        LDR     R1,indirect_7
        ADD     R1,R1,R0
        STR     R1,indirect_2
        LDR     R1,indirect_6
        ADD     R1,R1,R0
        STR     R1,indirect_4

        ADR     R0,VoiceTable                           ; Voice generator
        MOV     R1,#0                                   ; Next free slot
        SWI     Sound_InstallVoice
        CMP     R1,#0                                   ; Fail when R1=0
        BEQ     %FT10
        ADR     R0,VoiceTable
        STR     R1,[R0,#32]
        Pull    "R7-R11,PC"

Mod_Die
        Push    "R7-R11,R14"
        ADR     R0,VoiceTable
        LDR     R1,[R0,#32]
        SWI     Sound_RemoveVoice
        CMP     R1,#0                                   ; Fail when R1=0
        BEQ     %FT20
        Pull    "R7-R11,PC"
10
        Pull    "R7-R11,R14"
        ADR     R0,error_blk_C0100
        TEQ     PC,PC
        ORRNES  PC,R14,#V_bit                           ; 26 bit exit
        MSR     CPSR_f,#V_bit
        MOV     PC,LR                                   ; 32 bit exit
error_blk_C0100
        DCD     &C0100
        DCB     "Failed to install voice generator", 0
        ALIGN
20
        Pull    "R7-R11,R14"
        ADR     R0,error_blk_C0101
        TEQ     PC,PC
        ORRNES  PC,R14,#V_bit                           ; 26 bit exit
        MSR     CPSR_f,#V_bit
        MOV     PC,LR                                   ; 32 bit exit
error_blk_C0101
        DCD     &C0101
        DCB     "Failed to remove voice generator", 0
        ALIGN

        DCB     "Incomming message from AB & GMF... "
        DCB     "#??^&^$@*! OFF YOU NOSEY !@!%#$@&^!#"
        DCB     "Message ends."
        ALIGN

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Workspace (prevents ROMming)
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
VoiceTable
        B       VoiceFill                               ; Fill code
        B       VoiceUpdate                             ; Update code
        B       VoiceGateOn                             ; Gate on
        B       VoiceGateOff                            ; Gate off
        B       VoiceInstantiate                        ; Instantiate
        Pull    "pc"                                    ; Free
        Pull    "pc"                                    ; Install (unused)
        DCD     VoiceTableNameText - VoiceTable

        DCD     0
indirect_0
        DCD     0
indirect_1
        DCD     0
indirect_2
        DCD     0
indirect_3
        DCD     0
indirect_4
        DCD     0
indirect_5
        DCD     1

VoiceTableNameText
        DCB     "$VoiceName", 0
        ALIGN

VoiceInstantiate
        Push    "R0-R4"
        ADD     R0,R0,#1
        STR     R0,indirect_3
        MOV     R0,#0
        MOV     R1,#0
        MOV     R2,#0
        MOV     R3,#0
        MOV     R4,#0
        SWI     Sound_Configure
        LDR     R0,[R3,#8]
        STR     R0,indirect_1
        LDR     R0,[R3,#12]
        STR     R0,indirect_0
        Pull    "R0-R4,PC"

VoiceGateOn
        LDR     R0,indirect_0
        STR     R0,[R9,#16]
        LDR     R0,indirect_1
        STR     R0,[R9,#20]
        MOV     R0,#&0100                               ; =256
        STR     R0,[R9,#36]
        LDR     R5,indirect_4
        STR     R5,[R9,#60]
        LDR     R0,indirect_2
        STR     R0,[R9,#52]
        LDMIA   R0,{R0-R4}
        CMN     R0,#1
        ADDNE   R0,R0,R5
        ADDNE   R1,R1,R5
        STR     R0,[R9,#24]
        STR     R1,[R9,#28]
        STR     R2,[R9,#44]
        LDR     R0,indirect_5
        CMP     R0,#0
        LDRNE   R3,[R9,#4]
        STR     R3,[R9,#32]
        STR     R4,[R9,#40]
        LDR     R0,indirect_3
        STR     R0,[R9,#48]
        Push    "R0,R1,R8,R9"
        LDR     R0,[R9,#48]
        LDR     R1,[R9,#40]

        TEQ     PC,PC
        MRSEQ   R8,CPSR
        MOVNE   R8,PC
        ORR     R9,R8,#3                                ; Pump up to SVC mode
        MSREQ   CPSR_c,R9
        TEQNEP  R9,#0
        Push    "lr"
        SWI     Sound_Stereo
        Pull    "lr"
        TEQ     PC,PC
        MSREQ   CPSR_c,R8
        TEQNEP  R8,#0                                   ; Back to IRQ mode
        NOP
        Pull    "R0,R1,R8,R9"

VoiceFill
        LDR     R1,[R9,#0]
        LDR     R2,[R9,#16]
        LDR     R3,[R9,#20]
        LDR     R4,[R9,#60]
        LDR     R5,[R9,#24]
        LDR     R6,[R9,#28]
        LDR     R7,[R9,#32]
        LDR     R8,[R9,#36]
        CMN     R5,#1
        BEQ     skip_3
        AND     R1,R1,#&7F                              ; =127
        LDRB    R1,[R2,R1,LSL #1]
        MOV     R1,R1,LSR #1
        RSB     R1,R1,#&7F                              ; =127
        LDR     R2,[R9,#52]
        CMP     R8,#0
        BGT     code_0
        BLT     code_3
        BEQ     code_1
code_0
        ADDS    R7,R7,R7,LSL #16
        ADDCS   R5,R5,#&0100                            ; =256
        ADD     R0,R5,R7,LSR #24
        CMP     R0,R6
        MOVGT   R0,R6
        LDRB    R0,[R0,#0]
        LDRB    R0,[R3,R0,LSL #5]
        SUBS    R0,R0,R1,LSL #1
        MOVMI   R0,#0
        STRB    R0,[R12],R11
        ADDS    R7,R7,R7,LSL #16
        ADDCS   R5,R5,#&0100                            ; =256
        ADD     R0,R5,R7,LSR #24
        CMP     R0,R6
        MOVGT   R0,R6
        LDRB    R0,[R0,#0]
        LDRB    R0,[R3,R0,LSL #5]
        SUBS    R0,R0,R1,LSL #1
        MOVMI   R0,#0
        STRB    R0,[R12],R11
        ADDS    R7,R7,R7,LSL #16
        ADDCS   R5,R5,#&0100                            ; =256
        ADD     R0,R5,R7,LSR #24
        CMP     R0,R6
        MOVGT   R0,R6
        LDRB    R0,[R0,#0]
        LDRB    R0,[R3,R0,LSL #5]
        SUBS    R0,R0,R1,LSL #1
        MOVMI   R0,#0
        STRB    R0,[R12],R11
        ADDS    R7,R7,R7,LSL #16
        ADDCS   R5,R5,#&0100                            ; =256
        ADD     R0,R5,R7,LSR #24
        CMP     R0,R6
        MOVGT   R0,R6
        LDRB    R0,[R0,#0]
        LDRB    R0,[R3,R0,LSL #5]
        SUBS    R0,R0,R1,LSL #1
        MOVMI   R0,#0
        STRB    R0,[R12],R11
        CMP     R12,R10
        BGE     skip_3
        CMP     R5,R6
        BLE     code_0
        B       skip_1
code_3
        ADDS    R7,R7,R7,LSL #16
        SUBCS   R5,R5,#&0100                            ; =256
        SUB     R0,R5,R7,LSR #24
        CMP     R0,R4
        MOVLT   R5,R4
        MOVLT   R0,R4
        LDRB    R0,[R0,#0]
        LDRB    R0,[R3,R0,LSL #5]
        SUBS    R0,R0,R1,LSL #1
        MOVMI   R0,#0
        STRB    R0,[R12],R11
        ADDS    R7,R7,R7,LSL #16
        SUBCS   R5,R5,#&0100                            ; =256
        SUB     R0,R5,R7,LSR #24
        CMP     R0,R4
        MOVLT   R5,R4
        MOVLT   R0,R4
        LDRB    R0,[R0,#0]
        LDRB    R0,[R3,R0,LSL #5]
        SUBS    R0,R0,R1,LSL #1
        MOVMI   R0,#0
        STRB    R0,[R12],R11
        ADDS    R7,R7,R7,LSL #16
        SUBCS   R5,R5,#&0100                            ; =256
        SUB     R0,R5,R7,LSR #24
        CMP     R0,R4
        MOVLT   R5,R4
        MOVLT   R0,R4
        LDRB    R0,[R0,#0]
        LDRB    R0,[R3,R0,LSL #5]
        SUBS    R0,R0,R1,LSL #1
        MOVMI   R0,#0
        STRB    R0,[R12],R11
        ADDS    R7,R7,R7,LSL #16
        SUBCS   R5,R5,#&0100                            ; =256
        SUB     R0,R5,R7,LSR #24
        CMP     R0,R4
        MOVLT   R5,R4
        MOVLT   R0,R4
        LDRB    R0,[R0,#0]
        LDRB    R0,[R3,R0,LSL #5]
        SUBS    R0,R0,R1,LSL #1
        MOVMI   R0,#0
        STRB    R0,[R12],R11
        CMP     R12,R10
        BGE     skip_3
        CMP     R5,R6
        BLE     code_3
        B       skip_1
code_1
        MOV     R0,#0
        STRB    R0,[R12],R11
        MOV     R0,#0
        STRB    R0,[R12],R11
        MOV     R0,#0
        STRB    R0,[R12],R11
        MOV     R0,#0
        STRB    R0,[R12],R11
        CMP     R12,R10
        BGE     skip_3
        CMP     R5,R6
        BLE     code_1
        B       skip_1
skip_1
        LDR     R0,[R9,#44]
        SUBS    R0,R0,#1
        STR     R0,[R9,#44]
        ADDEQ   R2,R2,#&14
        STREQ   R2,[R9,#52]
        LDR     R5,[R2,#0]
        LDR     R6,[R2,#4]
        LDREQ   R0,[R2,#8]
        STREQ   R0,[R9,#44]
        LDR     R7,[R2,#12]
        STR     R7,[R9,#32]
        BNE     skip_2
        LDR     R0,[R2,#16]
        STR     R0,[R9,#40]
        Push    "R0,R1,R8,R9"
        LDR     R0,[R9,#48]
        LDR     R1,[R9,#40]

        TEQ     PC,PC
        MRSEQ   R8,CPSR
        MOVNE   R8,PC
        ORR     R9,R8,#3                                ; Pump up to SVC mode
        MSREQ   CPSR_c,R9
        TEQNEP  R9,#0
        Push    "lr"
        SWI     Sound_Stereo
        Pull    "lr"
        TEQ     PC,PC
        MSREQ   CPSR_c,R8
        TEQNEP  R8,#0                                   ; Back to IRQ mode
        NOP
        Pull    "R0,R1,R8,R9"

skip_2
        CMN     R5,#1
        BEQ     skip_3
        ADD     R5,R5,R4
        STR     R5,[R9,#24]
        ADD     R6,R6,R4
        STR     R6,[R9,#28]
        CMP     R8,#0
        BGT     code_0
        BLT     code_3
        BEQ     code_1
skip_3
        STR     R5,[R9,#24]
        STR     R7,[R9,#32]
        CMN     R5,#1
        MOVEQ   R0,#2
        MOVNE   R0,#8
        Pull    "PC"

VoiceUpdate
        LDR     R0,indirect_5
        CMP     R0,#0
        BEQ     VoiceFill
        LDR     R0,[R9,#4]
        STR     R0,[R9,#32]
        B       VoiceFill

VoiceGateOff
        MOV     R0,#0
10
        STRB    R0,[R12],R11
        STRB    R0,[R12],R11
        STRB    R0,[R12],R11
        STRB    R0,[R12],R11
        CMP     R12,R10
        BLT     %BT10
        MOV     R0,#1
        Pull    "PC"
        
indirect_7
        DCD     data_4 - Mod_BaseAddr
data_4
        DCD     0
        DCD     VoiceSamplesEnd - VoiceSamplesStart
        DCD     1
        DCD     &100
        DCD     &80
        DCD     -1
        DCD     -1
        DCD     -1
        DCD     -1
        DCD     -1
indirect_6
        DCD     VoiceSamplesStart - Mod_BaseAddr

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Here be samples of 8 bit mono signed linear 11025Hz
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
VoiceSamplesStart
        INCBIN  "Resources.Sounds.$VoiceName"
VoiceSamplesEnd

        END

