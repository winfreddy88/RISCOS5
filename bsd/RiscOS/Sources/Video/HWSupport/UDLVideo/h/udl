/*	$OpenBSD: udl.h,v 1.21 2013/04/15 09:23:02 mglocker Exp $ */

/*
 * Copyright (c) 2009 Marcus Glocker <mglocker@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef UDL_H
#define UDL_H

/*
 * Bulk command xfer structure.
 */
#define UDL_CMD_MAX_XFER_SIZE	(8*1024)	/* Must be at least 5K */

struct udl_cmd_buf {
	uint32_t		 off;
	uint8_t			*buf;
};

/*
 * Our per device structure.
 */
struct udl_softc {
	struct device		 sc_dev;
	struct usbd_device	*sc_udev;
	struct usbd_interface	*sc_iface;
	struct usbd_pipe	*sc_tx_pipeh;

	struct udl_cmd_buf	 sc_cmd_buf;
	uint16_t		 sc_width;
	uint16_t		 sc_height;
};

/*
 * Compression.
 */
#define UDL_HUFFMAN_RECORDS		(65536 + 1)
#define UDL_HUFFMAN_BASE		((UDL_HUFFMAN_RECORDS - 1) / 2)

extern int udl_attach(struct device *, struct device *, void *);
extern int udl_detach(struct device *, int);

extern usbd_status udl_ctrl_msg(struct udl_softc *, uint8_t, uint8_t, uint16_t, uint16_t, uint8_t *, size_t);
extern usbd_status udl_poll(struct udl_softc *, uint32_t *);
extern usbd_status udl_read_1(struct udl_softc *, uint16_t, uint8_t *);
extern usbd_status udl_set_decomp_table(struct udl_softc *, const uint8_t *, uint16_t);

extern void udl_cmd_insert_buf(struct udl_softc *, const uint8_t *, uint32_t);
extern void udl_cmd_write_reg_1(struct udl_softc *sc, uint8_t reg, uint8_t val);
extern void udl_cmd_write_reg_2(struct udl_softc *sc, uint8_t reg, uint16_t val);
extern usbd_status udl_cmd_send(struct udl_softc *);
extern usbd_status udl_init_chip(struct udl_softc *);
extern void udl_init_fb_offsets(struct udl_softc *sc, uint32_t start16, uint32_t stride16, uint32_t start8, uint32_t stride8);

#endif
