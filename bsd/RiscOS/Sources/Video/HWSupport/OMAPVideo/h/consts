/*
 * Copyright (c) 2010, RISC OS Open Ltd
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef OMAPVIDEO_CONSTS_H
#define OMAPVIDEO_CONSTS_H

#include "types.h"
#include "gvtypes.h"

/* "Constant" data - won't change once the module has initialised */

extern void *private_word;
extern int instance;
extern int memory_access_privilege; /* AP value for USR r/w, non-executable memory */

extern vdu_device_t *dev;
extern const boardconfig_t *hwconfig; /* Fixed board-specific configuration values */
extern uint8_t graphicsv_driver_number;

extern const int current_lcd; /* This is effectively const, since we currently only support one LCD */

/* Actual C const config data & lookup tables */

extern const uint8_t pixel_format_bpp[PIXELFORMAT_MAX]; /* BPP of each pixel format */
extern const uint8_t buffer_alignment_pixels[PIXELFORMAT_MAX]; /* Minimum alignment of buffers (minus one), in units of pixels */

extern const headattr_t headattrs[TARGET_MAX]; /* Hardware-specific head attributes & methods */
extern const overlayattr_t overlayattrs[OVERLAY_MAX]; /* Hardware-specific overlay attributes & methods */
extern const pixelformat_t pixelformats[PIXELFORMAT_NORMAL_MAX]; /* Mapping between GraphicsV pixel formats and OMAP pixel formats */

#ifdef DEBUGLIB
extern const char **targetnames;
extern const char *overlaynames[];
extern const char *featurenames[];
extern const char *pixelformatnames[PIXELFORMAT_MAX+1];

extern void omap_dump_videoregs(void);
extern void omap_dump_tvregs(void);
#endif

extern pixelformat findformat(pixelformat_t format);

#endif
