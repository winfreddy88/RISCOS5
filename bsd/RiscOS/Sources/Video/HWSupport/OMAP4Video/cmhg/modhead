; Copyright (c) 2010, RISC OS Open Ltd
; All rights reserved.
; 
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met: 
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
; 
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
; 
#include "Global/RISCOS.h"
#include "Global/Services.h"
#include "../VersionNum"

initialisation-code:	module_init

finalisation-code:	module_final

title-string:		COMPONENT

help-string:		COMPONENT     Module_MajorVersion_CMHG

date-string:		Module_Date_CMHG

#ifdef DEBUGLIB
command-keyword-table:	module_commands
VideoRegs(  min-args:0, max-args:0,
            help-text: "*VideoRegs reads the registers from the video controller\n",
            add-syntax:, invalid-syntax: "Syntax: *VideoRegs"),
TVMode(     min-args:3, max-args:3,
            help-text: "*TVMode calls venc_set_tvmode\n",
            add-syntax:, invalid-syntax: "Syntax: *TVMode <mode> <type> <testcard>\n"),
TVRegs(     min-args:0, max-args:0,
            help-text: "*TVRegs reads the VENC registers\n",
            add-syntax:, invalid-syntax: "Syntax: *TVRegs"),
TVOut(      min-args:1, max-args:1,
            help-text: "*TVOut switches RISC OS from LCD to TV out and vice-versa\n",
            add-syntax:, invalid-syntax: "Syntax: *TVOut <mode>\n"),
SDMARegs(   min-args:0, max-args:0,
            help-text: "*SDMARegs reads the SDMA registers\n",
            add-syntax:, invalid-syntax: "Syntax: *SDMARegs")
#endif

vector-handlers:	dispc_irq_entry/dispc_irq_handler,
			graphicsv_entry/graphicsv_handler
