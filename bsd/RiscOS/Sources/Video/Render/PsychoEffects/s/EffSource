; 
; Copyright (c) 1994, Andy Southgate
; All rights reserved.
; 
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met: 
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
; 
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
; 

; PsychoEffect module
; This module provides one useful SWI PsychoEffect_Fade, where
;R0 = address to read source from
;R1 = address to write faded data to
;R2 = size of source
;R3 = output brightness
;R4 = width of screen in bytes

;The brightness can range from 0-60.  0 produces a black output, and
;60 produces an untouched full brightness image.  If the brightness is
;not a multiple of 4 a dithered image is produced.

;Code written by Andy Southgate 1994/95.  Permission to use freely, alter
;and recompile in any shape or form, and incorporate into your own
;code is granted.

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:ModHand
        GET     Hdr:FSNumbers
        GET     Hdr:NewErrors

        GET     VersionASM

        MACRO
        fade $m0
        LDRB    R3,[R5,$m0,LSR #24]
        MOV     $m0,$m0,LSL #8
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     $m0,R4,R3,LSL #8
        MEND
        
        MACRO
        difade1 $m0
        LDRB    R3,[R5,$m0,LSR #24]
        MOV     $m0,$m0,LSL #8
        ADD     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        SUB     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     $m0,R4,R3,LSL #8
        MEND
        
        MACRO
        difade1b $m0
        LDRB    R3,[R5,$m0,LSR #24]
        MOV     $m0,$m0,LSL #8
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        ADD     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     $m0,R4,R3,LSL #8
        SUB     R5,R5,#256
        MEND

        MACRO
        difade2 $m0
        LDRB    R3,[R5,$m0,LSR #24]
        MOV     $m0,$m0,LSL #8
        ADD     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        SUB     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        ADD     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     $m0,R4,R3,LSL #8
        SUB     R5,R5,#256
        MEND

        MACRO
        difade2b $m0
        ADD     R5,R5,#256
        LDRB    R3,[R5,$m0,LSR #24]
        MOV     $m0,$m0,LSL #8
        SUB     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        ADD     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        SUB     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     $m0,R4,R3,LSL #8
        MEND

        MACRO
        difade3 $m0
        LDRB    R3,[R5,$m0,LSR #24]
        MOV     $m0,$m0,LSL #8
        ADD     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     $m0,R4,R3,LSL #8
        SUB     R5,R5,#256
        MEND

        MACRO
        difade3b $m0
        ADD     R5,R5,#256
        LDRB    R3,[R5,$m0,LSR #24]
        MOV     $m0,$m0,LSL #8
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        SUB     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     R3,R4,R3,LSL #8
        MOV     $m0,$m0,LSL #8
        ADD     R5,R5,#256
        LDRB    R4,[R5,$m0,LSR #24]
        ORR     $m0,R4,R3,LSL #8
        SUB     R5,R5,#256
        MEND

PsychoEffects_SWIBase  * &59580
PsychoEffects_ErrBase  * &81FE00
                            ^ PsychoEffects_ErrBase
ErrorNumber_PsychoBigFade   # 1
ErrorNumber_PsychoBadWidth  # 1

        AREA    |PsychoEffects$$Code|, CODE, READONLY, PIC

PsychoEffect_Code
PsychoEffect_Syntax
Module_BaseAddr
        DCD     0
        DCD     0
        DCD     0
        DCD     0
        DCD     title        - Module_BaseAddr
        DCD     help         - Module_BaseAddr
        DCD     commandtable - Module_BaseAddr
        DCD     PsychoEffects_SWIBase
        DCD     swicode      - Module_BaseAddr
        DCD     switab       - Module_BaseAddr
        DCD     0
        DCD     0
        DCD     modflags     - Module_BaseAddr
title
        DCB     "PsychoEffect", 0
help
        DCB     "Psychosis Effects", 9, 9, "$Module_MajorVersion ($Module_Date)"
      [         Module_MinorVersion <> ""
        DCB     " $Module_MinorVersion"
      ]
        DCB     0
        ALIGN
commandtable
        Command PsychoEffect, 0, 0, 0 
        DCD     0; *** END Marker ***

PsychoEffect_Help
        DCB     27,0," provides special effects for games.  It provides:",10,13,13
        DCB     31, "SWI", 34,"PsychoEffect_Fade",34,",adr_from,adr_to,size,fade,width",10,13,13
        DCB     31, "adr_from",9,"source address",10,13
        DCB     31, "adr_to",9,9,"output address",10,13
        DCB     31, "size",9,9,"size of memory block to fade",10,13
        DCB     31, "fade",9,9,"fade level. 0 is darkest (output is black), 60 is lightest",10,13
        DCB     9,9,"(image is unfaded)",10,13
        DCB     31, "width",9,9,"width of screen mode - used for dithering.",10,13,13
        DCB     "Copyright (c) 1994, Andy Southgate",10,13
        DCB     "All rights reserved."

        ALIGN

modflags
        DCD     ModuleFlag_32bit

switab
        DCB     "PsychoEffect",0
        DCB     "Fade",0
        DCB     "FadeTable",0
        DCB     0 ;*** END MARKER ***
        ALIGN

swicode
        LDR     R12,[R12]
        CMP     R11,#0
        BEQ     fadeswi
        CMP     R11,#1
        BEQ     fadetableswi
        B       unknownswierr
        
fadetableswi
        ADRL    R0,fadetable
        MOV     PC,R14
        
fadeswi
        Push    "R0-R10,R14"
        CMP     R3,#60
        Pull    "R0-R10,R14",HI
        BHI     bigfadeerr
        CMP     R4,R2
        Pull    "R0-R10,R14",HI
        BHI     badwidtherr
        CMP     R4,#31
        MOVCC   R4,#320
        TST     R4,#15
        Pull    "R0-R10,R14",NE
        BNE     badwidtherr
        
        MOV     R10,R4
        ADRL    R5,fadetable
        AND     R6,R3,#3
        BIC     R3,R3,#3
        ADD     R5,R5,R3,LSL #6
        CMP     R6,#1
        BEQ     dither1
        CMP     R6,#2
        BEQ     dither2
        CMP     R6,#3
        BEQ     dither3
        
loop
        LDMIA   R0!,{R6-R9}
        fade    R6
        fade    R7
        fade    R8
        fade    R9
        STMIA   R1!,{R6-R9}
        SUBS    R2,R2,#16
        BGT     loop
fadeins         
        Pull    "R0-R10,PC"
        
dither1
loop4
        Push    "R2"
        MOV     R2,R10
loop4b
        LDMIA   R0!,{R6-R9}
        difade1 R6
        difade1 R7
        difade1 R8
        difade1 R9
        STMIA   R1!,{R6-R9}
        SUBS    R2,R2,#16
        BGT     loop4b
        MOV     R2,R10
loop4c
        LDMIA   R0!,{R6-R9}
        difade1b R6
        difade1b R7
        difade1b R8
        difade1b R9
        STMIA   R1!,{R6-R9}
        SUBS    R2,R2,#16
        BGT     loop4c
        Pull    "R2"
        SUBS    R2,R2,R10,LSL #1
        BGT     loop4
        B       fadeins
        
dither2
loop5
        Push    "R2"
        MOV     R2,R10
loop5b
        LDMIA   R0!,{R6-R9}
        difade2 R6
        difade2 R7
        difade2 R8
        difade2 R9
        STMIA   R1!,{R6-R9}
        SUBS    R2,R2,#16
        BGT     loop5b
        MOV     R2,R10
loop5c
        LDMIA   R0!,{R6-R9}
        difade2b R6
        difade2b R7
        difade2b R8
        difade2b R9
        STMIA   R1!,{R6-R9}
        SUBS    R2,R2,#16
        BGT     loop5c
        Pull    "R2"
        SUBS    R2,R2,R10,LSL #1
        BGT     loop5
        B       fadeins
        
dither3
loop6
        Push    "R2"
        MOV     R2,R10
loop6b
        LDMIA   R0!,{R6-R9}
        difade3 R6
        difade3 R7
        difade3 R8
        difade3 R9
        STMIA   R1!,{R6-R9}
        SUBS    R2,R2,#16
        BGT     loop6b
        MOV     R2,R10
loop6c
        LDMIA   R0!,{R6-R9}
        difade3b R6
        difade3b R7
        difade3b R8
        difade3b R9
        STMIA   R1!,{R6-R9}
        SUBS    R2,R2,#16
        BGT     loop6c
        Pull    "R2"
        SUBS    R2,R2,R10,LSL #1
        BGT     loop6
        B       fadeins
        
        
        
        
white
loop2
        LDR     R4,[R0],#4
        STR     R4,[R1],#4
        SUBS    R2,R2,#4
        BGT     loop2
        B       fadeins
black
        MOV     R4,#0
loop3
        STR     R4,[R1],#4
        SUBS    R2,R2,#4
        BGT     loop3
        B       fadeins
        


unknownswierr
        ADR     R0,ErrorBlock_NoSuchSWI
        B       err
bigfadeerr
        ADR     R0,ErrorBlock_PsychoBigFade
        B       err
badwidtherr
        ADR     R0,ErrorBlock_PsychoBadWidth
err
        RETURNVS

        MakeInternatErrorBlock NoSuchSWI,,"Unknown SWI"
        MakeInternatErrorBlock PsychoBigFade,,"Too big a fade number"
        MakeInternatErrorBlock PsychoBadWidth,,"Bad R4 - must be a multiple of 32 and 31<R4<R2"
        ALIGN
        
fadetable
        INCBIN  s.LinFade
        END
        