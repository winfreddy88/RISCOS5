;
; Copyright (c) 2012, Robert Sprowson
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met: 
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
;

;----------------------------------------------------------------------------
; Dummy patch module as a vehicle for an assortment of patches from
; RISC OS 2 and RISC OS 3 era, some of which may still be RMEnsure'd by
; applications authors.
;
; However, rather than use up lots of ROM module slots and *UNPLUG frugal
; bits this one module carries them all. The patch modules may not be
; killed, but this module as a whole can be unplugged.
;
; Don't RMKill this module though if loaded in RAM, since the patch modules
; will then be in abandoned RMA but still linked into the module chain!
; For this reason, standalone targets will fault assembly.
;----------------------------------------------------------------------------

        AREA    |LegacyModules$$Code|, CODE, READONLY, PIC

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:ModHand
        GET     Hdr:MsgTrans
        GET     Hdr:FSNumbers
        GET     Hdr:NewErrors

        GET     VersionASM

  [ :DEF: standalone
    [ standalone
        ! 1,    "Do not make RAM loading versions of this module"
    ]
  ]
Module_BaseAddr
        DCD     0                               ; Start
        DCD     Init    - Module_BaseAddr
        DCD     0                               ; Die
        DCD     0                               ; Service
        DCD     Title   - Module_BaseAddr
        DCD     Helpstr - Module_BaseAddr
        DCD     0                               ; Helptable
  [ :LNOT: No32bitCode
        DCD     0                               ; MySWIBase
        DCD     0                               ; SWIhandler
        DCD     0                               ; SWInames
        DCD     0                               ; SWIdecode
        DCD     0                               ; Messages
        DCD     Flags   - Module_BaseAddr
  ]

Title   DCB     "LegacyModules", 0
Helpstr DCB     "LegacyModules", 9, "$Module_MajorVersion ($Module_Date)", 0
        ALIGN


        MACRO
        PatchModule $title
        ; Size anchor
        DCD     %FT40 - Patch_$title
Patch_$title
        ; The module header
        DCD     0
        DCD     0
        DCD     %FT10 - Patch_$title            ; Die
        DCD     0
        DCD     %FT20 - Patch_$title            ; Title
        DCD     %FT30 - Patch_$title            ; Helpstr
        DCD     0
  [ :LNOT: No32bitCode
        DCD     0, 0, 0, 0, 0
        DCD     Flags - Patch_$title            ; Flags
  ]
10
        ADR     r4, %FT20
        B       PatchWillNotDie
20
        DCB     "$title", 0
30
        DCB     "$title", 9, "$Module_MajorVersion ($Module_Date)", 0
        ALIGN
40
        MEND

PatchWillNotDie
        ; Common tail for all patch finalisations
        MOV     r6, lr

        ADR     r0, ErrorBlock_ModuleInUse
        MOV     r1, #0
        MOV     r2, #0
        MOV     r3, #252
        SWI     XMessageTrans_ErrorLookup

        ; V set by MessageTrans
        MOV     pc, r6

        MakeErrorBlock ModuleInUse

        PatchModule NetUtils
        PatchModule GameModes
        PatchModule WimpUtils
        PatchModule IRQUtils
        
  [ :LNOT: No32bitCode
Flags   DCD     ModuleFlag_32bit
  ]

Init
        MOV     r6, lr

        MOV     r0, #ModHandReason_AddArea
        ADR     r1, Patch_NetUtils
        SWI     XOS_Module

        MOVVS   r0, #ModHandReason_AddArea
        ADR     r1, Patch_GameModes
        SWI     XOS_Module

        MOVVS   r0, #ModHandReason_AddArea
        ADR     r1, Patch_WimpUtils
        SWI     XOS_Module

        MOVVS   r0, #ModHandReason_AddArea
        ADR     r1, Patch_IRQUtils
        SWI     XOS_Module

        ; If any of the above failed, tough
        CLRV
        MOV     pc, r6

        END

